{"projectName":"dayforce","totalTests":1,"passed":1,"failed":0,"skipped":0,"coveredLines":52,"missedLines":3854,"coveragePercentage":1.33,"moduleStatus":[{"name":"dayforce","totalTests":1,"passed":1,"failed":0,"skipped":0,"tests":[{"name":"testCreateCache","status":"PASSED"}]}],"moduleCoverage":[{"name":"dayforce","coveredLines":52,"missedLines":3854,"coveragePercentage":1.33,"sourceFiles":[{"name":"types.bal","coveredLines":[12,18,20,26,38,39,401,3352,3938,5666,6343,6459],"missedLines":[44,46,49,54,56,58,61,62,84,89,93,116,122,127,139,144,147,160,167,174,178,186,190,197,202,207,214,218,223,230,235,413,420,424,429,433,437,444,454,458,462,499,506,513,518,525,532,539,546,553,560,564,572,579,586,591,597,601,606,615,619,630,639,644,649,657,664,668,682,687,696,701,708,712,717,724,728,735,738,740,746,752,769,774,782,790,833,840,844,858,868,872,877,889,898,906,910,919,924,928,935,943,950,979,984,993,994,1005,1023,1030,1035,1053,1057,1060,1062,1088,1101,1105,1110,1113,1117,1122,1133,1140,1145,1149,1168,1173,1187,1191,1195,1199,1211,1217,1224,1228,1240,1247,1254,1259,1265,1269,1274,1279,1284,1319,1337,1342,1349,1361,1368,1374,1378,1387,1395,1407,1411,1412,1417,1422,1427,1434,1438,1467,1480,1495,1512,1516,1527,1535,1545,1552,1559,1564,1569,1577,1581,1585,1594,1600,1604,1623,1628,1639,1644,1649,1655,1662,1668,1673,1680,1685,1713,1726,1735,1742,1779,1783,1794,1811,1817,1823,1828,1833,1840,1852,1858,1863,1869,1884,1893,1900,1907,1912,1918,1923,1930,1935,1945,1950,1960,1969,1976,1980,1987,1994,2001,2008,2016,2034,2042,2047,2052,2060,2065,2073,2078,2097,2104,2108,2112,2136,2141,2148,2153,2162,2166,2188,2193,2197,2208,2213,2224,2229,2234,2242,2247,2251,2256,2264,2271,2275,2290,2295,2300,2304,2311,2315,2322,2329,2336,2343,2409,2413,2419,2431,2438,2447,2452,2456,2462,2468,2472,2477,2482,2489,2494,2506,2513,2518,2521,2535,2543,2550,2554,2559,2563,2571,2579,2589,2597,2611,2644,2650,2656,2663,2697,2707,2714,2724,2728,2733,2737,2744,2757,2765,2770,2775,2779,2784,2789,2794,2811,2819,2839,2844,2849,2857,2876,2883,2888,2896,2936,2941,2954,2968,3038,3042,3047,3059,3063,3069,3096,3102,3112,3125,3130,3135,3140,3156,3163,3214,3244,3252,3256,3263,3282,3288,3293,3305,3316,3341,3345,3357,3361,3367,3372,3376,3414,3423,3430,3444,3449,3457,3464,3468,3473,3478,3488,3492,3504,3508,3515,3527,3532,3539,3558,3566,3571,3576,3580,3584,3601,3605,3610,3615,3625,3631,3647,3654,3668,3673,3677,3682,3689,3699,3703,3708,3715,3739,3746,3751,3760,3768,3773,3784,3790,3798,3802,3809,3814,3829,3838,3845,3850,3858,3863,3872,3893,3898,3904,3913,3920,3925,3931,3943,3963,3970,3984,3989,4009,4015,4029,4034,4046,4051,4056,4061,4066,4073,4078,4088,4093,4098,4112,4119,4126,4136,4141,4150,4155,4159,4166,4174,4186,4191,4197,4204,4211,4216,4221,4225,4229,4247,4266,4273,4308,4314,4325,4332,4340,4347,4352,4358,4363,4368,4376,4401,4408,4413,4440,4445,4452,4459,4467,4475,4484,4490,4510,4515,4519,4533,4540,4544,4558,4566,4569,4570,4576,4583,4587,4591,4597,4604,4610,4616,4621,4625,4629,4660,4664,4668,4673,4678,4693,4699,4731,4736,4743,4750,4754,4759,4763,4776,4789,4794,4810,4829,4836,4840,4852,4860,4872,4901,4919,4923,4930,4952,4958,4965,4969,4975,4980,4987,5014,5026,5031,5036,5045,5052,5061,5068,5072,5079,5086,5095,5100,5104,5111,5118,5122,5132,5138,5145,5159,5163,5168,5173,5192,5197,5208,5215,5224,5229,5235,5239,5246,5260,5264,5265,5269,5274,5279,5294,5299,5304,5309,5313,5317,5324,5329,5334,5362,5369,5379,5385,5390,5399,5418,5422,5429,5437,5442,5452,5460,5467,5472,5481,5486,5491,5497,5509,5518,5525,5531,5538,5546,5552,5566,5571,5576,5585,5592,5596,5603,5608,5620,5629,5641,5648,5654,5659,5671,5684,5691,5699,5704,5711,5716,5724,5757,5761,5769,5774,5781,5785,5792,5796,5806,5811,5816,5822,5833,5839,5844,5858,5875,5909,5916,5927,5932,5939,5943,5960,5965,5970,5983,5989,5995,6002,6009,6014,6018,6022,6028,6029,6030,6034,6041,6046,6067,6075,6079,6084,6089,6102,6106,6112,6116,6129,6147,6160,6188,6196,6216,6221,6234,6249,6254,6261,6268,6278,6286,6308,6313,6318,6326,6338,6348,6357,6364,6369,6390,6394,6406,6416,6421,6463,6472,6477,6483,6522,6533,6538,6549,6554,6559,6566,6573,6581,6586,6591,6598,6605,6623,6630,6634,6639,6647,6655,6665,6670,6678,6705,6713,6720,6725,6733,6738,6743,6750,6755,6760,6768,6776,6785,6793,6808,6813,6818,6823,6832,6837,6841,6847,6852,6857,6896,6901,6908,6912,6916,6920,6927,6934,6963,6970,6988,6994,7001,7006,7021,7032,7040,7047,7052,7057,7064,7069,7074,7083,7094,7116,7125,7132,7143,7160,7167,7174,7178,7194,7200,7213,7218,7225,7233,7240,7245,7250,7257,7264,7268,7276,7280,7292,7296,7314,7319,7325,7342,7347,7354,7358,7365],"coveragePercentage":1.42,"sourceCode":"// AUTO-GENERATED FILE. DO NOT MODIFY.\n// This file is auto-generated by the Ballerina OpenAPI tool.\n\nimport ballerina/http;\n\n# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.\n@display {label: \"Connection Config\"}\npublic type ConnectionConfig record {|\n    # Configurations related to client authentication\n    http:CredentialsConfig auth;\n    # The HTTP version understood by the client\n    http:HttpVersion httpVersion \u003d http:HTTP_2_0;\n    # Configurations related to HTTP/1.x protocol\n    ClientHttp1Settings http1Settings?;\n    # Configurations related to HTTP/2 protocol\n    http:ClientHttp2Settings http2Settings?;\n    # The maximum time to wait (in seconds) for a response before closing the connection\n    decimal timeout \u003d 60;\n    # The choice of setting `forwarded`/`x-forwarded` header\n    string forwarded \u003d \"disable\";\n    # Configurations associated with request pooling\n    http:PoolConfiguration poolConfig?;\n    # HTTP caching related configurations\n    http:CacheConfig cache?;\n    # Specifies the way of handling compression (`accept-encoding`) header\n    http:Compression compression \u003d http:COMPRESSION_AUTO;\n    # Configurations associated with the behaviour of the Circuit Breaker\n    http:CircuitBreakerConfig circuitBreaker?;\n    # Configurations associated with retrying\n    http:RetryConfig retryConfig?;\n    # Configurations associated with inbound response size limits\n    http:ResponseLimitConfigs responseLimits?;\n    # SSL/TLS-related options\n    http:ClientSecureSocket secureSocket?;\n    # Proxy server related options\n    http:ProxyConfig proxy?;\n    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default\n    boolean validation \u003d true;\n|};\n\n# Provides settings related to HTTP/1.x protocol.\npublic type ClientHttp1Settings record {|\n    # Specifies whether to reuse a connection for multiple requests\n    http:KeepAlive keepAlive \u003d http:KEEPALIVE_AUTO;\n    # The chunking behaviour of the request\n    http:Chunking chunking \u003d http:CHUNKING_AUTO;\n    # Proxy server related options\n    ProxyConfig proxy?;\n|};\n\n# Proxy server configurations to be used with the HTTP client endpoint.\npublic type ProxyConfig record {|\n    # Host name of the proxy server\n    string host \u003d \"\";\n    # Proxy server port\n    int port \u003d 0;\n    # Proxy server username\n    string userName \u003d \"\";\n    # Proxy server password\n    @display {label: \"\", kind: \"password\"}\n    string password \u003d \"\";\n|};\n\npublic type BackgroundScreeningPackageArr BackgroundScreeningPackage[];\n\npublic type BackgroundScreeningBillingCodeArr BackgroundScreeningBillingCode[];\n\npublic type BackgroundScreeningStatusUrlReportArr BackgroundScreeningStatusUrlReport[];\n\npublic type BackgroundScreeningReportArr BackgroundScreeningReport[];\n\npublic type ExtensiblePropertyArr ExtensibleProperty[];\n\npublic type JobFeedArr JobFeed[];\n\npublic type LaborMetricsCode record {\n    LaborMetricsType LaborMetricsType?;\n    string ClockTransferCode?;\n    string LedgerCode?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BackgroundScreeningPackage record {\n    string ProviderReference?;\n    BackgroundScreeningProviderPackage[] Packages?;\n};\n\npublic type EmployeeMUSTaxDetails record {\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeUSStateTax record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    State State?;\n    StateFilingStatus FilingStatus?;\n    string StateFilingStatusDisplayName?;\n    int:Signed32 Allowances?;\n    decimal AdditionalAmount?;\n    int:Signed32 DependentAllowances?;\n    int:Signed32 PersonalAllowances?;\n    int:Signed32 AdditionalAllowances?;\n    boolean IsTaxExempt?;\n    string AlternateCalculationCode?;\n    string AlternateCalculationCodeDisplayName?;\n    decimal ExemptionAmount?;\n    decimal AdditionalTaxPercent?;\n    decimal AdditionalExemptionAmount?;\n    boolean IsLocked?;\n    boolean PRYoungEntrepreneurExemptionOptOut?;\n    int:Signed32 AdoptionDependents?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PaginatedPayload_EarningStatementHeader record {\n    EarningStatementHeader Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type CandidateRTWRejectionReason record {\n    string ReasonCode?;\n    string ReasonDescription?;\n};\n\npublic type LMSEmployeeCertification record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    LMSCertification LMSCertification?;\n    string CertificationNumber?;\n    Course Course?;\n    TrainingProgram TrainingProgram?;\n    LMSAssignmentMethod LMSAssignmentMethod?;\n    LMSCertificationStatus LMSCertificationStatus?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_PayClass record {\n    PayClass Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeNZLKiwiSaver record {\n};\n\npublic type GlobalProperty record {\n    int:Signed32 DataType?;\n    int:Signed32 EmployeeCardinality?;\n    boolean IsEditable?;\n    string DataTypeParam?;\n    boolean GenerateHREvent?;\n    int:Signed32 Sequence?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeLaborMetrics record {\n    string LaborMetricsTypeXRefCode?;\n    string LaborMetricsTypeName?;\n    string LaborMetricsCodeXRefCode?;\n    string LaborMetricsCodeName?;\n};\n\npublic type BackgroundScreeningAssociatedPackage record {\n    string PackageId?;\n    string Name?;\n    string Description?;\n    boolean IncludeRTW?;\n};\n\npublic type EmployeeEarningLimitCollection record {\n    EmployeeEarningLimit[] Items?;\n};\n\npublic type Docket record {\n    string LedgerCode?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeHRIncidentNoteCollection record {\n    EmployeeHRIncidentNote[] Items?;\n};\n\npublic type PayGrade record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeDocumentManagementSecurityGroup record {\n    EmployeeDocumentManagementSecurityGroup[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Associations record {\n    int:Signed32 _Total?;\n    AssociationDetails[] Values?;\n};\n\npublic type PayrollPayeeCategory record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EarningStatementHeader record {\n    string EarningStatementHeaders?;\n};\n\npublic type Payload_IEnumerable_EmployeeSkill record {\n    EmployeeSkill[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type TimeZone record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeScheduleLaborMetricPostAPIRequestDTO record {\n    string CodeXRefCode;\n    string TypeXRefCode;\n};\n\npublic type Employee record {\n    string AvatarUri?;\n    string BadgeNumber?;\n    boolean BioExempt?;\n    string BirthDate?;\n    string BirthCountry?;\n    string BirthState?;\n    string BirthCity?;\n    string ChecksumTimestamp?;\n    boolean ClockSupervisor?;\n    string COBRANotificationSentDate?;\n    int:Signed32 COBRANotificationStatus?;\n    Culture Culture?;\n    string DateOfDeath?;\n    string EligibleForRehire?;\n    string EmployeePin?;\n    string EntitlementOverrideDate?;\n    string EstimatedReturnDate?;\n    string ExportDate?;\n    string FederatedId?;\n    string Gender?;\n    string HireDate?;\n    string HomePhone?;\n    string IsAboriginal?;\n    string IsVisibleMinority?;\n    boolean EligibleForOnDemandPay?;\n    boolean EligibleForDFWalletPayCard?;\n    string EmployeeLatestUpdatedTimestamp?;\n    string LastPayrollNewHireExportDate?;\n    string Nationality?;\n    string NewHireApprovalDate?;\n    boolean NewHireApproved?;\n    string NewHireApprovedBy?;\n    string OriginalHireDate?;\n    boolean PhotoExempt?;\n    string PPACAOverrideDate?;\n    string RegisteredDisabled?;\n    boolean RequiresExitInterview?;\n    string SeniorityDate?;\n    string SocialSecurityNumber?;\n    string SSNCountryCode?;\n    string SSNExpiryDate?;\n    string StartDate?;\n    boolean TaxExempt?;\n    string TaxpayerId?;\n    string TerminationDate?;\n    string VeteranSeparationDate?;\n    int:Signed32 FirstTimeAccessEmailSentCount?;\n    int:Signed32 FirstTimeAccessVerificationAttempts?;\n    boolean SendFirstTimeAccessEmail?;\n    EmployeeBadge EmployeeBadge?;\n    EmployeeBadgeCollection Badges?;\n    string PreStartDate?;\n    string PayrollKey?;\n    string LoginId?;\n    Location HomeOrganization?;\n    string EmployeeNumber?;\n    EmployeeEmploymentStatusCollection EmploymentStatuses?;\n    EmployeeWorkAssignmentCollection WorkAssignments?;\n    PersonContactCollection Contacts?;\n    PersonAddressCollection Addresses?;\n    EmployeeRoleCollection Roles?;\n    EmployeeManagerCollection EmployeeManagers?;\n    EmployeeWorkAssignmentManagerCollection EmployeeWorkAssignmentManagers?;\n    EmployeeCompensationCollection CompensationSummary?;\n    AppUserSSOCollection SSOAccounts?;\n    EmployeeMaritalStatusCollection MaritalStatuses?;\n    EmployeeLocationCollection Locations?;\n    BioSensitivityLevel BioSensitivityLevel?;\n    CitizenshipType CitizenshipType?;\n    SchoolYear SchoolYear?;\n    EmployeeHealthWellnessCollection HealthWellnessDetails?;\n    EmployeeCourseCollection Courses?;\n    EmployeeVolunteerListCollection VolunteerLists?;\n    EmployeeHRIncidentCollection HRIncidents?;\n    EmployeeSkillCollection Skills?;\n    EmployeeTrainingProgramCollection TrainingPrograms?;\n    EmployeeUnionCollection UnionMemberships?;\n    EmployeeEmploymentTypeCollection EmploymentTypes?;\n    HighlyCompensatedEmployeeCollection HighlyCompensatedEmployees?;\n    EmployeePayGradeRateCollection PayGradeRates?;\n    EmployeeDirectDepositCollection DirectDeposits?;\n    EmployeeIRLTaxPAYEExclusionCollection IRLTaxPAYEExclusionInfo?;\n    EmployeeIRLTaxPRSICollection IRLTaxPRSIInfo?;\n    EmployeeIRLTaxRPNCollection IRLTaxRPNInfo?;\n    EmployeeIRLTaxEWSSCollection IRLTaxEWSSInfo?;\n    EmployeeCANFederalTaxCollection CANFederalTaxes?;\n    EmployeeCANStateTaxCollection CANStateTaxes?;\n    EmployeeUSFederalTaxCollection USFederalTaxes?;\n    EmployeeMUSTaxDetailsCollection MUSTaxes?;\n    EmployeeAUSFederalTaxCollection AUSFederalTaxes?;\n    EmployeePayrollTaxCollection EmployeePayrollTaxes?;\n    EmployeePayrollTaxParameterCollection EmployeePayrollTaxParameters?;\n    EmployeeUSStateTaxCollection USStateTaxes?;\n    EmergencyContactCollection EmergencyContacts?;\n    EmployeeEthnicityCollection Ethnicities?;\n    EmployeeDisabilityCollection Disabilities?;\n    EmployeeVeteransStatusCollection VeteranStatuses?;\n    PRGLSplitSetCollection GLSplits?;\n    EmployeePropertyValueCollection EmployeeProperties?;\n    EmployeeGlobalPropertyValueCollection GlobalProperties?;\n    EmployeeDefaultLaborCollection LaborDefaults?;\n    DocMgmtSecurityGroupUserMapCollection DocumentManagementSecurityGroups?;\n    EmployeeClockDeviceGroupCollection ClockDeviceGroups?;\n    EmployeePayAdjCodeGroupListCollection EmployeePayAdjustCodeGroups?;\n    UserPayAdjCodeGroupCollection UserPayAdjustCodeGroups?;\n    EmployeeWorkContractCollection WorkContracts?;\n    EmployeePerformanceRatingCollection PerformanceRatings?;\n    EmployeeEIRateCollection EIRates?;\n    EmployeeUSTaxStatusCollection USTaxStatuses?;\n    EmployeeCANTaxStatusCollection CANTaxStatuses?;\n    EmployeeOrgUnitInfoCollection OrgUnitInfos?;\n    EmployeeWorkAssignmentManagerCollection ManagedEmployees?;\n    EmployeeConfidentialIdentificationCollection ConfidentialIdentification?;\n    LMSEmployeeCertificationCollection EmployeeCertifications?;\n    EmployeeEmploymentAgreementCollection EmploymentAgreements?;\n    EmployeeHRPolicyCollection HRPolicies?;\n    UserEmployeeAuthorityTypeAssignmentCollection AuthorizationAssignments?;\n    GenderIdentity GenderIdentity?;\n    EmployeeAssignedSexAndGenderIdentityCollection EmployeeAssignedSexAndGenderIdentities?;\n    EmployeeOnboardingPolicyCollection OnboardingPolicies?;\n    PayPeriodInformationCollection PayPeriodInformation?;\n    EmployeeEarningsCollection EarningElections?;\n    EmployeeDeductionsCollection DeductionElections?;\n    EmployeeManagerCollection LastActiveManagers?;\n    EmployeeDependentsBeneficiariesCollection DependentsBeneficiaries?;\n    EmployeeUKTaxDetailsCollection UKTaxDetails?;\n    EmployeeUKStudentLoanCollection UKStudentLoan?;\n    EmployeeUKPostgraduateLoanCollection UKPostgraduateLoan?;\n    EmployeeUKIrregularPaymentDetailsCollection EmployeeUKIrregularPaymentDetails?;\n    string ContinuousEmploymentStartDate?;\n    string LSLEligibilityDate?;\n    EmployeeUKNIDetailsCollection UKNIDetails?;\n    AppUser UserAccount?;\n    LastNamePrefix LastNamePrefix?;\n    LastNamePrefix LastNamePrefixAtBirth?;\n    NameAffix NameAffix?;\n    NameAffix NameAffixAtBirth?;\n    string ProfessionalTitle?;\n    EmployeeAUSSuperannuationCollection AUSSuperannuation?;\n    EmployeeAUSSuperannuationRulesCollection AUSSuperannuationRules?;\n    string TerminationNoticeDate?;\n    string RetirementRequestDate?;\n    EmployeeShortTimeWorkCollection EmployeeShortTimeWork?;\n    EmployeeDEUTaxSocialInsuranceCollection DEUTaxSocialInsurance?;\n    DEUEmployeeAccidentInsuranceCollection DEUEmployeeAccidentInsurance?;\n    DEUEmployeeWageTaxCollection DEUEmployeeWageTax?;\n    EmployeeNZLKiwiSaver[] NZLKiwiSaver?;\n    boolean UnknownBirthDate?;\n    string XRefCode?;\n    string NewXRefCode?;\n    string CommonName?;\n    string DisplayName?;\n    string FirstName?;\n    string LastName?;\n    string Initials?;\n    string MaidenName?;\n    string MiddleName?;\n    string PreferredLastName?;\n    string SecondLastName?;\n    string Suffix?;\n    string Title?;\n    string PreviousLastName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BusinessUnit record {\n    string BusinessUnitGlobalId?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string LedgerCode?;\n    BusinessUnitParentAssignment[] BusinessUnitParents?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type JobSOC record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeBalanceTransactionPatchResponse record {\n    string EmployeeBalanceTransactionXRefCode?;\n};\n\npublic type Payload_IEnumerable_EmployeeDefaultLabor record {\n    EmployeeDefaultLabor[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeEmploymentTypeCollection record {\n    EmployeeEmploymentType[] Items?;\n};\n\npublic type EmployeeUKIrregularPaymentDetailsCollection record {\n    EmployeeUKIrregularPaymentDetails[] Items?;\n};\n\npublic type EmployeeHighlyCompensatedEmployeeIndicator record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean IsHCE?;\n    string LastModifiedTimestamp?;\n};\n\npublic type JobPostingResponseModel record {\n    string JobId?;\n    string JobTitle?;\n    string JobCompany?;\n    string JobLocation?;\n    string JobUrl?;\n    string JobMeta?;\n    string JobRequisitionId?;\n};\n\npublic type EmployeeIRLTaxPRSICollection record {\n    EmployeeIRLTaxPRSI[] Items?;\n};\n\npublic type EmployeeManagerCollection record {\n    EmployeeManager[] Items?;\n};\n\npublic type PayrollElection record {\n    boolean IsNew?;\n    string ElectionXrefCode?;\n    string Code?;\n    string Type?;\n    string TypeCode?;\n    string EarningDeductionXRefCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string CreatedDate?;\n    string LastModifiedTimestamp?;\n    string Source?;\n    string Schedule?;\n    string ScheduleXRefCode?;\n    boolean IsBlocked?;\n    int:Signed32 IsOptOut?;\n    string OrgUnitXRefCode?;\n    string DeptJobXRefCode?;\n    string SourceTypeXRefCode?;\n    string PayeePayableTo?;\n    string DefaultPayee?;\n    string DefaultPayeeXRefCode?;\n    string PensionTracingNumber?;\n    boolean IsCreatedByBenefits?;\n    boolean ContinuePaymentOnStatutoryPay?;\n    decimal ArrearMultipleLimitOption?;\n    PayrollEmployeeDeductionParameter[] EmployeeDeductionParams?;\n    PayrollEmployeeEarningParameter[] EmployeeEarningParams?;\n    PayrollEmployeeDeductionLimit[] EmployeeDeductionLimits?;\n    PayrollEmployeeEarningLimit[] EmployeeEarningLimits?;\n    PRPayeeEarning[] EmployeePayeeEarnings?;\n    PRPayeeDeduction[] EmployeePayeeDeductions?;\n    EmployeeDeductionPayeeParameter[] EmployeeDeductionPayeeParameters?;\n    EmployeeEarningPayeeParameter[] EmployeeEarningPayeeParameters?;\n    string ExternalXrefCode?;\n};\n\npublic type EmployeeGLSplitSetDetailLaborMetricCodes record {\n    string LaborMetricsTypeXRefCode?;\n    string LaborMetricsTypeName?;\n    string LaborMetricsCodeXRefCode?;\n    string LaborMetricsCodeName?;\n};\n\npublic type DeductionType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LaborCostTotalResult record {\n    decimal LaborCost?;\n    decimal LaborHours?;\n};\n\npublic type SafetyHealthType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BackgroundScreeningProviderStatuses record {\n    string ProviderReference?;\n    string[] OrderStatuses?;\n    string[] AdjudicationStatuses?;\n    string[] ResultStatuses?;\n};\n\npublic type EmployeeEarningParameter record {\n    EarningParameter EarningParameter?;\n    decimal Value?;\n    decimal PayGroupValue?;\n    string LastModifiedTimestamp?;\n};\n\npublic type WithholdingVariationAmountType record {\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type ScheduleChangePolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmploymentAgreementDuration record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AppUserSSOCollection record {\n    EmployeeSSOAccount[] Items?;\n};\n\npublic type EmployeeVeteransStatus record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean IsVevraa?;\n    DFVeteransStatus VeteransStatus?;\n    string LastModifiedTimestamp?;\n};\n\npublic type TipTypeGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmploymentTypeConfig record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_PayClass record {\n    PayClass[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type FileDetails record {\n    string ContentType?;\n    string Data?;\n    string FileName?;\n};\n\npublic type EmployeeWorkAssignmentManagerCollection record {\n    EmployeeWorkAssignmentManager[] Items?;\n};\n\npublic type CandidateApplicationStatusUpdatesPaginationModel record {\n    string HasUnretrievedStatuses?;\n    CandidateApplicationStatusUpdatesModel[] ApplicationStatusUpdates?;\n};\n\npublic type EarningCountry record {\n    string TaxComplianceName?;\n    string TaxComplianceXRefCode?;\n    string EarningTypeName?;\n    string EarningTypeXRefCode?;\n    string CountryCode?;\n    string CountryName?;\n};\n\npublic type PRGLSplitSetCollection record {\n    PRGLSplitSet[] Items?;\n};\n\npublic type AuthorizationAssignment record {\n    AuthorityType AuthorityType?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string AuthorizedPersonnelFirstName?;\n    string AuthorizedPersonnelLastName?;\n    string AuthorizedPersonnelMiddleName?;\n    string AuthorizedPersonnelXrefCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeDeductionLimit record {\n    DeductionLimit DeductionLimit?;\n    decimal LimitAmount?;\n    decimal LimitPercent?;\n    decimal PayGroupLimitAmount?;\n    decimal PayGroupLimitPercent?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Awards record {\n    int:Signed32 _Total?;\n    AwardDetails[] Values?;\n};\n\npublic type Payload_List_EarningStatementDocument record {\n    EarningStatementDocument[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EarningPayeeEarningLimit record {\n    decimal LimitAmount?;\n    decimal LimitPercent?;\n    string LimitTypeXRefCode?;\n    string LimitTypeName?;\n    string EarningLimitXRefCode?;\n};\n\npublic type WorkContract record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeAUSSuperannuationRulesCollection record {\n    EmployeeAUSSuperannuationRules[] Items?;\n};\n\npublic type MealBreaks record {\n    string PunchXRefCode?;\n    string Type?;\n    string TimeStart?;\n    string TimeEnd?;\n    string TimeStartRaw?;\n    string TimeEndRaw?;\n    decimal NetHours?;\n    string StartExceptionCode?;\n    string EndExceptionCode?;\n    boolean IsAutoInjected?;\n    string LastModifiedTimestampUtc?;\n};\n\npublic type CarrierFeeds record {\n    BenefitsDFLinkExportCarrierInfo Header?;\n    BenefitsDFLinkExportRecord[] EmployeeRecords?;\n};\n\npublic type DeductionCountry record {\n    string TaxComplianceName?;\n    string TaxComplianceXRefCode?;\n    string TaxTypeName?;\n    string TaxTypeCode?;\n    string CountryCode?;\n    string CountryName?;\n};\n\npublic type Payload_IEnumerable_EmployeeShortTimeWork record {\n    EmployeeShortTimeWork[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type HRIncidentType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeBalanceTransactionPostResponse record {\n    string EmployeeBalanceTransactionXRefCode?;\n};\n\npublic type Validation record {\n    string[] Warnings?;\n    string[] Errors?;\n};\n\npublic type PRGLSplitSetDetail record {\n    decimal LaborPercentage?;\n    boolean IsPrimary?;\n    PRGLSplitSetDetailMetricCodeCollection PRGLSplitSetDetailMetricCodes?;\n    string LastModifiedTimestamp?;\n};\n\npublic type DataEntryDeleteModel record {\n    int DataEntryXRefCode?;\n};\n\npublic type ProcessResult record {\n    string Code?;\n    string Context?;\n    string Level?;\n    string Message?;\n};\n\npublic type Payload_Object record {\n    record {} Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PaginatedPayload_IEnumerable_Course record {\n    Course[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type PaginatedPayload_IEnumerable_PolicyAssociation record {\n    PolicyAssociation[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type BenefitsDFLinkExportCarrierInfo record {\n    string RecordType?;\n    string FileFormatMajorVersion?;\n    string FileFormatMinorVersion?;\n    string CTCReceiverId?;\n    string CarrierName?;\n    string CarrierFEINNumber?;\n    string MasterPolicyNumber?;\n    string EmployerName?;\n    string EmployerFEINNumber?;\n    string EmployerDivisionNumber?;\n    string PlanStartDate?;\n    string CreateDate?;\n    string ClientId?;\n    string CorrelationId?;\n};\n\npublic type Payload_IEnumerable_EmployeeDirectDeposit record {\n    EmployeeDirectDeposit[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeUSTaxStatus record {\n    string StateCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    TaxPropertyCollection TaxPropertyCollection?;\n    string LastModifiedTimestamp?;\n};\n\npublic type State record {\n    string Name?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayGroupCalendarDetails record {\n    string PeriodStartDate?;\n    string PeriodEndDate?;\n    string TimeCollectionStartDate?;\n    string TimeCollectionEndDate?;\n    string OffsetPayPeriodStartDate?;\n    string OffsetPayPeriodEndDate?;\n    string ApproveByDate?;\n    string TransmitByDate?;\n    string CommitByDate?;\n    boolean PayrollCommitted?;\n    string DataGateOpen?;\n    string DataGateClose?;\n    string ImpoundBy?;\n    string PayDate?;\n    string ContractPayDate?;\n    string LedgerCode1?;\n    string LedgerCode2?;\n    decimal GLAccrualPercent?;\n    string PayPeriod?;\n    string PayPeriodSuffix?;\n    boolean Locked?;\n    string LockDate?;\n    int:Signed32 LockedBy?;\n    string AutoLockDate?;\n    string SupervisorDate?;\n    boolean Transmitted?;\n    string TransmittedDate?;\n    int:Signed32 TransmittedBy?;\n    boolean Approved?;\n    string ApprovedDate?;\n    int:Signed32 ApprovedBy?;\n    boolean Closed?;\n    string ClosedDate?;\n    int:Signed32 ClosedBy?;\n    boolean ChecklistClosed?;\n    string ChecklistClosedDate?;\n    int:Signed32 ChecklistClosedBy?;\n    string ArrearsStart?;\n    string ArrearsEnd?;\n    boolean FuturePunchesEnabled?;\n};\n\npublic type DocMgmtFileProcessedResponse record {\n    int:Signed32 Index?;\n    string DocumentGUID?;\n    string UploadStatus?;\n    string Message?;\n};\n\npublic type EmployeeUKPostgraduateLoanCollection record {\n    EmployeeUKPostgraduateLoan[] Items?;\n};\n\npublic type EmployeePerformanceRating record {\n    string Comments?;\n    string NextReviewDate?;\n    PerformanceCycle PerformanceCycle?;\n    PFRatingScale PerformanceRatingScale?;\n    PerformanceRating PerformanceRating?;\n    decimal RatingScore?;\n    string ReviewDate?;\n    BaseEmployeeSubset Reviewer?;\n    string ReviewPeriodStartDate?;\n    string ReviewPeriodEndDate?;\n    string LastModifiedTimestamp?;\n};\n\npublic type CertificationDetails record {\n    string Title?;\n    string StartDateMonth?;\n    string StartDateYear?;\n    string EndDateMonth?;\n    string EndDateYear?;\n    boolean EndCurrent?;\n    string Description?;\n};\n\npublic type PayPeriodInformationCollection record {\n    PayPeriodInformation[] Items?;\n};\n\npublic type Payload_IEnumerable_ExtensibleProperty record {\n    ExtensibleProperty[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PayrollEmployeeEarningLimit record {\n    string LimitTypeCodeName?;\n    decimal LimitAmount?;\n    decimal LimitPercent?;\n    string ShortNameFormattedAmount?;\n    string ShortNameFormattedPercent?;\n    decimal PayGroupDefaultLimitAmount?;\n    decimal PayGroupDefaultLimitPercent?;\n    string PREarningLimitXRefCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type JobFunction record {\n    int:Signed32 Level?;\n    boolean UsableForExternalPosting?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BenefitsDFLinkExportContact record {\n    string RecordType?;\n    string ContactInformation?;\n    string CountryCode?;\n    int:Signed32 ContactInformationCategoryCode?;\n    string ContactInformationType?;\n};\n\npublic type PersonAddressCollection record {\n    PersonAddress[] Items?;\n};\n\npublic type PatentDetails record {\n    string PatentNumber?;\n    string Title?;\n    string Url?;\n    string DateMonth?;\n    string DateYear?;\n    string Description?;\n};\n\npublic type Payload_IEnumerable_PRGLSplitSet record {\n    PRGLSplitSet[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type SubordinateEntityReferences record {\n    string[] EntityReferences?;\n};\n\npublic type PayAdjCode record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeCANTaxStatus record {\n    string ProvinceCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    TaxPropertyCollection TaxPropertyCollection?;\n    string LastModifiedTimestamp?;\n};\n\npublic type TrainingProgramCourse record {\n    Course Course?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeePayAdjustment record {\n    string EmployeePayAdjustXRefCode?;\n    string AdjustPeriodStartDate?;\n    string AdjustPeriodEndDate?;\n    string EmployeeXRefCode?;\n    string DepartmentXRefCode?;\n    string JobXRefCode?;\n    string PayAdjustmentCodeXRefCode?;\n    string PayCategoryXRefCode?;\n    string PayDate?;\n    string OrgUnitXRefCode?;\n    boolean IsPremium?;\n    boolean IsDeleted?;\n    string TimeStart?;\n    string TimeEnd?;\n    decimal Hours?;\n    decimal Rate?;\n    decimal Amount?;\n    string ReferenceDate?;\n    string ProjectXRefCode?;\n    string DocketXRefCode?;\n    string EmployeeComment?;\n    string ManagerComment?;\n    boolean EmployeeAuthorized?;\n    boolean ManagerAuthorized?;\n    EmployeePayAdjustmentLaborMetrics[] LaborMetrics?;\n    string LastModifiedTimestampUtc?;\n};\n\npublic type Payload_IEnumerable_TaxAuthorityInstanceDetails record {\n    TaxAuthorityInstanceDetails[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\n# This class encapsulates the report data generated during the execution of the report.\npublic type Report record {\n    # Reference Code for the Report.\r\n    # This is a unique, human readable, code used to identify the Report.\n    string XRefCode?;\n    # An array of Dictionary objects which contain the report data. \r\n    # Each dictionary object represents a row: the key is column name and the values is the column value for the row.\n    record {|string...;|}[] Rows?;\n};\n\npublic type KpiTargetPattern record {\n    string KpiXRefCode?;\n    string OrgUnitXRefCode?;\n    string ZoneXRefCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    int:Signed32 PatternOffset?;\n    int:Signed32 PatternLength?;\n    KpiTargetPatternDetail[] Pattern?;\n};\n\npublic type DeductionDefinition record {\n    boolean SystemDeduction?;\n    boolean Active?;\n    boolean AllowArrears?;\n    boolean WorkersComp?;\n    DeductionCountry[] Countries?;\n    DeductionPayee[] Payees?;\n    string Name?;\n    string Description?;\n    string DisplayName?;\n    string XRefCode?;\n    boolean AllowPayee?;\n    string SourceTypeName?;\n    string SourceTypeXRefCode?;\n    string PayeeCategoryName?;\n    string PayeeCategoryXRefCode?;\n};\n\npublic type SchoolYear record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PRGLSplitSetDetailMetricCode record {\n    LaborMetricsCode LaborMetricsCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeCANStateTax record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    State State?;\n    decimal TotalClaimAmount?;\n    decimal PrescribedAreaDeduction?;\n    decimal MaintenanceDeduction?;\n    decimal AuthorizedTaxCredits?;\n    decimal QuebecDevelopmentFunds?;\n    decimal EstimatedExpense?;\n    decimal EstimatedRemuneration?;\n    decimal AdditionalAmount?;\n    decimal LabourSponsoredFunds?;\n    boolean HasQuebecHealthContributionExemption?;\n    boolean IncomeLessThanClaim?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PersonContactCollection record {\n    PersonContact[] Items?;\n};\n\npublic type Payload_IEnumerable_Object record {\n    record {}[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeDirectDeposit record {\n    string AccountNumber?;\n    string BankName?;\n    string BankNumber?;\n    string BuildingSocietyNumber?;\n    int:Signed32 DepositNumber?;\n    decimal DepositValue?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    PayMethod PayMethod?;\n    boolean IsDeleted?;\n    boolean IsPercentage?;\n    boolean IsRemainder?;\n    boolean IsSpecialDisbursementAccount?;\n    boolean IsMultiSourceAccount?;\n    int:Signed32 NumberOfPreNoteDays?;\n    string PrenoteFileRunPayDate?;\n    string PrenoteFileSentOn?;\n    boolean RequiresPreNote?;\n    string RoutingTransitNumber?;\n    string PayCardType?;\n    FinancialInstitution FinancialInstitution?;\n    string AccountHolder?;\n    string LastModifiedTimestamp?;\n};\n\npublic type ApplicantDetails record {\n    string FullName?;\n    string FirstName?;\n    string LastName?;\n    string Email?;\n    boolean UseEmailForLogin?;\n    string PhoneNumber?;\n    string HomePhoneNumber?;\n    string CoverLetter?;\n    ApplicantResume Resume?;\n    FileDetails[] AdditionalDocuments?;\n};\n\npublic type EmployeeIRLTaxPAYEExclusionCollection record {\n    EmployeeIRLTaxPAYEExclusion[] Items?;\n};\n\npublic type EmployeeClockDeviceGroup record {\n    ClockDeviceGroup ClockDeviceGroup?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AmfEnumFrom record {\n    record {} Criteria?;\n    string Model?;\n    string Module?;\n    string AppView?;\n};\n\npublic type EmployeePayrollElectionDeletionModel record {\n    string EmployeeXRefCode?;\n    EmployeeElectionAPIDeletionModel[] Elections?;\n};\n\npublic type MetadataModelCollection record {\n    MetadataModel MetadataModel?;\n    string Id?;\n    string Title?;\n    string ShortDescription?;\n    string LongDescription?;\n    string MetadataId?;\n    string DbTable?;\n    string Name?;\n    record {|string...;|} Mappings?;\n    boolean IsExtended?;\n    boolean IsCommon?;\n    ContextLevel GeoContext?;\n    string SchemaName?;\n    string ApplicationMapping?;\n    string DayforcePropertyName?;\n};\n\npublic type Payload_IEnumerable_EmployeeVeteransStatus record {\n    EmployeeVeteransStatus[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeePayrollTaxParameterCollection record {\n    EmployeePayrollTaxParameter[] Items?;\n};\n\npublic type EmployeeExportParams record {\n    string PayGroupXRefCode?;\n    string EmployeeXRefCode?;\n    string EmployeeNumber?;\n    string Expand?;\n    int:Signed32 PageSize?;\n    string ContextDate?;\n    string ContextDateRangeFrom?;\n    string ContextDateRangeTo?;\n    string ContextDateOption?;\n    string DeltaOption?;\n    string DeltaDate?;\n    string AmfEntity?;\n    string AmfLevel?;\n    string AmfLevelValue?;\n    boolean ExportAllEmployeeDetailOnDelta?;\n    int:Signed32 ExcludeTerminatedEmployeesOlderThanXDays?;\n};\n\npublic type Payload_IEnumerable_EmployeeBalanceTransactions record {\n    EmployeeBalanceTransactions[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PayeeHealthCareProvider record {\n    string EffectiveFrom?;\n    string EffectiveTo?;\n    int:Signed32 HealthInsuranceType?;\n    int:Signed32 HealthCareBusinessNumber?;\n    int:Signed32 HealthCareSuccessorBusinessNumber?;\n    decimal AdditionalContributionPercentage?;\n    decimal U1Percentage?;\n    decimal U2Percentage?;\n    int:Signed32 DataCollectionPoint?;\n    int:Signed32 ForwardingOffice?;\n    int:Signed32 InstitutionCode?;\n};\n\npublic type EmployeeGlobalPropertyValueCollection record {\n    EmployeeGlobalPropertyValue[] Items?;\n};\n\npublic type EmployeeEmploymentStatusCollection record {\n    EmployeeEmploymentStatus[] Items?;\n};\n\npublic type EmployeeWorkPatternCollection record {\n    EmployeeWorkPattern[] Items?;\n};\n\npublic type StateFilingStatus record {\n    string CountryCode?;\n    string StateCode?;\n    string StateFilingStatusCode?;\n    string CalculationCode?;\n    string PayrollOutput?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeGLSplitSetDetails record {\n    decimal LaborPercentage?;\n    boolean IsPrimary?;\n    EmployeeGLSplitSetDetailLaborMetricCodes[] EmployeeGLSplitSetDetailLaborMetricCodeDetails?;\n};\n\npublic type PaginatedPayload_Report record {\n    # This class encapsulates the report data generated during the execution of the report.\n    Report Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type EmployeeEthnicityCollection record {\n    EmployeeEthnicity[] Items?;\n};\n\npublic type PayeeAddress record {\n    string AddressLine3?;\n    string AddressLine1?;\n    string AddressLine2?;\n    string City?;\n    string StateProvinceCode?;\n    string StateProvinceName?;\n    string CountryCode?;\n    string CountryName?;\n    string PostalCode?;\n};\n\npublic type PunchLaborMetric record {\n    string TypeXRefCode?;\n    string CodeXRefCode?;\n    string TypeClockTransferCode?;\n    string CodeClockTransferCode?;\n};\n\npublic type EmployeeGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LaborMetrics record {\n    string LaborMetricsTypeXRefCode?;\n    string LaborMetricsCodeXRefCode?;\n};\n\npublic type PayrollPayEntryImportHistoryErrorDetails record {\n    int:Signed32 LineNumber?;\n    string LineContent?;\n    string ErrorMessage?;\n};\n\npublic type DEUEmployeeAccidentInsuranceHazardCategoryCollection record {\n    AccidentInsuranceHazardCategory[] Items?;\n};\n\npublic type CandidateProfileSource record {\n    string ShortName?;\n    string CandidateProfileSourceAdditionalInfo?;\n};\n\npublic type EmployeeShiftBidDTO record {\n    string GroupXRefCode;\n    string BidState;\n};\n\npublic type Payload_IEnumerable_EmployeePayrollTaxParameter record {\n    EmployeePayrollTaxParameter[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeePaySummaryRetro record {\n    boolean IsRetro?;\n    string EmployeeXRefCode?;\n    string PositionXRefCode?;\n    string DepartmentXRefCode?;\n    string JobXRefCode?;\n    string PayCodeXRefCode?;\n    string PayCategoryXRefCode?;\n    string PayDate?;\n    string BusinessDate?;\n    string TimeStart?;\n    string TimeEnd?;\n    string PunchSegmentStart?;\n    string LocationXRefCode?;\n    decimal NetHours?;\n    int:Signed32 MinuteDuration?;\n    decimal Rate?;\n    decimal PayAmount?;\n    boolean IsPremium?;\n    string ProjectXRefCode?;\n    string DocketXRefCode?;\n    decimal PieceQuantity?;\n    int PayExportId?;\n    string LaborMetricsCode0XRefCode?;\n    string LaborMetricsCode1XRefCode?;\n    string LaborMetricsCode2XRefCode?;\n    string LaborMetricsCode3XRefCode?;\n    string LaborMetricsCode4XRefCode?;\n    string LaborMetricsCode5XRefCode?;\n    string LaborMetricsCode6XRefCode?;\n    string LaborMetricsCode7XRefCode?;\n    string LaborMetricsCode8XRefCode?;\n    string LaborMetricsCode9XRefCode?;\n};\n\npublic type EmployeeDependentsBeneficiariesAddress record {\n    string County?;\n    ContactInformationType ContactInformationType?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string Address1?;\n    string Address2?;\n    string Address3?;\n    string Address4?;\n    string Address5?;\n    string Address6?;\n    string City?;\n    string PostalCode?;\n    Country Country?;\n    State State?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeUKIrregularPaymentDetails record {\n    EmployeeUKIrregularPaymentDetails[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type ClientPayrollCountryUpdate record {\n    string CountryCode?;\n    string DefaultTimeZoneXRefCode?;\n    boolean HCMPayrollCountry?;\n    boolean ConnectedPayCountry?;\n};\n\npublic type EmployeeScheduleSegmentAPIRequestDTO record {\n    string TimeStart;\n    string TimeEnd;\n    string PositionXRefCode;\n    string DocketXRefCode?;\n    string PayAdjCodeXRefCode?;\n    string OrgLocationTypeXRefCode?;\n    string ProjectXRefCode?;\n    string Comment?;\n    EmployeeScheduleLaborMetricPostAPIRequestDTO[] LaborMetrics?;\n};\n\npublic type CourseType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BackgroundScreeningStatus record {\n    string ScreeningRequestId?;\n    string ScreeningStatus?;\n    string ScreeningResult?;\n};\n\npublic type EmployeeWorkAssignmentCollection record {\n    EmployeeWorkAssignment[] Items?;\n};\n\npublic type BackgroundScreeningStatusUrlReport record {\n    string ScreeningRequestId?;\n    string Url?;\n    BackgroundScreeningReportScreeningStatus ScreeningStatus?;\n    CandidatePersonalIdentifiableInformation CandidatePII?;\n    CandidateScreeningDetailedResult[] DetailedResults?;\n    CandidateRightToWorkResult CandidateRightToWorkResults?;\n};\n\npublic type ManagerShiftBid record {\n    string GroupXRefCode?;\n    int QualifyingBids?;\n    BidderInfo[] BiddingEmployees?;\n    string[] EmployeeScheduleXRefCodes?;\n    EmployeeSchedule EmployeeSchedule?;\n};\n\npublic type EmployeeManager record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string ManagerXRefCode?;\n    string ManagerFirstName?;\n    string ManagerMiddleName?;\n    string ManagerLastName?;\n    string ManagerBadgeNumber?;\n    int:Signed32 DerivationMethod?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LaborValidationModel record {\n    string CodeName?;\n    record {} XRefCode?;\n};\n\npublic type EmployeeSSOAccount record {\n    string LoginName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Positions record {\n    int:Signed32 _Total?;\n    PositionDetails[] Values?;\n};\n\npublic type QuestionOptionModel record {\n    string value?;\n    string label?;\n};\n\npublic type JobClassificationGlobal record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type DEUEmployeeWageTaxCollection record {\n    DEUEmployeeWageTax[] Items?;\n};\n\npublic type EmployeeAUSFederalTax record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean STSLDebt?;\n    boolean ClaimTaxFreeThreshold?;\n    decimal AmountClaimedforTaxOffset?;\n    boolean MedicareLevyReductionClaimed?;\n    boolean Spouse?;\n    boolean CombineWeeklyTotalIncomelessthanTableA?;\n    int:Signed32 NumberofDependentChildren?;\n    boolean SeniorAndPensionersTaxOffset?;\n    string PayBasis?;\n    boolean ClaimingZoneOverseasorCarerOffset?;\n    boolean ApplyMedicareForWorkingHolidayMaker?;\n    decimal WithholdingVariationAmount?;\n    boolean DoesWithholdingVariationIncludeSTSLDebt?;\n    boolean IsUpwardVariation?;\n    TFNExemptionReason TFNExemptionReason?;\n    PRTaxResidentCode ResidentCode?;\n    MedicareLevyExemptionType MedicareLevyExemptionType?;\n    WithholdingVariationType WithholdingVariationType?;\n    WithholdingVariationAmountType WithholdingVariationAmountType?;\n    PREarningAccumulator EarningGroup?;\n    AdditionalTaxType AdditionalTaxType?;\n    decimal FlatComissionerInstalmentRate?;\n    boolean IsContractorSuperLiabilityOnly?;\n    string LastModifiedTimestamp?;\n};\n\npublic type MilitaryServiceDetails record {\n    string ServiceCountry?;\n    string Branch?;\n    string Rank?;\n    string StartDateMonth?;\n    string StartDateYear?;\n    string EndDateMonth?;\n    string EndDateYear?;\n    boolean EndCurrent?;\n    string Commendations?;\n    string Description?;\n};\n\npublic type EmployeeWorkContract record {\n    decimal AverageNumOfDays?;\n    decimal BaseHours?;\n    decimal BaseComplementaryHours?;\n    decimal ContractWorkPercent?;\n    boolean CreateShiftOnHolidays?;\n    string EndDate?;\n    decimal FullTimeHours?;\n    string StartDate?;\n    WorkContract WorkContract?;\n    int:Signed32 WorkPatternLengthDays?;\n    EmployeeWorkPatternCollection WorkPatterns?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeDeduction record {\n    Deduction Deduction?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string ElectionStartPayPeriodStartDate?;\n    PayGroup ElectionStartPayGroup?;\n    ElectionSchedule ElectionSchedule?;\n    boolean IsBlocked?;\n    Position Position?;\n    Location Location?;\n    boolean ContinuePaymentOnStatutoryPay?;\n    int:Signed32 IsOptOut?;\n    EmployeeDeductionParameterCollection EmployeeDeductionParameters?;\n    EmployeeDeductionLimitCollection EmployeeDeductionLimits?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LaborValidationMetricFilterXRefCodes record {\n    LaborValidationModel[] Criteria?;\n};\n\npublic type PerformanceCycle record {\n    string CycleStartDate?;\n    string CycleEndDate?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayFrequency record {\n    string PayFrequencyType?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BenefitsDFLinkExportEarningGroupingResults record {\n    string RecordType?;\n    string LegalEntityReferenceCode?;\n    string EarningGroupingReferenceCode?;\n    decimal CurrentHours?;\n    decimal MTDHours?;\n    decimal QTDHours?;\n    decimal YTDHours?;\n};\n\npublic type LimitAccessType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeePropertyOption record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_PersonContact record {\n    PersonContact[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_LaborDemand record {\n    LaborDemand Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type JobSetLevel record {\n    JobSet JobSet?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmergencyContactPersonContactCollection record {\n    EmergencyContactPersonContact[] Items?;\n};\n\npublic type EmployeeRoleCollection record {\n    EmployeeRole[] Items?;\n};\n\npublic type BenefitsDFLinkExportProperty record {\n    string RecordType?;\n    string PropertyTypeCode?;\n    string PropertyValue?;\n    int:Signed32 PropertyValueTypeCode?;\n    string EffectiveStartDate?;\n    string EffectiveEndDate?;\n};\n\npublic type PaginatedPayload_IEnumerable_BaseProject record {\n    BaseProject[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type EmployeeDeductionsCollection record {\n    EmployeeDeduction[] Items?;\n};\n\npublic type EmployeeLegalEntity record {\n    decimal NormalWeeklyHours?;\n    WorkLocationAddress WorkLocationAddress?;\n    string OriginalHireDate?;\n    decimal BaseSalary?;\n    decimal HourlyRate?;\n    string EmploymentStatus?;\n    string EmploymentType?;\n    string JobAssignment?;\n    string HireDate?;\n    string TerminationDate?;\n    string PayFrequency?;\n    string PayType?;\n    string LastPayrollPayDate?;\n    string LegalEntityName?;\n    string FEIN?;\n    LegalEntityAddress LegalEntityAddress?;\n};\n\npublic type Payload_IEnumerable_EmployeePerformanceRating record {\n    EmployeePerformanceRating[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PayGroupCalendar record {\n    string PayGroupXRefCode?;\n    string PayGroupName?;\n    string Frequency?;\n    string PayrollFrequency?;\n    string DayStartOfWeek?;\n    string Country?;\n    string CollectionFrequency?;\n    PayGroupCalendarDetails[] Calendar?;\n};\n\npublic type Payload_IEnumerable_EmployeeUSFederalTax record {\n    EmployeeUSFederalTax[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeSchedule record {\n    EmployeeSchedule[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PaginatedPayload_IEnumerable_Employee record {\n    Employee[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type HRIncidentAction record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AmfEntity record {\n    int:Signed32 Id?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n};\n\npublic type Payload_IEnumerable_EmployeeEmploymentAgreement record {\n    EmployeeEmploymentAgreement[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type LMSAssignmentMethod record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeLocation record {\n    EmployeeLocation[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type AnalyticsDatasetMetadata record {\n    # Dataset Id.\n    string DatasetId?;\n    string Status?;\n    # Row count in the dataset.\n    string RowCount?;\n    # Report Id.\n    int:Signed32 ReportId?;\n    # RefreshStatus.\n    string RefreshStatus?;\n    # Report Filters\n    string Filters?;\n    # Report Parameters\n    string Parameters?;\n    # Created Date of report\n    string CreatedDate?;\n    # Last modified timestamp of report\n    string LastModifiedTimestamp?;\n    # Started refresh Timestamp\n    string StartedTimestamp?;\n    # Ended refresh Timestamp\n    string EndedTimestamp?;\n    # Difference between report row counts\n    int:Signed32 DifferenceCount?;\n    # Total number of pages for given dataset\n    int:Signed32 TotalPages?;\n};\n\n# This class encapsulates the report data generated during the execution of the report.\npublic type ReportColumnMetadata record {\n    # CodeName is a unique name that can be used with code\r\n    # to refer to this specific column.  Its value should be consistent.\n    string CodeName?;\n    # This is a name as defined by a user when developing this report.  This name\r\n    # would be a human facing name that would be used on a printed report.\r\n    # This field is used as the key to the values dictionary\n    string DisplayName?;\n    # This is a string representation of the data type.\n    string DataType?;\n};\n\npublic type EmployeeAUSSuperannuationRules record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean ApplyQuarterlyMaxBaseCapForEmployerSuperannuation?;\n    boolean OverrideMinBaseForEmployerSuperannuation?;\n    decimal MinimumContributionAmount?;\n    string LastModifiedTimestamp?;\n};\n\npublic type OrgLocationType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BenefitsDFLinkExportEmployeeElectionDetail record {\n    string RecordType?;\n    int:Signed32 ElectionId?;\n    string PlanTypeCode?;\n    string PlanSubTypeCode?;\n    string PlanXrefCode?;\n    string PlanCode?;\n    string PolicyNumber?;\n    string OptionCode?;\n    string CoverageStartDate?;\n    string CoverageEndDate?;\n    string EffectiveStartDate?;\n    string EffectiveEndDate?;\n    decimal EmployeePerPayCost?;\n    string EmployeeDeductionScheduleCode?;\n    decimal EmployeeAnnualCost?;\n    decimal EmployerPerPayCost?;\n    string EmployerDeductionScheduleCode?;\n    decimal EmployerAnnualCost?;\n    decimal CarrierPerPayCost?;\n    decimal CarrierAnnualCost?;\n    decimal EmployeeContributionAmount?;\n    decimal EmployeeContributionPercentage?;\n    decimal EmployerContributionAmount?;\n    decimal EmployerContributionPercentage?;\n    decimal CoverageAmount?;\n    decimal CoverageMultiplier?;\n    decimal RequestedCoverageAmount?;\n    decimal PreAgeReducedCoverageAmount?;\n    int:Signed32 EOIStatusCode?;\n    string RateXrefCode?;\n    string PlanStartDate?;\n    string ElectionDate?;\n    string PlanEndDate?;\n    BenefitsDFLinkExportCareProvider[] CareProviderDetails?;\n};\n\npublic type EmployeePayAdjustmentPostResponse record {\n    string EmployeePayAdjustXRefCode?;\n};\n\npublic type ChildLocation record {\n    OrgLevel OrgLevel?;\n    OrgUnitLegalEntityCollection OrgUnitLegalEntities?;\n    OrgUnitParentCollection OrgUnitParents?;\n    OrgUnitLocationTypeCollection OrgUnitLocationTypes?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeePayGradeRate record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string WorkAssignmentEffectiveStart?;\n    string WorkAssignmentEffectiveEnd?;\n    PayGrade PayGrade?;\n    decimal MinimumRate?;\n    decimal ControlRate?;\n    decimal MaximumRate?;\n    decimal RateMidPoint?;\n    decimal MinimumSalary?;\n    decimal ControlSalary?;\n    decimal MaximumSalary?;\n    decimal SalaryMidPoint?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeePayrollTaxParameterElement record {\n    EmployeePayrollTaxParameterElementName Name?;\n    string Value?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PaginatedPayload_IEnumerable_EmployeePaySummaryRetro record {\n    EmployeePaySummaryRetro[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type CandidateRTWDocumentDetails record {\n    string Name?;\n    string Value?;\n};\n\npublic type Payload_IEnumerable_EmployeeIRLTaxPAYEExclusion record {\n    EmployeeIRLTaxPAYEExclusion[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmploymentAgreementPopulation record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LaborDemandItem record {\n    string ZoneXRefCode?;\n    string LaborMeasureXRefCode?;\n    string ActivityXRefCode?;\n    string AxisXRefCode?;\n    string Day?;\n    string Time?;\n    decimal Hours?;\n    decimal ServiceHours?;\n    decimal NonServiceHours?;\n};\n\npublic type EarningPayeeParameter record {\n    string PayeeParameterName?;\n    string PayeeParameterXRefCode?;\n    string Value?;\n};\n\npublic type Payload_IEnumerable_EmployeeUKTaxDetails record {\n    EmployeeUKTaxDetails[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type QuestionHierarchicalOptionModel record {\n    string id?;\n    QuestionConditionModel condition?;\n    QuestionOptionModel[] options?;\n};\n\npublic type LegalEntityOverride record {\n    string LegalEntityName?;\n    string LegalEntityXrefCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string BankBranchAddressName?;\n    string BankBranchAddressXRefCode?;\n    string WorkSiteName?;\n    string WorkSiteXRefCode?;\n    string WorkSiteNumber?;\n    string WorkSiteStateCode?;\n    string OverrideCustomerFundingIdentiferName?;\n    string OverrideCustomerFundingIdentiferXRefCode?;\n};\n\npublic type Document record {\n    string DocumentGUID?;\n    string DocumentName?;\n    DocumentType DocumentType?;\n    string FileName?;\n    string UploadedDate?;\n    UploadedBy UploadedBy?;\n};\n\npublic type EntitlementPolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type ClockDeviceGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeBadge record {\n    EmployeeBadge[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PaginatedPayload_IEnumerable_EmployeeGLSplits record {\n    EmployeeGLSplits[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type Payload_IEnumerable_EmployeeRole record {\n    EmployeeRole[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type WithholdingVariationType record {\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type Payload_IEnumerable_EmployeeSchedulePostAPIResponse record {\n    EmployeeSchedulePostAPIResponse[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type OrgUnitParent record {\n    HRConfigurationEntity ParentOrgUnit?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_CandidateApplicationStatusUpdatesPaginationModel record {\n    CandidateApplicationStatusUpdatesPaginationModel Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PropertyValue record {\n    string ElementXRefCode?;\n    string ElementName?;\n    boolean IsElementActive?;\n    string ElementDefaultValue?;\n    string Value?;\n    string SavedAt?;\n    int:Signed32 SavedBy?;\n};\n\npublic type TaxAuthorityInstanceDetails record {\n    string Name?;\n    string Description?;\n    boolean EmployerTax?;\n    boolean EmployeeTax?;\n    string TaxAuthorityInstance?;\n    string CountryCode?;\n};\n\npublic type ElectionSchedule record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeHealthWellnessCollection record {\n    EmployeeHealthWellness[] Items?;\n};\n\npublic type ShiftRotation record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PRSIExemptReason record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayHolidayGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AuthorizationPolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Project record {\n    string LedgerCode?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BaseEmployeeSubset record {\n    string XRefCode?;\n    string NewXRefCode?;\n    string CommonName?;\n    string DisplayName?;\n    string FirstName?;\n    string LastName?;\n    string Initials?;\n    string MaidenName?;\n    string MiddleName?;\n    string PreferredLastName?;\n    string SecondLastName?;\n    string Suffix?;\n    string Title?;\n    string PreviousLastName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AssignedSexComplianceCode record {\n    string ComplianceCode?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeCANTaxStatus record {\n    EmployeeCANTaxStatus[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_ClientPayrollCountry record {\n    ClientPayrollCountry Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type SkillLevel record {\n    int:Signed32 RankOrder?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_Payee record {\n    Payee[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeAvailabilityDaysPostRequestDTO record {\n    string StartTime1?;\n    string EndTime1?;\n    string StartTime2?;\n    string EndTime2?;\n    boolean IsAvailable;\n};\n\npublic type Certifications record {\n    int:Signed32 _Total?;\n    CertificationDetails[] Values?;\n};\n\npublic type MetadataModel record {\n    MetadataField[] MetadataFields?;\n    MetadataModel[] MetadataModels?;\n    MetadataModelCollection[] MetadataModelCollections?;\n    AmfValidationModel[] Validators?;\n    AmfOnCUDActionModel[] OnCUDActions?;\n    string[] CompositeFields?;\n    boolean IsEffectiveDatedContiguous?;\n    AmfRuleModel[] Rules?;\n    AmfAuthorize DfAuthorize?;\n    string Id?;\n    string Title?;\n    string ShortDescription?;\n    string LongDescription?;\n    string MetadataId?;\n    string DbTable?;\n    string Name?;\n    record {|string...;|} Mappings?;\n    boolean IsExtended?;\n    boolean IsCommon?;\n    ContextLevel GeoContext?;\n    string SchemaName?;\n    string ApplicationMapping?;\n    string DayforcePropertyName?;\n};\n\npublic type LaborMetricsCodePostPatchResponse record {\n    string LaborMetricsCodePostPatchResponseXRefCode?;\n};\n\npublic type LinkDetails record {\n    string Url?;\n};\n\npublic type EmployeeDependentBeneficiary record {\n    string FirstName?;\n    string MiddleName?;\n    string LastName?;\n    string BirthDate?;\n    string SocialSecurityNumber?;\n    string SSNExpiryDate?;\n    string TobaccoUser?;\n    string DateLastSmoked?;\n    boolean IsStudent?;\n    boolean IsDisabled?;\n    string SocialSecurityDisabilityAwardDate?;\n    string Gender?;\n    boolean IsBeneficiary?;\n    boolean IsDependent?;\n    boolean IsActiveDependent?;\n    boolean IsActiveBeneficiary?;\n    RelationshipType Relationship?;\n    MaritalStatus MaritalStatus?;\n    EmployeeDependentsBeneficiariesAddressCollection Addresses?;\n    EmployeeDependentsBeneficiariesContactCollection Contacts?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LaborValidationFilters record {\n    string LaborValidationPolicyXRefCode?;\n    LaborValidationMetricFilterXRefCodes[] FilterXRefCodes?;\n};\n\npublic type FinancialInstitution record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeCANStateTax record {\n    EmployeeCANStateTax[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type TrainingProgram record {\n    string TrainingProgramCode?;\n    TrainingProgramCourse[] TrainingProgramCourse?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeePayrollTaxCollection record {\n    EmployeePayrollTax[] Items?;\n};\n\npublic type EarningDefinition record {\n    boolean PayEntryRates?;\n    boolean Generated?;\n    boolean GrossedUp?;\n    boolean EIRefund?;\n    string PRPensionPaymentType?;\n    string PREarningBenefitCategory?;\n    string SeparateCheckName?;\n    string SeparateCheckXRefCode?;\n    EarningCountry[] Countries?;\n    EarningPayee[] Payees?;\n    string Name?;\n    string Description?;\n    string DisplayName?;\n    string XRefCode?;\n    boolean AllowPayee?;\n    string SourceTypeName?;\n    string SourceTypeXRefCode?;\n    string PayeeCategoryName?;\n    string PayeeCategoryXRefCode?;\n};\n\npublic type Payload_EmployeeTimeAwayFromWorkForSubmit record {\n    EmployeeTimeAwayFromWorkForSubmit Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeUKNIDetailsCollection record {\n    EmployeeUKNIDetails[] Items?;\n};\n\npublic type WorkLocationOverride record {\n    string County?;\n    string Description?;\n    string LocationName?;\n    LocationAddress LocationAddress?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeEmergencyContact record {\n    EmployeeEmergencyContact[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeDependentsBeneficiariesContact record {\n    string ContactNumber?;\n    string Extension?;\n    boolean IsUnlistedNumber?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    ContactInformationType ContactInformationType?;\n    Country Country?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_Employee record {\n    Employee[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_DEUEmployeeWageTax record {\n    DEUEmployeeWageTax[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type TFNExemptionReason record {\n    string PayrollShortName?;\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type Payload_AnalyticsDatasetMetadataResponse record {\n    AnalyticsDatasetMetadataResponse Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeTrainingProgramCollection record {\n    EmployeeTrainingProgram[] Items?;\n};\n\npublic type EmployeeDocumentManagementSecurityGroup record {\n    DocMgmtSecurityGroup DocMgmtSecurityGroup?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeUKStudentLoan record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    int:Signed32 StudentLoanPlanType?;\n    string LegalEntityXrefCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type OnboardingPolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PRGLSplitSetDetailCollection record {\n    PRGLSplitSetDetail[] Items?;\n};\n\npublic type EmployeeIRLTaxPRSI record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string PRSIClassXrefCode?;\n    boolean CommunityEmployment?;\n    boolean PRSIExempt?;\n    string PRSIExemptReasonXrefCode?;\n    string LegalEntityXrefCode?;\n    LegalEntity LegalEntity?;\n    PRSIClass PrsiClass?;\n    PRSIExemptReason PrsiExemptReason?;\n    string CompanyDirector?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_LMSEmployeeCertification record {\n    LMSEmployeeCertification[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmploymentStatusReason record {\n    EmploymentStatusReason[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type HighlyCompensatedEmployeeCollection record {\n    EmployeeHighlyCompensatedEmployeeIndicator[] Items?;\n};\n\npublic type PayPolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeIRLTaxEWSSCollection record {\n    EmployeeIRLTaxEWSS[] Items?;\n};\n\npublic type PositionTerm record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type HRIncidentBodyPart record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AppUser record {\n    boolean AllowNativeAuthentication?;\n    boolean Display24HourTime?;\n    boolean IsApproved?;\n    string LastModifiedTimestamp?;\n};\n\npublic type MedicareLevyExemptionType record {\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type DataEntry record {\n    int DataEntryXRefCode?;\n    string EntryType?;\n    string PayGroupXRefCode?;\n    string Currency?;\n    string PeriodStart?;\n    string PeriodEnd?;\n    string PPN?;\n    string PayDate?;\n    string EditSet?;\n    string EmployeeXRefCode?;\n    string EmployeeName?;\n    string EmployeeNumber?;\n    boolean Replace?;\n    string CodeType?;\n    string CodeXRefCode?;\n    string CodeName?;\n    string TaxAuthorityInstance?;\n    decimal Hours?;\n    decimal Rate?;\n    decimal Amount?;\n    string BusinessDate?;\n    string JobAssignmentXRefCode?;\n    string JobAssignmentName?;\n    string WorkLocationXRefCode?;\n    string WorkLocation?;\n    string LegalEntityXrefCode?;\n    string LegalEntityName?;\n    string LegalEntityIdNumber?;\n    boolean LaborPercent?;\n    boolean DebitArrears?;\n    string CheckTemplateXRefCode?;\n    string CheckTemplateName?;\n    string FLSAAdjustStartDate?;\n    string FLSAAdjustEndDate?;\n    string Message?;\n    string ProjectXRefCode?;\n    string ProjectName?;\n    string DocketXRefCode?;\n    string DocketName?;\n    string PayPeriodNumber?;\n    string OrderedAmountTypeXRefCode?;\n    string OrderedAmountType?;\n    decimal OrderPercent?;\n    decimal LimitAmount?;\n    decimal DisposableEarningAmount?;\n    int:Signed32 PayPeriodsForTax?;\n    boolean PayOutAccurals?;\n    string WorkersCompAccountNumber?;\n    string WorkersCompAccountName?;\n    string WorkersCompCode?;\n    boolean DoNotDisburseToPayee?;\n    string ImportSet?;\n    boolean ApplyROEMapping?;\n    string TrailingTaxationPeriodStart?;\n    string TrailingTaxationPeriodEnd?;\n    EmployeeLaborMetrics[] LaborMetrics?;\n    string SavedBy?;\n    string SavedAt?;\n    string ImportIdentifier?;\n    string SourceSystem?;\n    string PayrollFrequencyType?;\n    string PayrollFrequencyName?;\n    string OffCyclePayRunXrefCode?;\n};\n\npublic type EmployeeDisabilityCollection record {\n    EmployeeDisability[] Items?;\n};\n\npublic type LaborDemand record {\n    string OrgUnitXRefCode?;\n    string SchedulePeriodStart?;\n    LaborDemandItem[] LaborDemands?;\n};\n\npublic type EmployeeDefaultLabor record {\n    Position Position?;\n    string EffectiveEnd?;\n    string EffectiveStart?;\n    Location Location?;\n    PayAdjCode PayAdjCode?;\n    Project Project?;\n    Docket Docket?;\n    EmployeeDefaultLaborMetricsCodeCollection EmployeeDefaultLaborMetricsCodes?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeHRPolicy record {\n    boolean SignOff?;\n    string SignOffDate?;\n    HRPolicy HRPolicy?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeRole record {\n    boolean IsDefault?;\n    Role Role?;\n    string EffectiveStart?;\n    boolean IsPrestartRole?;\n    string EffectiveEnd?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeAssignedSexAndGenderIdentity record {\n    EmployeeAssignedSexAndGenderIdentity[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeMUSTaxDetailsCollection record {\n    EmployeeMUSTaxDetails[] Items?;\n};\n\npublic type UploadedBy record {\n    string DisplayName?;\n    string XRefCode?;\n    string LoginId?;\n};\n\npublic type PaginatedPayload_IEnumerable_EmployeePunch record {\n    EmployeePunch[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type ProjectsPostResponse record {\n    string ProjectsPostResponseXRefCode?;\n};\n\npublic type Payload_EmployeePunchPatchPostDeleteResponse record {\n    EmployeePunchPatchPostDeleteResponse Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeAUSSuperannuation record {\n    EmployeeAUSSuperannuation[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type NameAffix record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeIRLTaxRPN record {\n    EmployeeIRLTaxRPN[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type LaborMetricCodes record {\n    string Name?;\n    string Description?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string LaborMetricsCodeXRefCode?;\n    string ClockTransferCode?;\n    string LedgerCode?;\n    string[] OrgXRefCodes?;\n    string LaborMetricsTypeXRefCode?;\n};\n\npublic type LastNamePrefix record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AmfRuleParameterModel record {\n    string AccessType?;\n    string DataType?;\n    record {} Value?;\n    string InputName?;\n    AmfRuleParameterModel InnerParameter?;\n};\n\npublic type ExtensibleProperty record {\n    string TypeCode?;\n    string EntityType?;\n    string CountryCode?;\n    string EntityXRefCode?;\n    string EntityName?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string Comment?;\n    string SavedAt?;\n    int:Signed32 SavedBy?;\n    PropertyValue[] PropertyValues?;\n};\n\npublic type BenefitsDFLinkExportEarningGroupingCustomPeriodResults record {\n    string RecordType?;\n    string LegalEntityXrefCode?;\n    string EarningGroupingXrefCode?;\n    string CustomPeriodXrefCode?;\n    decimal Hours?;\n};\n\npublic type OperatingHours record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string OrgUnitXRefCode?;\n    OperatingHoursItem[] OperatingHours?;\n};\n\npublic type EmployeeOrgUnitInfoCollection record {\n    EmployeeOrgUnitInformation[] Items?;\n};\n\npublic type Payload_IEnumerable_EmployeeUSTaxStatus record {\n    EmployeeUSTaxStatus[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeClockDeviceGroupCollection record {\n    EmployeeClockDeviceGroup[] Items?;\n};\n\npublic type EmployeeBalanceTransactionForSubmit record {\n    string BalanceXRefCode?;\n    string EmployeeXRefCode?;\n    string TransactionDate?;\n    decimal Value?;\n    string Comment?;\n};\n\npublic type PRPayeeDeduction record {\n    string LongName?;\n    string PaymentMethodCode?;\n    string PayeeXRefCode?;\n    string ShortName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeAvailability record {\n    string DateOfRequest?;\n    boolean UnAvailable?;\n    boolean IsDefault?;\n    string StartTime1?;\n    string EndTime1?;\n    string StartTime2?;\n    string EndTime2?;\n};\n\npublic type GLSplitSetUpsert record {\n    string OrgUnitXRefCode?;\n    string DeptJobXRefCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    EmployeeGLSplitSetDetailUpsert[] GLSplitSetDetails?;\n};\n\npublic type Earning record {\n    CalculationType CalculationType?;\n    string CreditJournalNumber?;\n    string DebitJournalNumber?;\n    string DisplayName?;\n    EarningCode EarningCode?;\n    boolean IsDecliningBalance?;\n    boolean IsGenerated?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeePunch record {\n    string PunchXRefCode?;\n    string EmployeeXRefCode?;\n    string PunchStatus?;\n    string TimeStart?;\n    string TimeEnd?;\n    string TimeStartRaw?;\n    string TimeEndRaw?;\n    decimal NetHours?;\n    string LocationXRefCode?;\n    string PositionXRefCode?;\n    string DepartmentXRefCode?;\n    string JobXRefCode?;\n    string DocketXRefCode?;\n    decimal DocketQuantity?;\n    string ProjectXRefCode?;\n    string PayAdjustmentXRefCode?;\n    string StartExceptionCode?;\n    string EndExceptionCode?;\n    string EmployeeComment?;\n    string ManagerComment?;\n    string BusinessDate?;\n    boolean IsDeleted?;\n    boolean IsOnCall?;\n    boolean FuturePunch?;\n    string AssumedTimeStart?;\n    string AssumedTimeEnd?;\n    string LastModifiedTimestampUtc?;\n    MealBreaks[] MealBreaks?;\n    Transfers[] Transfers?;\n    LaborMetrics[] LaborMetrics?;\n};\n\npublic type EarningPayeeEarningParameter record {\n    string ElementParamName?;\n    string ElementParamCodeName?;\n    decimal Value?;\n};\n\npublic type DocumentType record {\n    string ShortName?;\n    string Description?;\n    string XRefCode?;\n};\n\npublic type JobFamily record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type ProjectForSubmit record {\n    string ProjectXRefCode?;\n    string ShortName?;\n    string[] CreationOrgUnitXRefCodes?;\n    string ClockTransferCode?;\n    int:Signed32 ProjectPriority?;\n    string AccountNum?;\n    boolean IFRSClassification?;\n    string LongName?;\n    string LedgerCode?;\n    string CertifiedPayrollProjectNumber?;\n    string ProjectClientXRefCode?;\n    string ProjectTypeXRefCode?;\n    string ProjectPhaseXRefCode?;\n    string ProductGroupXRefCode?;\n    string ProductModuleXRefCode?;\n    string StartDate?;\n    string DueDate?;\n    decimal BudgetHours?;\n    decimal BudgetAmount?;\n    ProjectAssignmentType EmployeeAssignment?;\n    ProjectAssignmentType DeptJobAssignment?;\n    ProjectAssignmentType DepartmentAssignment?;\n    string CompletedDate?;\n    decimal PctComplete?;\n    boolean IsDeleted?;\n    ProjectAssignmentType PayCodeXRefCodeChargeToHours?;\n    ProjectAssignmentType PayCodeXRefCodeChargeToAmount?;\n    string ParentProjectXRefCode?;\n    string TaxLocationAddressXRefCode?;\n    boolean IsResidentAddressUsedForTaxation?;\n    boolean IsCOEProject?;\n};\n\npublic type EmployeeLocation record {\n    boolean IsPrimary?;\n    Location Location?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean IsDefault?;\n    EmployeeLocationAuthorityCollection EmployeeLocationAuthorities?;\n    string LastModifiedTimestamp?;\n};\n\npublic type CitizenshipType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BenefitsDFLinkExportOrgUnit record {\n    string RecordType?;\n    string OrgUnitName?;\n    string OrgLevelCode?;\n    string OrgUnitCode?;\n    string LegalEntity?;\n    string OrgUnitWorkSiteZipCode?;\n    string OrgUnitLedgerCode?;\n};\n\npublic type EmployeeLocationAuthorityCollection record {\n    EmployeeLocationAuthority[] Items?;\n};\n\npublic type Payload_IEnumerable_Job record {\n    Job[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeePropertyValueCollection record {\n    EmployeePropertyValue[] Items?;\n};\n\npublic type EmployeeSchedulePolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeProperty record {\n    int:Signed32 DataType?;\n    int:Signed32 EmployeeCardinality?;\n    boolean IsEditable?;\n    string DataTypeParam?;\n    boolean GenerateHREvent?;\n    int:Signed32 Sequence?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type JobSet record {\n    int:Signed32 Grade?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type ImportSetModel record {\n    string ImportSetName?;\n    DataEntryDeleteModel[] DataEntries?;\n};\n\npublic type BackgroundScreeningReport record {\n    string ScreeningRequestId?;\n    CandidatePersonalIdentifiableInformation CandidatePII?;\n};\n\npublic type EmployeeDeductionLimitCollection record {\n    EmployeeDeductionLimit[] Items?;\n};\n\npublic type Payload_AnalyticsDatasetMetadata record {\n    AnalyticsDatasetMetadata Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_ProcessResult record {\n    ProcessResult[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeUKStudentLoan record {\n    EmployeeUKStudentLoan[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeEmploymentAgreement record {\n    string EffectiveEnd?;\n    string EffectiveStart?;\n    string XRefCode?;\n    EmploymentAgreementType EmploymentAgreementType?;\n    EmploymentAgreementPopulation EmploymentAgreementPopulation?;\n    EmploymentAgreementDetails EmploymentAgreementDetails?;\n    EmploymentAgreementTaxRegime EmploymentAgreementTaxRegime?;\n    EmploymentAgreementDuration EmploymentAgreementDuration?;\n    EmploymentAgreementSettlement EmploymentAgreementSettlement?;\n    string GovernmentIdentifier?;\n    EmploymentStatusReason AgreementReason?;\n    EmploymentStatusReason AgreementEndReason?;\n    Country Country?;\n    string LastModifiedTimestamp?;\n};\n\npublic type SkillType record {\n    boolean IsWFM?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeRawPunchForSubmit record {\n    string EmployeeBadge?;\n    string RawPunchTime?;\n    string PunchType?;\n    string PunchDevice?;\n    string SupervisorBadge?;\n    string LocationXRefCode?;\n    string LocationClockTransferCode?;\n    string PositionXRefCode?;\n    string PositionClockTransferCode?;\n    string DocketXRefCode?;\n    string DocketClockTransferCode?;\n    string ProjectXRefCode?;\n    string ProjectClockTransferCode?;\n    PunchLaborMetric[] LaborMetrics?;\n    decimal Quantity?;\n    string MealWaiver?;\n    boolean BreakAttestation?;\n};\n\npublic type Payload_IEnumerable_EmploymentStatus record {\n    EmploymentStatus[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_List_ReportMetadata record {\n    ReportMetadata[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Country record {\n    string Name?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type OrgUnitDetailConfiguration record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    Address Address?;\n    LocationAddress TaxLocationAddress?;\n    int:Signed32 ChildSortOrder?;\n    boolean IsPhysicalLocation?;\n    boolean IsPrimary?;\n    string LedgerCode?;\n    int:Signed32 ParentSortOrder?;\n    OrgLevel OrgLevel?;\n    TimeZone Timezone?;\n    OrgUnitParent OrgUnitParent?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AdditionalTaxType record {\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type Payload_IEnumerable_EmployeeHRIncident record {\n    EmployeeHRIncident[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type DisabilityEvidenceIssuingAgency record {\n    int:Signed32 DisabilityEvidenceIssuingAgencyId?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeHRIncident record {\n    string EmployeeComplainantXRefCode?;\n    EmployeeHRIncidentNoteCollection HRIncidentNotes?;\n    OrgUnitDetailConfiguration OrgUnit?;\n    string HRIncidentState?;\n    string OpenDate?;\n    HRIncidentAction HRIncidentAction?;\n    string AssignedToUserXRefCode?;\n    HRIncidentType HRIncidentType?;\n    string ClosedDate?;\n    string HRIncidentDate?;\n    string HRIncidentBeganWork?;\n    string HRIncidentEventTime?;\n    SafetyHealthType SafetyHealthType?;\n    HRIncidentInjury HRIncidentInjury?;\n    HRIncidentBodyPart HRIncidentBodyPart?;\n    boolean Died?;\n    string HRIncidentArea?;\n    string TaskBeingPerformed?;\n    string CausedObject?;\n    string CausedAction?;\n    boolean PrivacyCase?;\n    string DoctorName?;\n    boolean EmergencyRoom?;\n    boolean HospitalOvernight?;\n    string Hospital?;\n    string HospitalStreet?;\n    string HospitalCity?;\n    string HospitalStateCode?;\n    string HospitalZip?;\n    string DateReturnToWork?;\n    decimal DaysLost?;\n    decimal DaysRestricted?;\n    string DateDied?;\n    boolean QuestionableClaim?;\n    boolean IsDaysLost?;\n    string WCBCaseNumber?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_List_Payee record {\n    Payee[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeAUSSuperannuation record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string MembershipNumber?;\n    decimal SuperannuationContributionCalcValue?;\n    PayrollPayeeInfo PayrollPayee?;\n    PayrollDeduction PayrollDeduction?;\n    SuperannuationContributionType SuperannuationContributionType?;\n    SuperannuationType SuperannuationType?;\n    SuperannuationContributionCalculationType SuperannuationContributionCalculationType?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BenefitsDFLinkExportRecord record {\n    BenefitsDFLinkExportEmployeeRecord EmployeeDetails?;\n    BenefitsDFLinkExportAddress[] AddressDetails?;\n    BenefitsDFLinkExportProperty[] PropertyDetails?;\n    BenefitsDFLinkExportOrgUnit[] OrgUnitDetails?;\n    BenefitsDFLinkExportUnionMembership[] UnionMembershipDetails?;\n    BenefitsDFLinkExportContact[] ContactDetails?;\n    BenefitsDFLinkExportEmployeeElectionDetail[] EmployeeElectionDetails?;\n    BenefitsDFLinkExportDependentRecord[] DependentDetails?;\n    BenefitsDFLinkExportBeneficiaryRecord[] BeneficiaryDetails?;\n    BenefitsDFLinkExportEarningGroupingResults[] EarningGroupingResults?;\n    BenefitsDFLinkExportEarningGroupingCustomPeriodResults[] EarningGroupingCustomPeriodResults?;\n};\n\npublic type BenefitsDFLinkExportEmployeeRecord record {\n    string RecordType?;\n    string FirstName?;\n    string MiddleName?;\n    string LastName?;\n    string NameSuffix?;\n    string NationalId?;\n    string NationalIDExpiryDate?;\n    string XRefCode?;\n    string EmployeeNumber?;\n    string CultureCode?;\n    string Citizenship?;\n    string SeniorityDate?;\n    boolean IsVisibleMinority?;\n    boolean IsAboriginal?;\n    string BadgeNumber?;\n    string EmploymentStatus?;\n    string EmploymentStatusReasonCode?;\n    string EmploymentStatusStartDate?;\n    string EmploymentStatusEndDate?;\n    decimal NormalWeeklyHours?;\n    decimal NormalSemiMonthlyHoursTop?;\n    decimal NormalSemiMonthlyHoursBottom?;\n    decimal AverageDailyHours?;\n    decimal BaseSalary?;\n    decimal BaseRate?;\n    string PayGroupCode?;\n    string EmployeeGroupCode?;\n    string PayTypeCode?;\n    string PayClassCode?;\n    string DateOfBirth?;\n    int:Signed32 GenderCode?;\n    string MaritalStatusCode?;\n    int:Signed32 IncomeFrequency?;\n    boolean TobaccoSubstanceUse?;\n    string DateLastSmoked?;\n    string TobaccoUseEffectiveStart?;\n    string TobaccoUseEffectiveEnd?;\n    int:Signed32 Height?;\n    int:Signed32 Weight?;\n    boolean DisabilityCode?;\n    string DisabilityBeginDate?;\n    string DisabilityEndDate?;\n    string DepartmentJobNameCode?;\n    string WorkAssignmentEffectiveStart?;\n    string WorkAssignmentEffectiveEnd?;\n    string EmploymentIndicatorCode?;\n    boolean VirtualIndicator?;\n    string PositionLedgerCode?;\n    string WorkedInState?;\n    string ManagerFirstName?;\n    string ManagerLastName?;\n    string ManagerEmail?;\n    string ManagerPhoneNumber?;\n    string PayRunCheckDate?;\n    string PayPeriodStartDate?;\n    string PayPeriodEndDate?;\n    int:Signed32 PayFrequencyCode?;\n    string Ethnicity?;\n    int:Signed32 MedicareStatus?;\n    int:Signed32 MedicareReasonCode?;\n    string OriginalHireDate?;\n    string TerminationDate?;\n    string HireDate?;\n    string DateOfDeath?;\n    boolean InitialNoticeFlag?;\n    string GenderIdentity?;\n    int:Signed32 Age?;\n};\n\npublic type EmployeeAssignedSexAndGenderIdentityCollection record {\n    EmployeeAssignedSexAndGenderIdentity[] Items?;\n};\n\npublic type Payload_IEnumerable_Position record {\n    Position[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeePropertyValue record {\n    string EffectiveEnd?;\n    string EffectiveStart?;\n    EmployeeProperty EmployeeProperty?;\n    boolean BitValue?;\n    decimal NumberValue?;\n    EmployeePropertyOption OptionValue?;\n    string StringValue?;\n    string DateTimeValue?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeDirectDepositCollection record {\n    EmployeeDirectDeposit[] Items?;\n};\n\npublic type EmployeeOrgUnitInformation record {\n    OrgUnitDetailConfiguration OrgUnitDetail?;\n    Department Department?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayrollPayeeInfo record {\n    boolean IsActive?;\n    boolean IsDeductionPayee?;\n    string ABN?;\n    string USI?;\n    string ESA?;\n    string AddressLine1?;\n    string AddressLine2?;\n    string AddressLine3?;\n    string City?;\n    string State?;\n    string PostalCode?;\n    string CountryCode?;\n    PayrollPayeeCategory Category?;\n    PayrollPaymentMethod PaymentMethod?;\n    string AccountNumber?;\n    string BSBCode?;\n    boolean CombineEmployees?;\n    boolean CombineEarningsandDeductions?;\n    boolean ShowEmployeeDetails?;\n    boolean AllowNegativeAmounts?;\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type I9Order record {\n    string I9OrderId?;\n    string OrderStatusXRefCode?;\n    EVerify EVerify?;\n};\n\npublic type OperatingHoursExceptionPOST record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string OrgUnitXRefCode?;\n    int OpHrsPatternAssignment?;\n    int OpHrsPatternException?;\n    OperatingHoursExceptionDay[] OperatingHoursExceptionDay?;\n    OperatingHoursDayPattern OperatingHoursDayPattern?;\n};\n\npublic type OperatingHoursItem record {\n    string Day?;\n    int:Signed32 IsClosed?;\n    int:Signed32 NoDayPattern?;\n    string ShortName?;\n    string LongName?;\n    string OpenTime?;\n    string CloseTime?;\n    int:Signed32 IsException?;\n    string LastModifiedTimestamp?;\n    int:Signed32 Client?;\n};\n\npublic type Payload_IEnumerable_EmployeeDependentBeneficiary record {\n    EmployeeDependentBeneficiary[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_Skill record {\n    Skill[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_ManagerShiftBid record {\n    ManagerShiftBid[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeCANFederalTax record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    decimal TotalClaimAmount?;\n    boolean IsNonResident?;\n    boolean MultipleEmployer?;\n    boolean IncomeLessThanClaim?;\n    decimal DistrictTaxDeduction?;\n    decimal AuthorizedTaxCredits?;\n    decimal EstimatedExpense?;\n    decimal EstimatedRemuneration?;\n    decimal AdditionalAmount?;\n    decimal PrescribedAreaDeduction?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayrollPaymentMethod record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeEmploymentStatus record {\n    string EmployeeNumber?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    EmploymentStatus EmploymentStatus?;\n    EmploymentStatusGroup EmploymentStatusGroup?;\n    PayType PayType?;\n    PayGroup PayGroup?;\n    PayTypeGroup PayTypeGroup?;\n    PayClass PayClass?;\n    PunchPolicy PunchPolicy?;\n    PayPolicy PayPolicy?;\n    PayHolidayGroup PayHolidayGroup?;\n    EmployeeGroup EmployeeGroup?;\n    EntitlementPolicy EntitlementPolicy?;\n    ShiftRotation ShiftRotation?;\n    int ShiftRotationDayOffset?;\n    string ShiftRotationStartDate?;\n    boolean CreateShiftRotationShift?;\n    TimeOffPolicy TimeOffPolicy?;\n    ShiftTradePolicy ShiftTradePolicy?;\n    AttendancePolicy AttendancePolicy?;\n    EmployeeSchedulePolicy SchedulePolicy?;\n    EmployeeOvertimeGroup OvertimeGroup?;\n    PayrollPolicy PayrollPolicy?;\n    JobStepPolicy JobStepPolicy?;\n    decimal AlternateRate?;\n    decimal AverageDailyHours?;\n    decimal AverageOvertimeRate?;\n    decimal BaseRate?;\n    boolean BaseRateManuallySet?;\n    decimal BaseSalary?;\n    decimal PeriodicSalary?;\n    decimal DailyRate?;\n    EmploymentStatusReason EmploymentStatusReason?;\n    decimal NormalWeeklyHours?;\n    DEUHoursChangeReason DEUHoursChangeReason?;\n    decimal NormalSemiMonthlyHoursTop?;\n    decimal NormalSemiMonthlyHoursBottom?;\n    ScheduleChangePolicy ScheduleChangePolicy?;\n    AuthorizationPolicy AuthorizationPolicy?;\n    WorkContractPremiumPolicy WorkContractPremiumPolicy?;\n    string LastPayEditDate?;\n    decimal VacationRate?;\n    decimal TargetBonus?;\n    EmploymentStatus OriginalEmploymentStatus?;\n    string OriginalEffectiveStart?;\n    string OriginalEffectiveEnd?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AnalyticsDatasetMetadataResponse record {\n    # Message returned to user\n    string Message?;\n    # Dataset Id.\n    string DatasetId?;\n    string Status?;\n    # Row count in the dataset.\n    string RowCount?;\n    # Report Id.\n    int:Signed32 ReportId?;\n    # RefreshStatus.\n    string RefreshStatus?;\n    # Report Filters\n    string Filters?;\n    # Report Parameters\n    string Parameters?;\n    # Created Date of report\n    string CreatedDate?;\n    # Last modified timestamp of report\n    string LastModifiedTimestamp?;\n    # Started refresh Timestamp\n    string StartedTimestamp?;\n    # Ended refresh Timestamp\n    string EndedTimestamp?;\n    # Difference between report row counts\n    int:Signed32 DifferenceCount?;\n    # Total number of pages for given dataset\n    int:Signed32 TotalPages?;\n};\n\npublic type PayrollEmployeeEarningParameter record {\n    string ParamCodeName?;\n    string ShortName?;\n    decimal EmployeeElectedValue?;\n    decimal PayGroupDefaultValue?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeHRPolicyCollection record {\n    EmployeeHRPolicy[] Items?;\n};\n\npublic type TimeOffPolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BenefitsDFLinkExportBeneficiaryRecord record {\n    string RecordType?;\n    int:Signed32 UniqueBeneficiaryId?;\n    string EmployeeNationalId?;\n    string NationalId?;\n    string NationalIDExpiryDate?;\n    string FirstName?;\n    string MiddleName?;\n    string LastName?;\n    string DateOfBirth?;\n    int:Signed32 GenderCode?;\n    string RelationshipCode?;\n    string XRefCode?;\n    string HomePhoneNumber?;\n    BenefitsDFLinkExportAddress[] AddressDetails?;\n    BenefitsDFLinkExportContact[] ContactDetails?;\n    BenefitsDFLinkExportBeneficiaryElectionDetail[] BeneficiaryElectionDetails?;\n};\n\npublic type PaginatedPayload_IEnumerable_Skill record {\n    Skill[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type Payload_IEnumerable_EmployeeCompensation record {\n    EmployeeCompensation[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeUKNIDetails record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string NILetterXrefCode?;\n    string DirectorStartDate?;\n    boolean IsDirector?;\n    boolean Annual?;\n    string ChangeReasonXrefCode?;\n    string LegalEntityXrefCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LaborValidationQualifier record {\n    string XRefCode?;\n    string Name?;\n    string Description?;\n    boolean Active?;\n    int:Signed32 Sequence?;\n    string CodeName?;\n    LaborValidationModel[] Models?;\n    LaborValidationQualifier[] Children?;\n};\n\npublic type Job record {\n    EmployeeEEO EmployeeEEO?;\n    boolean IsUnionJob?;\n    string JobQualifications?;\n    int:Signed32 JobRank?;\n    JobSOC JobSOC?;\n    string JobUDFString1?;\n    string JobUDFString2?;\n    string JobUDFString3?;\n    string LedgerCode?;\n    string NOC?;\n    JobClassification JobClassification?;\n    JobFunction JobFunction?;\n    PayGrade PayGrade?;\n    DFUnion Union?;\n    string EffectiveEnd?;\n    string EffectiveStart?;\n    FLSAStatus FLSAStatus?;\n    JobFamily JobFamily?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type OrgUnitLocationTypeCollection record {\n    OrgUnitLocationType[] Items?;\n};\n\npublic type Culture record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_AnalyticsReportMetadata record {\n    AnalyticsReportMetadata[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PositionAssignmentCollection record {\n    PositionAssignment[] Items?;\n};\n\npublic type QuestionAnswers record {\n    string Id?;\n    string Value?;\n    string[] Values?;\n};\n\npublic type Payload_IEnumerable_EmployeeAUSSuperannuationRules record {\n    EmployeeAUSSuperannuationRules[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type LaborMetricTypePatchPostResponse record {\n    string LaborMetricTypePatchPostResponseXrefCode?;\n};\n\npublic type JobFeed record {\n    string Title?;\n    string Description?;\n    string ClientSiteName?;\n    string ClientSiteXRefCode?;\n    string CompanyName?;\n    string ParentCompanyName?;\n    string JobDetailsUrl?;\n    string ApplyUrl?;\n    string AddressLine1?;\n    string AddressLine2?;\n    string City?;\n    string State?;\n    string Country?;\n    string PostalCode?;\n    string Education?;\n    string JobFamily?;\n    string JobFunction?;\n    string EmploymentIndicator?;\n    string Qualifications?;\n    string DatePosted?;\n    string LastUpdated?;\n    int:Signed32 ReferenceNumber?;\n    string CandidatesUrl?;\n    string CultureCode?;\n    int:Signed32 ParentRequisitionCode?;\n    decimal MinHiringRate?;\n    decimal MaxHiringRate?;\n    decimal HiringRate?;\n    int:Signed32 JobType?;\n    decimal TravelPercentage?;\n    int:Signed32 TravelRequired?;\n    decimal TelecommutePercentage?;\n    boolean IsVirtualLocation?;\n    string QuestionnaireUrl?;\n    string CandidateApplicationPostUrl?;\n};\n\npublic type PMPositionAssignment record {\n    string PositionAssignmentGlobalId?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean IsPrimary?;\n    PMPosition PMPosition?;\n    string LastModifiedTimestamp?;\n};\n\npublic type GenderIdentity record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayType record {\n    decimal MaximumRate?;\n    decimal MaximumSalary?;\n    int:Signed32 SortOrder?;\n    boolean HidePayOnTimesheet?;\n    boolean IsPayrollAutoPay?;\n    string LedgerCode?;\n    PayTypeGroup PayTypeGroup?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeTimeAwayFromWorkForSubmit record {\n    EmployeeTimeAwayFromWorkForSubmit[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type BenefitsDFLinkExportUnionMembership record {\n    string RecordType?;\n    string UnionName?;\n    string UnionXrefCode?;\n    string MembershipEffectiveStartDate?;\n    string MembershipDate?;\n};\n\npublic type EmployeeLocationAuthority record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    AuthorityType AuthorityType?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeePerformanceRatingCollection record {\n    EmployeePerformanceRating[] Items?;\n};\n\npublic type Payload_IEnumerable_EmployeeBalancePeriod record {\n    EmployeeBalancePeriod[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_EmploymentStatus record {\n    EmploymentStatus Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type AssociationDetails record {\n    string Title?;\n    string StartDateMonth?;\n    string StartDateYear?;\n    string EndDateMonth?;\n    string EndDateYear?;\n    boolean EndCurrent?;\n    string Description?;\n};\n\npublic type EmployeeUSTaxStatusCollection record {\n    EmployeeUSTaxStatus[] Items?;\n};\n\npublic type EmployeeEmergencyContact record {\n    string FirstName?;\n    string LastName?;\n    string MiddleName?;\n    string Comment?;\n    boolean IsPrimary?;\n    RelationshipType Relationship?;\n    EmergencyContactPersonAddressCollection Addresses?;\n    EmergencyContactPersonContactCollection Contacts?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeShortTimeWorkCollection record {\n    EmployeeShortTimeWork[] Items?;\n};\n\npublic type PREarningAccumulator record {\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type EmploymentStatusReason record {\n    boolean IsCompChangeReason?;\n    boolean IsLeaveReason?;\n    boolean IsPositionChangeReason?;\n    boolean IsTerminationReason?;\n    boolean IsVoluntaryReason?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeWorkLocationOverride record {\n    EmployeeWorkLocationOverride[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeOvertimeGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PersonContact record {\n    ContactInformationType ContactInformationType?;\n    string ContactNumber?;\n    Country Country?;\n    string EffectiveEnd?;\n    string EffectiveStart?;\n    string ElectronicAddress?;\n    string Extension?;\n    boolean IsForSystemCommunications?;\n    boolean IsPreferredContactMethod?;\n    boolean IsUnlistedNumber?;\n    string FormattedNumber?;\n    boolean IsVerified?;\n    boolean IsRejected?;\n    boolean ShowRejectedWarning?;\n    int:Signed32 NumberOfVerificationRequests?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AttendancePolicy record {\n    int:Signed32 TrackingBasedOn?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeePropertyValue record {\n    EmployeePropertyValue[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type MilitaryServices record {\n    int:Signed32 _Total?;\n    MilitaryServiceDetails[] Values?;\n};\n\npublic type EmployeeDefaultLaborCollection record {\n    EmployeeDefaultLabor[] Items?;\n};\n\npublic type EmployeeCANStateTaxCollection record {\n    EmployeeCANStateTax[] Items?;\n};\n\npublic type PayrollPayEntryImportHistoryDetails record {\n    string Source?;\n    string ImportSetName?;\n    string ImportIdentifier?;\n    string SourceFile?;\n    string UploadedDateUTC?;\n    string StartDate?;\n    string FinishedDate?;\n    int:Signed32 ErrorActionCode?;\n    string ErrorOccurActionName?;\n    string ImportStatus?;\n    int:Signed32 TotalRecordsIncluded?;\n    int:Signed32 TotalRecordsImported?;\n    int:Signed32 TotalInvalidRecords?;\n    PayrollPayEntryImportHistoryErrorDetails[] Errors?;\n};\n\npublic type EmployeePunchPatchPostDeleteResponse record {\n    string XRefCode?;\n};\n\npublic type Payload_IEnumerable_EmployeeEthnicity record {\n    EmployeeEthnicity[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_String record {\n    string Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeGLSplitSets record {\n    string OrgUnitXRefCode?;\n    string DeptJobXRefCode?;\n    string DeptJobName?;\n    string OrgUnitName?;\n    string SplitEffectiveTo?;\n    string SplitEffectiveFrom?;\n    EmployeeGLSplitSetDetails[] EmployeeGLSplitSetDetails?;\n};\n\npublic type EmployeeScheduleActivityPostAPIRequestDTO record {\n    string XRefCode;\n    string TimeStart;\n    string TimeEnd;\n};\n\npublic type EmployeeTimeAwayFromWorkForSubmit record {\n    string EmployeeXRefCode?;\n    string TAFWXRefCode?;\n    string PayAdjustmentCodeXRefCode?;\n    string StatusXRefCode?;\n    string TimeStart?;\n    string TimeEnd?;\n    decimal NetHours?;\n    decimal[] NetHoursPerDay?;\n    string ManagerComment?;\n    string EmployeeComment?;\n    boolean AllDay?;\n    boolean HalfDay?;\n    int:Signed32 Days?;\n};\n\npublic type ContactInformationTypeGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Transfers record {\n    string TimeStart?;\n    string TimeStartRaw?;\n    string LocationXRefCode?;\n    string PositionXRefCode?;\n    string ProjectXRefCode?;\n    string DocketXRefCode?;\n    decimal DocketQuantity?;\n    string PayAdjustmentXRefCode?;\n    string EmployeeComment?;\n    string ManagerComment?;\n    LaborMetrics[] LaborMetrics?;\n};\n\npublic type Links record {\n    int:Signed32 _Total?;\n    LinkDetails[] Values?;\n};\n\npublic type EmployeePayAdjCodeGroupListCollection record {\n    EmployeePayAdjustCodeGroup[] Items?;\n};\n\npublic type Payload_IEnumerable_EmployeeAvailability record {\n    EmployeeAvailability[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PayAdjCodeGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EducationDetails record {\n    string Degree?;\n    string Field?;\n    string School?;\n    string Location?;\n    string StartDateYear?;\n    string EndDateYear?;\n    boolean EndCurrent?;\n};\n\npublic type EmployeeVeteransStatusCollection record {\n    EmployeeVeteransStatus[] Items?;\n};\n\npublic type Payload_Department record {\n    Department Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EarningStatementDocument record {\n    string Contents?;\n    string Title?;\n    string Link?;\n    string FileName?;\n};\n\npublic type MetadataField record {\n    string OriginalId?;\n    string ParentEntityType?;\n    string Label?;\n    string DbColumn?;\n    string DataType?;\n    AmfValidationModel[] Validators?;\n    PredefinedValue[] PredefinedValues?;\n    boolean EnableAdditionalAssumePreviousValueIfNullLogic?;\n    AmfAuthorize DfAuthorize?;\n    AmfCfg Cfg?;\n    AmfEnumFrom EnumFrom?;\n    boolean IsUniqueField?;\n    boolean IsPublicKey?;\n    boolean IsIndexKey?;\n    string Id?;\n    string Title?;\n    string ShortDescription?;\n    string LongDescription?;\n    string MetadataId?;\n    string DbTable?;\n    string Name?;\n    record {|string...;|} Mappings?;\n    boolean IsExtended?;\n    boolean IsCommon?;\n    ContextLevel GeoContext?;\n    string SchemaName?;\n    string ApplicationMapping?;\n    string DayforcePropertyName?;\n};\n\npublic type Payload_LaborCostResult record {\n    LaborCostResult Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PRGLSplitSet record {\n    Location Location?;\n    Position Position?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    PRGLSplitSetDetailCollection PRGLSplitSetDetails?;\n    string LastModifiedTimestamp?;\n};\n\npublic type DEUSTWParticipationReason record {\n    int:Signed32 DEUSTWParticipationReasonId?;\n    string ShortName?;\n    string LongName?;\n    string XRefCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type DocMgmtUploadResponse record {\n    string Status?;\n    DocMgmtFileProcessedResponse[] FilesProcessed?;\n};\n\npublic type AnalyticsReportDefinitions record {\n    # Feature Id for the Report.\n    string ReportId?;\n    # Name of the Report.\r\n    # The name will be localized, based on the Session Culture.\n    string Name?;\n    # Description of the Report.\r\n    # The description will be localized, based on the Session Culture.\n    string Description?;\n};\n\npublic type PaginatedPayload_IEnumerable_LaborValidationRule record {\n    LaborValidationRule[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type DEUHoursChangeReason record {\n    string ITSGCode?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PRGLSplitSetDetailMetricCodeCollection record {\n    PRGLSplitSetDetailMetricCode[] Items?;\n};\n\npublic type PayMethod record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BackgroundScreeningAdjudicationStatus record {\n    string ScreeningRequestId?;\n    string AdjudicationStatus?;\n};\n\npublic type EmployeeUSFederalTax record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    FederalFilingStatus FilingStatus?;\n    int:Signed32 Allowances?;\n    decimal AdditionalAmount?;\n    boolean IsTaxExempt?;\n    boolean IsLocked?;\n    boolean TwoJobs?;\n    decimal DependentTaxCredit?;\n    decimal OtherIncome?;\n    decimal Deductions?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PublicationDetails record {\n    string Title?;\n    string Url?;\n    string DateDay?;\n    string DateMonth?;\n    string DateYear?;\n    string Description?;\n};\n\npublic type PayrollDeduction record {\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type Payload_EmployeeVOE record {\n    EmployeeVOE Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeUnionMembership record {\n    string UnionMembershipDate?;\n    string EffectiveStart?;\n    DFUnion Union?;\n    string EffectiveEnd?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_EmployeeVOI record {\n    EmployeeVOI Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PayPeriodInformation record {\n    PayGroupBrief PayGroup?;\n    string PayPeriodStartDate?;\n    string PayPeriodEndDate?;\n    string OffsetPayPeriodStartDate?;\n    string OffsetPayPeriodEndDate?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LocationAddresses record {\n    string Description?;\n    string Address?;\n    string AddressLineTwo?;\n    string ZipPostalCode?;\n    string CountryName?;\n    string StateProvince?;\n    string City?;\n    string County?;\n    boolean IsTaxation?;\n    string CountryCode?;\n    string StateProvinceCode?;\n    boolean LocationInJtEconomicDevDistAreaJedd?;\n    string JeddTaxes?;\n    string TaxAuthorityInstance?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_BackgroundJobLog record {\n    BackgroundJobLog Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PaginatedPayload_PersonManagementHistory record {\n    PersonManagementHistory Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type EmployeeEarningLimit record {\n    EarningLimit EarningLimit?;\n    decimal LimitAmount?;\n    decimal LimitPercent?;\n    decimal PayGroupLimitAmount?;\n    decimal PayGroupLimitPercent?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Breaks record {\n    string TimeStart?;\n    string TimeEnd?;\n    decimal NetHours?;\n    string Type?;\n};\n\npublic type Payload_IEnumerable_ContactInformationType record {\n    ContactInformationType[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PaginatedPayload_PersonManagementExemption record {\n    PersonManagementExemption Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type EmployeeBadge record {\n    string BadgeNumber?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_PersonAddress record {\n    PersonAddress[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type DEUEmployeeWageTax record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string ReferenceDate?;\n    string EmploymentTypeCodeName?;\n    boolean ElectronicDataTransfer?;\n    string TaxClass?;\n    decimal Factor?;\n    decimal ChildAllowance?;\n    string DenominationCodeName?;\n    boolean TaxExemption?;\n    decimal RequestedAnnualAllowance?;\n    decimal AnnualAllowance?;\n    decimal MonthlyAllowance?;\n    string SpouseDenominationCodeName?;\n    boolean OptOutYearEndWageTaxAdjustment?;\n    boolean IsManualInput?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PensionTypeConfiguration record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeBalancePeriod record {\n    string EmployeeXRefCode?;\n    string BalanceName?;\n    string BalanceXRefCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    decimal InitialAccruedValue?;\n    decimal InitialGrantValue?;\n    decimal CurrentAccruedValue?;\n    decimal CurrentGrantValue?;\n    decimal MinimumValue?;\n    decimal MaximumValue?;\n};\n\npublic type Payload_IEnumerable_EmployeeUKNIDetails record {\n    EmployeeUKNIDetails[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PersonManagementEraseHistory record {\n    string HireDate?;\n    string TerminationDate?;\n    string LastPayDate?;\n    string PersonType?;\n    string LastBenefitCoverageDate?;\n    string LastDeptJob?;\n    string LastOrgUnit?;\n    string EmploymentStatusReason?;\n    string EligibleForRehire?;\n    string DisplayName?;\n    string Reason?;\n    string PurgeDate?;\n    string Originator?;\n    string EraseRequestDate?;\n    string LastPayGroup?;\n    string DayforceCreateDate?;\n    int:Signed32 RequestId?;\n};\n\npublic type PaginatedPayload_IEnumerable_EmployeeSchedule record {\n    EmployeeSchedule[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type EmployeeUKTaxDetails record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string TaxCode?;\n    boolean TaxBasis?;\n    decimal PreviousTaxableGrossPaidToDate?;\n    decimal PreviousTaxPaidToDate?;\n    string StarterDeclaration?;\n    boolean PreviouslyReportedOnFPS?;\n    string ChangeReasonXrefCode?;\n    string LegalEntityXrefCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_ContactInformationType record {\n    ContactInformationType Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeePayrollTaxParameter record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean ExemptTaxOnlyUpdateWages?;\n    boolean ExemptTaxAndTaxableWages?;\n    boolean InactivateTax?;\n    string TaxAuthorityInstance?;\n    string LegalEntityXrefCode?;\n    EmployeePayrollTaxParameterElement[] OverrideParameters?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeElectionAPIDeletionModel record {\n    string ElectionXrefCode?;\n    string SourceTypeXRefCode?;\n};\n\npublic type Educations record {\n    int:Signed32 _Total?;\n    EducationDetails[] Values?;\n};\n\npublic type Payload_IEnumerable_EmployeeOrgUnitInformation record {\n    EmployeeOrgUnitInformation[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeIRLTaxPRSI record {\n    EmployeeIRLTaxPRSI[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type HRIncidentInjury record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type ContextLevel record {\n    string Level?;\n    string LevelValue?;\n};\n\npublic type LMSCertification record {\n    string EffectiveEnd?;\n    string ExpirationUnit?;\n    int:Signed32 ExpirationValue?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeGLSplitUpsert record {\n    string EmployeeXRefCode?;\n    GLSplitSetUpsert[] GLSplitSets?;\n};\n\npublic type Payload_LaborMetricCodes record {\n    LaborMetricCodes Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type CandidateRTWDocument record {\n    int:Signed32 CandidateRTWDocumentId?;\n    string DocumentName?;\n    string DocumentExtension?;\n    string DateAdded?;\n    string DateExpire?;\n    string Type?;\n    string PathwayCode?;\n    string CountryCode?;\n    CandidateRTWDocumentSource Sources?;\n    CandidateRTWDocumentDetails[] Details?;\n    CandidateRTWDocumentGenericError[] DocumentErrors?;\n};\n\npublic type ClientPayrollCountry record {\n    string ClientOperatingLocations?;\n    string ClientOperatingLocationsLabel?;\n    boolean ConnectPayEnabled?;\n    PayrollCountry[] Countries?;\n};\n\npublic type JobClassification record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeAssignedSexAndGenderIdentity record {\n    Country Country?;\n    State State?;\n    AssignedSexCountryAware AssignedSexCountryAware?;\n    GenderIdentityCountryAware GenderIdentityCountryAware?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_DocumentImportQueueResponse record {\n    DocumentImportQueueResponse Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type KpiTargetPatternAssignment record {\n    string KpiXRefCode?;\n    string OrgUnitXRefCode?;\n    string ZoneXRefCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    int:Signed32 PatternOffset?;\n};\n\npublic type Payload_IEnumerable_Location record {\n    Location[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeBadgeCollection record {\n    EmployeeBadge[] Items?;\n};\n\npublic type EmployeeBalanceTransactions record {\n    int EmployeeBalancePeriodIdExternal?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    EmployeeBalanceTransaction[] Transactions?;\n};\n\npublic type PayrollEmployeeDeductionParameter record {\n    string ParamCodeName?;\n    string ShortName?;\n    decimal EmployeeElectedValue?;\n    decimal PayGroupDefaultValue?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Course record {\n    string CourseCode?;\n    CourseType CourseType?;\n    CourseProvider CourseProvider?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeePayAdjustmentLaborMetrics record {\n    string LaborMetricsTypeXRefCode?;\n    string LaborMetricsCodeXRefCode?;\n};\n\npublic type PaginatedPayload_IEnumerable_EmployeePaySummary record {\n    EmployeePaySummary[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type Role record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BankAccountBranchAddress record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeHighlyCompensatedEmployeeIndicator record {\n    EmployeeHighlyCompensatedEmployeeIndicator[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeCANFederalTax record {\n    EmployeeCANFederalTax[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type UserPayAdjCodeGroupCollection record {\n    UserPayAdjustCodeGroup[] Items?;\n};\n\npublic type ChildLocationCollection record {\n    ChildLocation[] Items?;\n};\n\npublic type EmployeeCourse record {\n    string StartDate?;\n    string CompletionDate?;\n    string CertificationExpiryDate?;\n    Course Course?;\n    EmployeeTrainingProgram EmployeeTrainingProgram?;\n    string CertificationNumber?;\n    string Comment?;\n    string Score?;\n    string PassFail?;\n    string Credits?;\n    decimal Cost?;\n    string CostCurrencyCode?;\n    LMSEnrollmentStatus EnrollmentStatus?;\n    int:Signed32 TimeSpent?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeEarning record {\n    boolean ContinuePaymentOnStatutoryPay?;\n    int:Signed32 IsOptOut?;\n    Earning Earning?;\n    string EffectiveEnd?;\n    string EffectiveStart?;\n    ElectionSchedule ElectionSchedule?;\n    PayGroup ElectionStartPayGroup?;\n    string ElectionStartPayPeriodStartDate?;\n    boolean IsBlocked?;\n    decimal LimitAmount?;\n    decimal LimitPercent?;\n    Location Location?;\n    Position Position?;\n    EmployeeEarningParameterCollection EmployeeEarningParameters?;\n    EmployeeEarningLimitCollection EmployeeEarningLimits?;\n    string LastModifiedTimestamp?;\n};\n\npublic type SuperannuationType record {\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type Projects record {\n    string[] CreationOrgUnitXRefCodes?;\n    string LongName?;\n    string ClockTransferCode?;\n    int:Signed32 ProjectPriority?;\n    string AccountNum?;\n    string LedgerCode?;\n    boolean IFRSClassification?;\n    string CertifiedPayrollProjectNumber?;\n    string CompletedDate?;\n    decimal PctComplete?;\n    decimal BudgetHours?;\n    decimal BudgetAmount?;\n    string ProjectClientXRefCode?;\n    string ProjectTypeXRefCode?;\n    string ProjectPhaseXRefCode?;\n    string ProductGroupXRefCode?;\n    string ProductModuleXRefCode?;\n    boolean Deleted?;\n    string TaxLocationAddressXRefCode?;\n    string[] ChildProjectXRefCodes?;\n    ProjectAssignmentType EmployeeXRefCodes?;\n    ProjectAssignmentType DeptJobXRefCodes?;\n    ProjectAssignmentType DepartmentXRefCodes?;\n    ProjectAssignmentType PayCodeXRefCodeChargeToHours?;\n    ProjectAssignmentType PayCodeXRefCodeChargeToAmount?;\n    boolean IsResidentAddressUsedForTaxation?;\n    boolean IsCOEProject?;\n    string ProjectXRefCode?;\n    string ShortName?;\n    string ParentProjectXRefCode?;\n    string StartDate?;\n    string DueDate?;\n};\n\npublic type EmployeeTrainingProgram record {\n    TrainingProgram TrainingProgram?;\n    string EnrollmentDate?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AmfProperty record {\n    int:Signed32 Id?;\n    int:Signed32 EntityId?;\n    int:Signed32 ParentId?;\n    string EntityState?;\n    string StringValue?;\n    boolean BoolValue?;\n    decimal NumberValue?;\n    string DateTimeValue?;\n};\n\npublic type CandidatePersonalIdentifiableInformation record {\n    string DateOfBirth?;\n    string SocialSecurityNumber?;\n    string SocialInsuranceNumber?;\n    string DriverLicense?;\n};\n\npublic type BaseProject record {\n    string ProjectXRefCode?;\n    string ShortName?;\n    string ParentProjectXRefCode?;\n    string StartDate?;\n    string DueDate?;\n};\n\npublic type EmploymentAgreementTaxRegime record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_SubordinateEntityReferences record {\n    SubordinateEntityReferences Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PaginatedPayload_IEnumerable_LMSCertification record {\n    LMSCertification[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type Payload_IEnumerable_EmployeeDisability record {\n    EmployeeDisability[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeUKPostgraduateLoan record {\n    EmployeeUKPostgraduateLoan[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type DisabilityGroup record {\n    int:Signed32 DisabilityGroupId?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeSchedule record {\n    string EmployeeScheduleXRefCode?;\n    string EmployeeXRefCode?;\n    string TimeStart?;\n    string TimeEnd?;\n    decimal NetHours?;\n    string DepartmentXRefCode?;\n    string JobXRefCode?;\n    string PositionXRefCode?;\n    string OrgUnitXRefCode?;\n    string SiteOrgUnitXRefCode?;\n    string OrgLocationTypeXRefCode?;\n    string PayAdjCodeXRefCode?;\n    string DocketXRefCode?;\n    string ProjectXRefCode?;\n    string Comment?;\n    boolean Published?;\n    Breaks[] Breaks?;\n    Activity[] Activities?;\n    Skills[] Skills?;\n    LaborMetric[] LaborMetrics?;\n    Segment[] Segments?;\n    boolean IsPostedShiftBid?;\n};\n\npublic type EmployeeMaritalStatus record {\n    MaritalStatus MaritalStatus?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_JobFeed record {\n    JobFeed[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeRawPunch record {\n    string RawPunchXRefCode?;\n    string PunchState?;\n    string PayDate?;\n    string EmployeeXRefCode?;\n    string EmployeeBadge?;\n    string RawPunchTime?;\n    boolean WasOfflinePunch?;\n    PunchExtraData ExtraData?;\n    string PunchType?;\n    string Comment?;\n    string PunchDevice?;\n    string SupervisorBadge?;\n    boolean IsDuplicate?;\n    string RejectedReason?;\n    string LocationXRefCode?;\n    string PositionXRefCode?;\n    string DepartmentXRefCode?;\n    string JobXRefCode?;\n    string IPAddress?;\n    string PunchOrigin?;\n    decimal Latitude?;\n    decimal Longitude?;\n    int:Signed32 Accuracy?;\n    string PunchXRefCode?;\n};\n\npublic type Payload_Job record {\n    Job Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type LegacyLaborMetricCodes record {\n    string Name?;\n    string Description?;\n    string LegacyLaborMetricType?;\n    string LegacyLaborMetricXRefCode?;\n};\n\npublic type AuthorityType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BusinessUnitParentAssignment record {\n    string BusinessUnitGlobalId?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeAvailabilityPostAPIRequestDTO record {\n    boolean IsDefault;\n    string EffectiveStart;\n    string EffectiveEnd;\n    string ManagerComments?;\n    EmployeeAvailabilityWeeksPostRequestDTO[] Weeks;\n};\n\npublic type EarningParameter record {\n    string CodeName?;\n    ParameterAccessType ParameterAccessType?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeScheduleMBPostAPIRequestDTO record {\n    string TimeStart;\n    string TimeEnd;\n    1|2 Type;\n};\n\n# This class provides information about a report.\npublic type ReportMetadata record {\n    # Name of the Report.\r\n    # The name will be localized, based on the Session Culture.\n    string Name?;\n    # Description of the Report.\r\n    # The description will be localized, based on the Session Culture.\n    string Description?;\n    # Reference Code for the Report.\r\n    # This is a unique, human readable, code used to identify the Report.\n    string XRefCode?;\n    # Maximum number of rows the Report will return as part of it\u0027s ResultSet.\r\n    # If the MaxRows is assigned -1, it will execute to include all possible rows in it\u0027s ResultSet.\n    int:Signed32 MaxRows?;\n    # An array of ReportColumnMetadata objects.\n    ReportColumnMetadata[] ColumnMetadata?;\n    # Collection of report parameters defined by the report.\n    ReportParameterMetadata[] Parameters?;\n};\n\npublic type Payload_IEnumerable_EmployeeEmploymentStatus record {\n    EmployeeEmploymentStatus[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeUnionCollection record {\n    EmployeeUnionMembership[] Items?;\n};\n\npublic type Address record {\n    string Address1?;\n    string Address2?;\n    string Address3?;\n    string Address4?;\n    string Address5?;\n    string Address6?;\n    string City?;\n    string PostalCode?;\n    Country Country?;\n    State State?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayClassGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeUSFederalTaxCollection record {\n    EmployeeUSFederalTax[] Items?;\n};\n\npublic type Deduction record {\n    CalculationType CalculationType?;\n    DeductionCode DeductionCode?;\n    DeductionType DeductionType?;\n    string DisplayName?;\n    string DebitJournalNumber?;\n    string CreditJournalNumber?;\n    boolean IsDecliningBalance?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeCANEmploymentInsuranceRate record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    LegalEntity LegalEntity?;\n    string RateGroup?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AnalyticsReportDataset record {\n    record {} Dataset?;\n};\n\npublic type PaginatedPayload_IEnumerable_EmployeeRawPunch record {\n    EmployeeRawPunch[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type CandidateApplicationStatusModel record {\n    string StatusName?;\n    string StatusGroupName?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n};\n\npublic type EmployeeDEUTaxSocialInsuranceCollection record {\n    DEUTaxSocialInsurance[] Items?;\n};\n\npublic type EmployeeEarningsCollection record {\n    EmployeeEarning[] Items?;\n};\n\npublic type EmployeeHRIncidentNote record {\n    string DateAdded?;\n    string Notes?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeVolunteerList record {\n    string EffectiveEnd?;\n    string EffectiveStart?;\n    VolunteerList VolunteerList?;\n    string LastModifiedTimestamp?;\n};\n\npublic type TaxProperty record {\n    string PropertyCodeName?;\n    string PropertyValue?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PaginatedPayload_PersonManagementEraseHistory record {\n    PersonManagementEraseHistory Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type Payload_PayType record {\n    PayType Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type LegacyLaborMetricPatchPostDeleteResponse record {\n    string XRefCode?;\n};\n\npublic type OrgUnitParentCollection record {\n    OrgUnitParent[] Items?;\n};\n\npublic type Position record {\n    decimal AverageDailyHours?;\n    string ClockTransferCode?;\n    Department Department?;\n    Job Job?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    EmploymentIndicator EmploymentIndicator?;\n    boolean Executive?;\n    decimal FTE?;\n    boolean IsNonService?;\n    boolean IsWCBExempt?;\n    string LedgerCode?;\n    boolean Officer?;\n    PayClass PayClass?;\n    PayGroup PayGroup?;\n    PayType PayType?;\n    PositionTerm PositionTerm?;\n    boolean PPACAFullTime?;\n    decimal SemiMonthlyBottomHours?;\n    decimal SemiMonthlyTopHours?;\n    decimal StandardCostRate?;\n    decimal WeeklyHours?;\n    decimal DefaultTargetBonus?;\n    PositionAssignmentCollection PositionAssignments?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeUSStateTaxCollection record {\n    EmployeeUSStateTax[] Items?;\n};\n\npublic type EmployeeDependentsBeneficiariesContactCollection record {\n    EmployeeDependentsBeneficiariesContact[] Items?;\n};\n\npublic type Payload_IEnumerable_EmployeeGlobalPropertyValue record {\n    EmployeeGlobalPropertyValue[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type CandidateApplicationStatusUpdatesModel record {\n    string Identifier?;\n    CandidateApplicationStatusModel[] ApplicationStatuses?;\n};\n\npublic type KpiData record {\n    string OrgUnitXRefCode?;\n    string KpiXRefCode?;\n    string Day?;\n    string Week?;\n    string Minute?;\n    boolean AggregateToDay?;\n    decimal Value?;\n    decimal AdjustedValue?;\n    string Forma?;\n    string Forecast?;\n    string ZoneXRefCode?;\n    string MdseXRefCode?;\n};\n\npublic type CandidateRTWDocumentSource record {\n    string SingleDocumentBase64?;\n    string DocumentFrontBase64?;\n    string DocumentBackBase64?;\n};\n\npublic type BenefitsDFLinkExportDependentRecord record {\n    string RecordType?;\n    int:Signed32 UniqueDependentId?;\n    string EmployeeNationalId?;\n    string NationalId?;\n    string NationalIDExpiryDate?;\n    string FirstName?;\n    string MiddleName?;\n    string LastName?;\n    string DateOfBirth?;\n    int:Signed32 GenderCode?;\n    string RelationshipCode?;\n    int:Signed32 MedicareStatusCode?;\n    int:Signed32 MedicareReasonCode?;\n    boolean StudentIndicator?;\n    boolean DependentHandicapIndicator?;\n    string DeathDate?;\n    string EligibilityBeginDate?;\n    string EligibilityEndDate?;\n    string XRefCode?;\n    boolean TobaccoSubstanceUse?;\n    string DateLastSmoked?;\n    int:Signed32 Height?;\n    int:Signed32 Weight?;\n    boolean InitialNoticeFlag?;\n    string SocialSecurityDisabilityAwardDate?;\n    int:Signed32 DependentAge?;\n    BenefitsDFLinkExportAddress[] AddressDetails?;\n    BenefitsDFLinkExportContact[] ContactDetails?;\n    BenefitsDFLinkExportDependentElectionDetail[] DependentElectionDetails?;\n};\n\npublic type Payload_IEnumerable_Department record {\n    Department[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type HRPolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PunchPolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeAUSSuperannuationCollection record {\n    EmployeeAUSSuperannuation[] Items?;\n};\n\npublic type Payload_Location record {\n    Location Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type AmfAuthorize record {\n    string[] Tags?;\n};\n\npublic type DocumentImportQueueRequest record {\n    string FileName?;\n    string Link?;\n    string DocumentTypeXRefCode?;\n    string EntityTypeXRefCode?;\n    string Entity?;\n    string EmployeeNumber?;\n    string[] Tags?;\n    string Comment?;\n    string AdditionalData?;\n    string EmployeeXRefCode?;\n};\n\npublic type EmployeeWorkPattern record {\n    decimal NetHours?;\n    string ShiftTimeBegin?;\n    string ShiftTimeEnd?;\n    int:Signed32 WorkPatternDayIndex?;\n    Department Deparment?;\n    Job Job?;\n    WorkPatternShiftType ShiftType?;\n    Location Location?;\n    OrgLocationType OrgLocationType?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_AnalyticsReportDefinitions record {\n    AnalyticsReportDefinitions[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeTimeAwayFromWork record {\n    string TAFWXRefCode?;\n    string DateOfRequest?;\n    string TimeStart?;\n    string TimeEnd?;\n    decimal NetHours?;\n    decimal NetUnits?;\n    int:Signed32 NetUnitsType?;\n    string ManagerComment?;\n    string EmployeeComment?;\n    string ReasonName?;\n    boolean AllDay?;\n    boolean HalfDay?;\n    decimal DailyElapsedHours?;\n};\n\npublic type EmployeeSchedulePatchAPIRequestDTO record {\n    string EmployeeScheduleXRefCode;\n    string TimeStart?;\n    string TimeEnd?;\n    boolean IsDeleted?;\n    string EmployeeXRefCode?;\n    boolean PostShiftBid?;\n    EmployeeScheduleMBPostAPIRequestDTO[] Breaks?;\n    EmployeeScheduleActivityPostAPIRequestDTO[] Activities?;\n    EmployeeScheduleSegmentAPIRequestDTO[] Segments?;\n    string PositionXRefCode?;\n    string DocketXRefCode?;\n    string PayAdjCodeXRefCode?;\n    string OrgLocationTypeXRefCode?;\n    string ProjectXRefCode?;\n    string Comment?;\n    EmployeeScheduleLaborMetricPostAPIRequestDTO[] LaborMetrics?;\n};\n\npublic type GlobalPropertyOption record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeConfidentialIdentificationCollection record {\n    EmployeeConfidentialIdentification[] Items?;\n};\n\npublic type EmployeeWorkAssignmentManager record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string TerminationDate?;\n    string EmploymentStatusGroupXRefCode?;\n    string ManagerXRefCode?;\n    string ManagerName?;\n    Position ActiveEmployeePosition?;\n    Location ActiveEmployeeLocation?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeUKIrregularPaymentDetails record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean IrregularPayments?;\n    string LegalEntityXrefCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeGlobalPropertyValue record {\n    string EffectiveEnd?;\n    string EffectiveStart?;\n    GlobalProperty GlobalProperty?;\n    boolean BitValue?;\n    decimal NumberValue?;\n    GlobalPropertyOption OptionValue?;\n    string StringValue?;\n    string DateTimeValue?;\n    string LastModifiedTimestamp?;\n};\n\npublic type DEUTaxSocialInsurance record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string PublicHealthInsuranceXrefCode?;\n    string LevyHealthInsuranceProviderXrefCode?;\n    string HighestSchoolEducationXrefCode?;\n    string HighestProfessionalEducationXrefCode?;\n    string RelationToEmployerXrefCode?;\n    boolean IsContractor?;\n    boolean MainlySelfEmployed?;\n    boolean IsParentLegalGuardian?;\n    string NumberOfEntitledChildren?;\n    string ContractTypeXrefCode?;\n    string LevyXrefCode?;\n    boolean IsMidijob?;\n    boolean IsSeasonalEmployee?;\n    string EmployeeGroupXrefCode?;\n    string HealthInsuranceXrefCode?;\n    string PensionInsuranceXrefCode?;\n    string UnemploymentInsuranceXrefCode?;\n    string CareInsuranceXrefCode?;\n    string CalculationBasisXrefCode?;\n    boolean EntitledToSickBenefit?;\n    EmployeeOccupationalPension EmployeeOccupationalPension?;\n    EmployeePrivateHealthInsurance EmployeePrivateHealthInsurance?;\n    boolean MainEmploymentWithMultipleMiniJobs?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayRunStatus record {\n    string PayGroupXRefCode?;\n    string PayGroupName?;\n    string PPN?;\n    string PayDate?;\n    string PeriodStartDate?;\n    string PeriodEndDate?;\n    string CountryCode?;\n    string CountryName?;\n    string Currency?;\n    string Status?;\n    string RejectionReason?;\n    string RejectionReasonDescription?;\n    string RejectionReasonXRefCode?;\n    string RejectionReasonCategory?;\n    string RejectionReasonCategoryXRefCode?;\n};\n\npublic type EmployeeIRLTaxRPNCollection record {\n    EmployeeIRLTaxRPN[] Items?;\n};\n\npublic type DFVeteransStatus record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AnalyticsReportMetadata record {\n    # Name of the Report.\r\n    # The name will be localized, based on the Session Culture.\n    string Name?;\n    # Description of the Report.\r\n    # The description will be localized, based on the Session Culture.\n    string Description?;\n    # Reference Code for the Report.\r\n    # This is a unique, human readable, code used to identify the Report.\n    string XRefCode?;\n    # FeatureId of the report\n    int:Signed32 ReportId?;\n    # Maximum number of rows the Report will return as part of it\u0027s ResultSet.\n    int:Signed32 MaxRows?;\n    # \n    boolean OnlyIncludeUniqueRecords?;\n    # An array of ReportColumnMetadata objects.\n    AnalyticsReportColumnMetadata[] Columns?;\n    # An array of AnalyticsParameterMetadata objects.\n    AnalyticsReportFilterMetadata[] Filters?;\n};\n\npublic type EmployeeGLSplitSetDetailUpsert record {\n    int:Signed32 LaborPercentage?;\n    boolean IsPrimary?;\n    string[] LaborMetricsXRefCodes?;\n};\n\npublic type PerformanceRating record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type TaxPropertyCollection record {\n    TaxProperty[] Items?;\n};\n\npublic type AmfRuleModel record {\n    string WorkflowName?;\n    string FunctionName?;\n    AmfRuleParameterModel[] Parameters?;\n};\n\npublic type BackgroundScreeningBillingCode record {\n    string ProviderReference?;\n    BackgroundScreeningProviderBillingCode[] BillingCodes?;\n};\n\npublic type AmfCfg record {\n    string Type?;\n    string Model?;\n    string Module?;\n    string AppView?;\n};\n\npublic type EmployeePayAdjustmentForSubmit record {\n    string EmployeePayAdjustXRefCode?;\n    string OrgUnitXRefCode?;\n    string EmployeeXRefCode?;\n    string PayAdjustmentCodeXRefCode?;\n    string PayAdjustmentDate?;\n    decimal Hours?;\n    decimal Amount?;\n    string JobXRefCode?;\n    string DepartmentXRefCode?;\n    string PayCategoryXRefCode?;\n    string ProjectXRefCode?;\n    string DocketXRefCode?;\n    boolean IsPremium?;\n    boolean IsDeleted?;\n    decimal Rate?;\n    string PayDate?;\n    string ReferenceDate?;\n    string EmployeeComment?;\n    string ManagerComment?;\n    boolean ManagerAuthorized?;\n    boolean EmployeeAuthorized?;\n    string AdjustPeriodStartDate?;\n    string AdjustPeriodEndDate?;\n    EmployeePayAdjustmentLaborMetrics[] LaborMetrics?;\n};\n\npublic type PayrollEmployeeDeductionLimit record {\n    decimal LimitAmount?;\n    decimal LimitPercent?;\n    string LimitTypeCodeName?;\n    string ShortNameFormattedAmount?;\n    string ShortNameFormattedPercent?;\n    decimal PayGroupDefaultLimitAmount?;\n    decimal PayGroupDefaultLimitPercent?;\n    string PRDeductionLimitXRefCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_QuestionModel record {\n    QuestionModel[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeSSOAccount record {\n    EmployeeSSOAccount[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeDeductionPayeeParameter record {\n    string ShortName?;\n    string XRefCode?;\n    string EmployeeElectedValue?;\n    string PayeeDefaultValue?;\n    string Comments?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmploymentAgreementDetails record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeIRLTaxPAYEExclusion record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean ExclusionOrder?;\n    string LegalEntityXrefCode?;\n    LegalEntity LegalEntity?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LMSEnrollmentStatus record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeAUSFederalTaxCollection record {\n    EmployeeAUSFederalTax[] Items?;\n};\n\npublic type CourseProvider record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayeeStateCoverage record {\n    string StateCode?;\n    string StateName?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n};\n\npublic type AssignedSexCountryAware record {\n    AssignedSexComplianceCode AssignedSexComplianceCode?;\n    string UserDefinedComplianceCode?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_Projects record {\n    Projects Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type DEUEmployeeAccidentInsuranceCollection record {\n    DEUEmployeeAccidentInsurance[] Items?;\n};\n\npublic type SuperannuationContributionCalculationType record {\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type EmployeeBalanceTransactionForPatch record {\n    string TransactionDate?;\n    decimal Delta?;\n    decimal GrantDelta?;\n    string Comment?;\n};\n\npublic type Paging record {\n    string Next?;\n};\n\npublic type EmploymentStatus record {\n    boolean IsBenefitArrearsEnabled?;\n    string EffectiveStartingPointOfDay?;\n    EmploymentStatusGroup EmploymentStatusGroup?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type City record {\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type MaritalStatus record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PMPosition record {\n    string PositionGlobalId?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string LedgerCode?;\n    string Number?;\n    decimal FTE?;\n    BusinessUnit BusinessUnit?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeDeductionParameterCollection record {\n    EmployeeDeductionParameter[] Items?;\n};\n\npublic type Payload_IEnumerable_AuthorizationAssignment record {\n    AuthorizationAssignment[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeAUSFederalTax record {\n    EmployeeAUSFederalTax[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmergencyContactPersonContact record {\n    string ContactNumber?;\n    Country Country?;\n    string ElectronicAddress?;\n    string Extension?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    ContactInformationType ContactInformationType?;\n    boolean IsForSystemCommunications?;\n    boolean IsPreferredContactMethod?;\n    boolean IsUnlistedNumber?;\n    string FormattedNumber?;\n    boolean IsVerified?;\n    boolean IsRejected?;\n    boolean ShowRejectedWarning?;\n    int:Signed32 NumberOfVerificationRequests?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_OperatingHours record {\n    OperatingHours Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type FederalFilingStatus record {\n    string CountryCode?;\n    string FederalFilingStatusCode?;\n    string CalculationCode?;\n    string PayrollOutput?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type GenderIdentityCountryAware record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeEarningPayeeParameter record {\n    string ShortName?;\n    string XRefCode?;\n    string EmployeeElectedValue?;\n    string PayeeDefaultValue?;\n    string Comments?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_LegacyLaborMetricCodes record {\n    LegacyLaborMetricCodes Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type BackgroundScreeningReportScreeningStatus record {\n    string Status?;\n    string AdjudicationStatus?;\n    string Result?;\n};\n\npublic type EmployeeDefaultLaborMetricsCodeCollection record {\n    EmployeeDefaultLaborMetricsCode[] Items?;\n};\n\npublic type EmployeeUKPostgraduateLoan record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string LegalEntityXrefCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PlanTarget record {\n    string PlanTargetXRefCode?;\n    string Name?;\n    string Description?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    decimal TargetValue?;\n    string KpiXRefCode?;\n    string ZoneXRefCode?;\n    string[] DaysOfWeek?;\n    string[] OrgUnitXRefCodes?;\n    string CreationOrgUnitXRefCode?;\n};\n\npublic type AmfValidationModel record {\n    string Type?;\n    record {} Value?;\n};\n\npublic type OrgUnitLegalEntityCollection record {\n    OrgUnitLegalEntity[] Items?;\n};\n\npublic type Payload_IEnumerable_EmployeePayGradeRate record {\n    EmployeePayGradeRate[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeePayAdjustCodeGroup record {\n    EmployeePayAdjustCodeGroup[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type BenefitsDFLinkExportAddress record {\n    string RecordType?;\n    string AddressType?;\n    string AddressLine1?;\n    string AddressLine2?;\n    string AddressLine3?;\n    string City?;\n    string County?;\n    string StateCode?;\n    string CountryCode?;\n    string PostalCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n};\n\npublic type Payload_IEnumerable_Document record {\n    Document[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_PayRunStatus record {\n    PayRunStatus Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type LaborMetric record {\n    string CodeXRefCode?;\n    string TypeXRefCode?;\n};\n\npublic type EmployeeDependentsBeneficiariesCollection record {\n    EmployeeDependentBeneficiary[] Items?;\n};\n\npublic type EmployeeCourseCollection record {\n    EmployeeCourse[] Items?;\n};\n\npublic type DocMgmtSecurityGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeWorkContract record {\n    EmployeeWorkContract[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_KpiTargetPattern record {\n    KpiTargetPattern[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PayeePaymentMethod record {\n    string PaymentMethodXrefCode?;\n    string PaymentMethodName?;\n    string StatementMessage?;\n    string PayableTo?;\n    boolean CombineEmployee?;\n    boolean CombineEarningAndDeduction?;\n    boolean ShowEmployeeDetail?;\n    boolean AllowNegativeAmounts?;\n    string AccountNumber?;\n    string TransitNumber?;\n    string AccountTypeName?;\n    string AccountTypeCode?;\n    string BankName?;\n    string BankNumber?;\n    boolean SuppressPrintOfAdviceStatements?;\n    string PaymentFrequencyName?;\n    string PaymentFrequencyXRefCode?;\n    string StatementLanguageCode?;\n    string StatementLanguageName?;\n    string BuildingSocietyNumber?;\n    string PayeeCode?;\n    string PayeeReferenceNumber?;\n    string ScheduleStartDate?;\n    string ScheduleEndDate?;\n    string SchedulePayDate?;\n};\n\npublic type OperatingHoursRecurExceptionDetails record {\n    int:Signed32 RecurrenceType?;\n    int:Signed32 RecurrencePeriod?;\n    string RecurrenceValue?;\n    string RecurrenceEndDate?;\n};\n\npublic type EarningType record {\n    string CodeName?;\n    boolean IsGLAllocatedDebit?;\n    boolean IsGLAllocatedCredit?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PaginatedPayload_IEnumerable_EmployeeWorkLocationOverride record {\n    EmployeeWorkLocationOverride[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type Payload_IEnumerable_DEUEmployeeAccidentInsurance record {\n    DEUEmployeeAccidentInsurance[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type JobPostingApplicantModel record {\n    string Locale?;\n    int AppliedOnMillis?;\n    JobPostingResponseModel Job?;\n    ApplicantDetails Applicant?;\n    QuestionsInResponse Questions?;\n    CandidateProfileSource CandidateSource?;\n};\n\npublic type EmployeeWorkLocationOverride record {\n    string LocationName?;\n    string Description?;\n    string ReferenceCode?;\n    boolean AllowLegalEntityOverride?;\n    string LocationAddressXRefCode?;\n    string Address?;\n    string Address2?;\n    string CityName?;\n    string StateName?;\n    string StateCode?;\n    string PostalCode?;\n    string County?;\n    string CountryName?;\n    string CountryCode?;\n    string JeddTaxes?;\n    LegalEntityOverride[] LegalEntityOverrideDetails?;\n};\n\npublic type EmployeeUKStudentLoanCollection record {\n    EmployeeUKStudentLoan[] Items?;\n};\n\npublic type AwardDetails record {\n    string Title?;\n    string DateMonth?;\n    string DateYear?;\n    string Description?;\n};\n\npublic type AnalyticsListValue record {\n    # The Id of the list item.  This value would be passed as the parameter value.\r\n    # Multiple Id\u0027s can be passed as a parameter value if comma separated.\n    int:Signed32 ListValueId?;\n    # The name that can be displayed in a list to the user.\n    string Name?;\n};\n\npublic type Payload_IEnumerable_LocationAddresses record {\n    LocationAddresses[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type LegalEntity record {\n    Country Country?;\n    Address LegalEntityAddress?;\n    string LegalIdNumber?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type DocumentImportQueueResponse record {\n    string Status?;\n    string JobGuid?;\n    string QueueTimestamp?;\n    int:Signed32[] DocumentsQueued?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type OrgLevel record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BackgroundJobLogParameters record {\n    string Name?;\n    string Value?;\n};\n\npublic type VolunteerList record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeUSStateTax record {\n    EmployeeUSStateTax[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_DeductionDefinition record {\n    DeductionDefinition[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Activity record {\n    string TimeStart?;\n    string TimeEnd?;\n    string XRefCode?;\n};\n\npublic type PositionDetails record {\n    string Title?;\n    string Company?;\n    string Location?;\n    string StartDateMonth?;\n    string StartDateYear?;\n    string EndDateMonth?;\n    string EndDateYear?;\n    boolean EndCurrent?;\n    string Description?;\n};\n\npublic type DEUEmployeeAccidentInsurance record {\n    string LegalEntityXrefCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean IsExempt?;\n    string LastModifiedTimestamp?;\n    DEUEmployeeAccidentInsuranceHazardCategoryCollection AccidentInsuranceHazardCategory?;\n};\n\npublic type AccumulationType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type DeductionPayeeParameter record {\n    string PayeeParameterName?;\n    string PayeeParameterXRefCode?;\n    string Value?;\n};\n\npublic type DFUnion record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Department record {\n    string LedgerCode?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type AccidentInsuranceHazardCategory record {\n    string PRDEUAccidentInsuranceProvider_BBNR_UV?;\n    string CategoryNumber?;\n    int:Signed32 Percentage?;\n};\n\npublic type LocationAddress record {\n    string Address1?;\n    string Address2?;\n    string PostalCode?;\n    State State?;\n    Country Country?;\n    string City?;\n    string County?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeVolunteerList record {\n    EmployeeVolunteerList[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeDefaultLaborMetricsCode record {\n    LaborMetricsCode LaborMetricsCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeAddress record {\n    string AddressLine1?;\n    string AddressLine2?;\n    string City?;\n    string State?;\n    string Country?;\n    string PostalCode?;\n};\n\npublic type PRSIClass record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeEIRateCollection record {\n    EmployeeCANEmploymentInsuranceRate[] Items?;\n};\n\npublic type LimitType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_DEUTaxSocialInsurance record {\n    DEUTaxSocialInsurance[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PayClass record {\n    int:Signed32 SortOrder?;\n    decimal DefaultNormalWeeklyHours?;\n    string LedgerCode?;\n    PayClassGroup PayClassGroup?;\n    PayClassFrequency PayClassFrequency?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LegalEntityAddress record {\n    string AddressLine1?;\n    string AddressLine2?;\n    string City?;\n    string State?;\n    string Country?;\n    string PostalCode?;\n};\n\npublic type EmployeeSkill record {\n    Skill Skill?;\n    SkillLevel SkillLevel?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    Course Course?;\n    TrainingProgram TrainingProgram?;\n    LMSAssignmentMethod LMSAssignmentMethod?;\n    string LastAssignedBy?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LegalEntityWorkSiteState record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LaborCostTimeInterval record {\n    string IntervalStartTime?;\n    string IntervalEndTime?;\n    LaborCostTotalResult Totals?;\n};\n\npublic type Payload_IEnumerable_EmployeePayrollElectionDeletionModel record {\n    EmployeePayrollElectionDeletionModel[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type BioSensitivityLevel record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type ClientMetadata record {\n    string ServiceVersion?;\n    string ServiceUri?;\n};\n\npublic type EarningPayee record {\n    string EarningScheduleName?;\n    string EarningScheduleXRefCode?;\n    EarningPayeeParameter[] PayeeParameters?;\n    EarningPayeeEarningParameter[] PayeeEarningParameters?;\n    EarningPayeeEarningLimit[] PayeeEarningLimits?;\n    string PayeeName?;\n    string PayeeXRefCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean Default?;\n};\n\npublic type PayrollPolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BackgroundScreeningProviderPackage record {\n    string PackageId?;\n    string Name?;\n    string Description?;\n    boolean IncludeRTW?;\n    BackgroundScreeningAssociatedBillingCode[] AssociatedBillingCodes?;\n};\n\npublic type Payload_IEnumerable_EmployeeCANEmploymentInsuranceRate record {\n    EmployeeCANEmploymentInsuranceRate[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PayTypeGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeWorkAssignmentManager record {\n    EmployeeWorkAssignmentManager[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeEthnicity record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    DFEthnicity Ethnicity?;\n    DFEthnicity ManagerEthnicity?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeWorkAssignment record {\n    Position Position?;\n    Location Location?;\n    EmploymentIndicator EmploymentIndicator?;\n    EmploymentStatusReason EmploymentStatusReason?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    decimal FlatAmount?;\n    decimal FTE?;\n    boolean IsPAPrimaryWorkSite?;\n    boolean IsPrimary?;\n    boolean IsStatutory?;\n    boolean IsVirtual?;\n    string BusinessTitle?;\n    JobSetLevel JobSetLevel?;\n    decimal LaborPercentage?;\n    string LastModifiedTimeStamp?;\n    decimal MultiJSalaryAllocationPercent?;\n    boolean ParticipateInReciprocalTaxCalculation?;\n    decimal TelecommuterPercentage?;\n    boolean IsConvenienceOfEmployee?;\n    boolean EndSecondaryWorkAssignments?;\n    PositionTerm PositionTerm?;\n    BankAccountBranchAddress PRBankAccountBranchAddress?;\n    WorkLocationOverride WorkLocationOverride?;\n    int Rank?;\n    decimal JobRate?;\n    TipTypeGroup TipTypeGroup?;\n    string LedgerCode?;\n    PMPositionAssignment PMPositionAssignment?;\n    JobClassificationGlobal JobClassificationGlobal?;\n};\n\npublic type EmployeeUKTaxDetailsCollection record {\n    EmployeeUKTaxDetails[] Items?;\n};\n\npublic type DeductionParameter record {\n    ParameterAccessType ParameterAccessType?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_AnalyticsReportDataset record {\n    AnalyticsReportDataset Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type LMSCertificationStatus record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeEmploymentAgreementCollection record {\n    EmployeeEmploymentAgreement[] Items?;\n};\n\npublic type EmployeeGLSplits record {\n    string EmployeeName?;\n    string EmployeeNumber?;\n    string EmployeeXRefCode?;\n    EmployeeGLSplitSets[] EmployeeGLSplitSets?;\n};\n\npublic type EmployeeAvailabilityWeeksPostRequestDTO record {\n    EmployeeAvailabilityDaysPostRequestDTO[] Days;\n};\n\npublic type PayrollPayEntryImportHistory record {\n    string PayGroupXRefCode?;\n    string Currency?;\n    string PeriodStart?;\n    string PeriodEnd?;\n    string PayDate?;\n    string PPN?;\n    PayrollPayEntryImportHistoryDetails[] Imports?;\n};\n\npublic type Payload_IEnumerable_UserPayAdjustCodeGroup record {\n    UserPayAdjustCodeGroup[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Publications record {\n    int:Signed32 _Total?;\n    PublicationDetails[] Values?;\n};\n\npublic type PaginatedPayload_IEnumerable_EmployeePayrollElection record {\n    EmployeePayrollElection[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type EmployeePrivateHealthInsurance record {\n    string HealthInsuranceStartDate?;\n    string PrivateHealthInsuranceXrefCode?;\n    string PaymentCompletedByXrefCode?;\n    decimal TotalContributionHealth?;\n    decimal TotalContributionCare?;\n    decimal BaseContributionHealth?;\n    decimal BaseContributionCare?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BackgroundScreeningAssociatedBillingCode record {\n    string BillingCodeId?;\n    string Name?;\n    string Description?;\n};\n\npublic type KpiTargetPatternPOST record {\n    KpiTargetPatternAssignment[] Assignment?;\n    KpiTargetPatternDetail[] Pattern?;\n};\n\npublic type PayeeParameter record {\n    string PayeeParameterName?;\n    string PayeeParameterDescription?;\n    string PayeeParameterXRefCode?;\n    string AccessTypeName?;\n    string AccessTypeCode?;\n    string ParameterTypeName?;\n    string ParameterTypeXRefCode?;\n    boolean Required?;\n    string Pattern?;\n    int:Signed32 MaxLength?;\n    string DataTypeCode?;\n};\n\npublic type PunchExtraData record {\n    string DocketXRefCode?;\n    string ProjectXRefCode?;\n    string PositionXRefCode?;\n    string LocationXRefCode?;\n    decimal Quantity?;\n    string MealWaiver?;\n    boolean BreakAttestation?;\n    boolean BioFailure?;\n    boolean FaceVerificationFailure?;\n    PunchLaborMetric[] LaborMetrics?;\n    string DocketClockTransferCode?;\n    string ProjectClockTransferCode?;\n    string PositionClockTransferCode?;\n    string LocationClockTransferCode?;\n};\n\npublic type EmployeePaySummary record {\n    string EmployeeXRefCode?;\n    string PositionXRefCode?;\n    string DepartmentXRefCode?;\n    string JobXRefCode?;\n    string PayCodeXRefCode?;\n    string PayCategoryXRefCode?;\n    string PayDate?;\n    string BusinessDate?;\n    string TimeStart?;\n    string TimeEnd?;\n    string PunchSegmentStart?;\n    string LocationXRefCode?;\n    decimal NetHours?;\n    int:Signed32 MinuteDuration?;\n    decimal Rate?;\n    decimal PayAmount?;\n    boolean IsPremium?;\n    string ProjectXRefCode?;\n    string DocketXRefCode?;\n    decimal PieceQuantity?;\n    int PayExportId?;\n    string LaborMetricsCode0XRefCode?;\n    string LaborMetricsCode1XRefCode?;\n    string LaborMetricsCode2XRefCode?;\n    string LaborMetricsCode3XRefCode?;\n    string LaborMetricsCode4XRefCode?;\n    string LaborMetricsCode5XRefCode?;\n    string LaborMetricsCode6XRefCode?;\n    string LaborMetricsCode7XRefCode?;\n    string LaborMetricsCode8XRefCode?;\n    string LaborMetricsCode9XRefCode?;\n};\n\npublic type CalculationType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PolicyAssociation record {\n    string Person?;\n    string XRefCode?;\n    string Number?;\n    string StartDate?;\n    string PersonType?;\n    string Status?;\n    boolean ExemptedFromDataMinimization?;\n    string DataManagementCountryCode?;\n};\n\npublic type Payload_IEnumerable_ReportMetadata record {\n    ReportMetadata[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type DeductionCode record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeLocationCollection record {\n    EmployeeLocation[] Items?;\n};\n\npublic type EmployeeSchedulePostAPIRequestDTO record {\n    string TimeStart;\n    string TimeEnd;\n    string PositionXRefCode;\n    string EmployeeXRefCode?;\n    boolean PostShiftBid?;\n    EmployeeScheduleMBPostAPIRequestDTO[] Breaks?;\n    EmployeeScheduleActivityPostAPIRequestDTO[] Activities?;\n    EmployeeScheduleSegmentAPIRequestDTO[] Segments?;\n    string DocketXRefCode?;\n    string PayAdjCodeXRefCode?;\n    string OrgLocationTypeXRefCode?;\n    string ProjectXRefCode?;\n    string Comment?;\n    EmployeeScheduleLaborMetricPostAPIRequestDTO[] LaborMetrics?;\n};\n\npublic type EmployeePayrollTaxName record {\n    string TaxName?;\n    string Description?;\n};\n\npublic type QuestionConditionModel record {\n    string id?;\n    string value?;\n};\n\npublic type LaborMetricsCodesForSubmit record {\n    string ShortName?;\n    string LongName?;\n    string EffectiveFrom?;\n    string EffectiveEnd?;\n    string LaborMetricsCodeXRefCode?;\n    string ClockTransferCode?;\n    string LedgerCode?;\n    string[] OrgUnitXRefCodes?;\n    string LaborMetricsTypeXRefCode?;\n    boolean IsDeleted?;\n};\n\npublic type PaginatedPayload_String record {\n    string Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type PaginatedPayload_IEnumerable_EmployeePayAdjustment record {\n    EmployeePayAdjustment[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type BackgroundScreeningProviderBillingCode record {\n    string BillingCodeId?;\n    string Name?;\n    string Description?;\n    BackgroundScreeningAssociatedPackage[] AssociatedPackages?;\n};\n\npublic type ShiftTradePolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeCourse record {\n    EmployeeCourse[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeOnboardingPolicyCollection record {\n    EmployeeOnboardingPolicy[] Items?;\n};\n\npublic type EmployeeWorkContractCollection record {\n    EmployeeWorkContract[] Items?;\n};\n\npublic type AmfOnCUDActionModel record {\n    string Type?;\n    0|1|2 Action?;\n    string Location?;\n    record {} Value?;\n    record {} Params?;\n};\n\npublic type UserEmployeeAuthorityTypeAssignmentCollection record {\n    AuthorizationAssignment[] Items?;\n};\n\npublic type DFEthnicity record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeMaritalStatus record {\n    EmployeeMaritalStatus[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PersonAddress record {\n    string Address1?;\n    string Address2?;\n    string Address3?;\n    string Address4?;\n    string Address5?;\n    string Address6?;\n    string City?;\n    string PostalCode?;\n    Country Country?;\n    State State?;\n    ContactInformationType ContactInformationType?;\n    boolean IsPayrollMailing?;\n    boolean DisplayOnTaxForm?;\n    boolean DisplayOnEarningStatement?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string County?;\n    string LastModifiedTimestamp?;\n};\n\npublic type ListValue record {\n    # The Id of the list item.  This value would be passed as the parameter value.\r\n    # Multiple Id\u0027s can be passed as a parameter value if comma separated.\n    int:Signed32 ListValueId?;\n    # The name that can be displayed in a list to the user.\n    string Name?;\n};\n\npublic type EmployeeMaritalStatusCollection record {\n    EmployeeMaritalStatus[] Items?;\n};\n\npublic type Payload_IEnumerable_EmployeePayrollElection record {\n    EmployeePayrollElection[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type ManagerAssignShiftBidDTO record {\n    string GroupXRefCode;\n    string EmployeeXRefCode;\n};\n\npublic type CandidateRightToWorkResult record {\n    int:Signed32 CandidateRightToWorkResultId?;\n    string WorkRightStatus?;\n    string Status?;\n    string DateIssued?;\n    int:Signed32 PartnerIdentifier?;\n    string DateCompleted?;\n    string WorkRightEffectiveStart?;\n    string WorkRightEffectiveEnd?;\n    CandidateRTWRejectionReason[] RejectionOrCancellationReasons?;\n    CandidateRTWDocument[] Documents?;\n};\n\npublic type EmergencyContactCollection record {\n    EmployeeEmergencyContact[] Items?;\n};\n\npublic type PaginatedPayload_IEnumerable_BackgroundJobLog record {\n    BackgroundJobLog[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type EmployeePayGradeRateCollection record {\n    EmployeePayGradeRate[] Items?;\n};\n\n# This class encapsulates the report data generated during the execution of the report.\npublic type AnalyticsReportColumnMetadata record {\n    # CodeName is a unique name that can be used with code\r\n    # to refer to this specific column.  Its value should be consistent.\n    string Name?;\n    # This is a name as defined by a user when developing this report.  This name\r\n    # would be a human facing name that would be used on a printed report.\r\n    # This field is used as the key to the values dictionary\n    string Description?;\n    # This is a string representation of the data type.\n    string DataType?;\n};\n\npublic type BenefitsDFLinkExportBeneficiaryElectionDetail record {\n    string RecordType?;\n    int:Signed32 UniqueBeneficiaryId?;\n    string PlanTypeCode?;\n    string PlanSubTypeCode?;\n    string PlanXrefCode?;\n    string PlanCode?;\n    string PolicyNumber?;\n    string OptionCode?;\n    string CoverageStartDate?;\n    string CoverageEndDate?;\n    decimal BeneficiaryPercentage?;\n    boolean ContingentBeneficiaryIndicator?;\n    string EffectiveStartDate?;\n    string EffectiveEndDate?;\n    string PlanStartDate?;\n};\n\npublic type EmployeeVOI record {\n    EmployeeEarningSummary[] Earnings?;\n    string Namespace?;\n    EmployeeLegalEntity[] LegalEntities?;\n    string NationalIdNumber?;\n    string EmployeeXRefCode?;\n    string FirstName?;\n    string MiddleName?;\n    string LastName?;\n    string BirthDate?;\n    EmployeeAddress EmployeeResidentialAddress?;\n};\n\n# Report meta data that defines report parameters.\r\n# Parameter values are supplied by the end-user for execution.\r\n# All parameters must be supplied during execution.\r\n# Not all Parameters have default value.\npublic type ReportParameterMetadata record {\n    # Name of the parameter.\n    string Name?;\n    # Human readable name of the parameter.\n    string DisplayName?;\n    # Unique Id of parameter.\n    string ReportParameterMetadataId?;\n    # Data type of the parameter.\n    string DataType?;\n    # Operator type of the parameter, such as \u003d, \u0026lt;, \u0026gt;\u003d, etc...\r\n    # Not all parameters have operator type.\r\n    # For example, SQL Parameters don\u0027t have operators.\n    string Operator?;\n    # Default value that will be used if no other value is provided for the parameter.\r\n    # Not all parameters have default value.\r\n    # End-user needs to supply a value in here if the parameter doesn\u0027t have value.\r\n    # Reference values should contain Ids and be comma separated. E.g \"1,2,3\"\n    string DefaultValue?;\n    # True if a value needs to be supplied.\n    boolean IsRequired?;\n    # List of available values a parameter can have.\n    ListValue[] AvailableValues?;\n};\n\npublic type PRPayeeEarning record {\n    string ShortName?;\n    string PayeeXRefCode?;\n    string LongName?;\n    string PaymentMethodCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BackgroundJobLog record {\n    int:Signed32 BackgroundJobLogId?;\n    string BackgroundJobLogGuid?;\n    string Name?;\n    string CodeName?;\n    string Status?;\n    boolean WasScheduled?;\n    boolean HasItemLevelErrors?;\n    string QueueTimeUtc?;\n    string ExecStartTimeUtc?;\n    string ExecEndTimeUtc?;\n    string SubmittedBy?;\n    BackgroundJobLogParameters[] Parameters?;\n    string JobInformation?;\n    string ErrorInformation?;\n    string DebugInformation?;\n    string FileList?;\n    string LastModifiedTimestampUtc?;\n};\n\npublic type Payload_IEnumerable_EmployeeOnboardingPolicy record {\n    EmployeeOnboardingPolicy[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeePayrollElection record {\n    string EmployeeName?;\n    string EmployeeNumber?;\n    string EmployeeXRefCode?;\n    int RowNumber?;\n    PayrollElection[] Elections?;\n    string CurrentPayRunStatus?;\n    string CurrentPayPeriodStart?;\n    string CurrentPayPeriodEnd?;\n    string PreviousPayPeriodStart?;\n    string PreviousPayPeriodEnd?;\n};\n\npublic type EmployeeDisability record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string EvidenceNumber?;\n    string CountryCode?;\n    string DisabilityEvidenceIssuingAgencyLocation?;\n    string ValidFrom?;\n    string ExpiryDate?;\n    DisabilityEvidenceIssuingAgency DisabilityEvidenceIssuingAgency?;\n    DisabilityEvidenceType DisabilityEvidenceType?;\n    DisabilityWorkingTime DisabilityWorkingTime?;\n    DisabilityGroup DisabilityGroup?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeePayAdjustCodeGroup record {\n    PayAdjCodeGroup PayAdjCodeGroup?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayClassFrequency record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PayGroupBrief record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EarningLimit record {\n    LimitAccessType LimitAccessType?;\n    AccumulationType AccumulationType?;\n    LimitType LimitType?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeOnboardingPolicy record {\n    OnboardingPolicy OnboardingPolicy?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean IsInternalHire?;\n    string LastModifiedTimestamp?;\n};\n\npublic type CandidateDetails record {\n    string FirstName?;\n    string LastName?;\n    string Headline?;\n    string Summary?;\n    string PublicProfileUrl?;\n    string AdditionalInfo?;\n    string PhoneNumber?;\n    string HomePhoneNumber?;\n    CandidateLocation Location?;\n    string Skills?;\n    Positions Positions?;\n    Educations Educations?;\n    Links Links?;\n    Awards Awards?;\n    Certifications Certifications?;\n    Associations Associations?;\n    Patents Patents?;\n    Publications Publications?;\n    MilitaryServices MilitaryServices?;\n};\n\npublic type Payload_IEnumerable_EmployeeHealthWellness record {\n    EmployeeHealthWellness[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_PlanTarget record {\n    PlanTarget[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PayGroup record {\n    PayFrequency PayFrequency?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type CandidateLocation record {\n    string City?;\n    string PostalCode?;\n    string Address1?;\n    string Address2?;\n    string Address3?;\n    string Country?;\n    string StateCode?;\n    string StateName?;\n    string County?;\n};\n\npublic type Payload_Employee record {\n    Employee Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_PayType record {\n    PayType[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Skill record {\n    SkillType SkillType?;\n    SkillLevel[] SkillLevel?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LegacyLaborMetricForSubmit record {\n    string ShortName?;\n    string LongName?;\n    string LegacyLaborMetricType?;\n    string LegacyLaborMetricXRefCode?;\n};\n\npublic type EmployeeScheduleSegmentLaborMetric record {\n    string CodeXRefCode?;\n    string TypeXRefCode?;\n};\n\npublic type EmergencyContactPersonAddress record {\n    string Address1?;\n    string Address2?;\n    string Address3?;\n    string Address4?;\n    string Address5?;\n    string Address6?;\n    string County?;\n    string City?;\n    string PostalCode?;\n    Country Country?;\n    State State?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    ContactInformationType ContactInformationType?;\n    boolean IsPayrollMailing?;\n    boolean DisplayOnTaxForm?;\n    boolean DisplayOnEarningStatement?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeCompensationCollection record {\n    EmployeeCompensation[] Items?;\n};\n\npublic type EmployeeVOE record {\n    string Namespace?;\n    EmployeeLegalEntity[] LegalEntities?;\n    string NationalIdNumber?;\n    string EmployeeXRefCode?;\n    string FirstName?;\n    string MiddleName?;\n    string LastName?;\n    string BirthDate?;\n    EmployeeAddress EmployeeResidentialAddress?;\n};\n\npublic type PersonManagementExemption record {\n    string AppliedByName?;\n    string Country?;\n    string PersonType?;\n    string Name?;\n    string Number?;\n    string EmploymentStatus?;\n    string AppliedOn?;\n};\n\npublic type Payload_Position record {\n    Position Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Location record {\n    boolean PhysicalLocation?;\n    string BusinessPhone?;\n    string ContactBusinessPhone?;\n    string ContactCellPhone?;\n    string PostalCode?;\n    string CountryCode?;\n    string OpeningDate?;\n    string ClosingDate?;\n    HRConfigurationEntity ComparableLocation?;\n    Department Department?;\n    Zone Zone?;\n    int:Signed32 StartDayOfWeek?;\n    City GeoCity?;\n    TimeZone Timezone?;\n    string County?;\n    boolean IsOrgManaged?;\n    boolean IsMobileOrg?;\n    string PublicName?;\n    string ClockTransferCode?;\n    string ContactEmail?;\n    string ContactName?;\n    string LedgerCode?;\n    string StateCode?;\n    string Address?;\n    string Address2?;\n    LegalEntity LegalEntity?;\n    OrgUnitLegalEntityCollection OrgUnitLegalEntities?;\n    OrgUnitParentCollection OrgUnitParents?;\n    ChildLocationCollection ChildOrgUnits?;\n    OrgUnitLocationTypeCollection OrgUnitLocationTypes?;\n    OrgLevel OrgLevel?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeCANTaxStatusCollection record {\n    EmployeeCANTaxStatus[] Items?;\n};\n\npublic type WorkLocationAddress record {\n    string AddressLine1?;\n    string AddressLine2?;\n    string City?;\n    string State?;\n    string Country?;\n    string PostalCode?;\n};\n\npublic type Payload_IEnumerable_EarningDefinition record {\n    EarningDefinition[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PaginatedPayload_IEnumerable_TrainingProgram record {\n    TrainingProgram[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type EmployeeIRLTaxRPN record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string EmploymentCessationDate?;\n    int:Signed32 TaxYear?;\n    string RpnNumber?;\n    string EmployeePpsn?;\n    string EmploymentID?;\n    string RpnIssueDate?;\n    string EmployerReference?;\n    string FirstName?;\n    string FamilyName?;\n    string PreviousEmployeePPSN?;\n    string IncomeTaxCalculationBasis?;\n    boolean ExclusionOrder?;\n    decimal YearlyTaxCredits?;\n    decimal PayForIncomeTaxToDate?;\n    decimal IncomeTaxDeductedToDate?;\n    string UscStatus?;\n    decimal PayForUSCToDate?;\n    decimal UscDeductedToDate?;\n    decimal LptToDeduct?;\n    boolean PRSIExempt?;\n    string PrsiClass?;\n    decimal TaxRatePercent1?;\n    decimal YearlyRateCutOff1?;\n    decimal TaxRatePercent2?;\n    decimal UscRatePercent1?;\n    decimal YearlyUSCRateCutOff1?;\n    decimal UscRatePercent2?;\n    decimal YearlyUSCRateCutOff2?;\n    decimal UscRatePercent3?;\n    decimal YearlyUSCRateCutOff3?;\n    decimal UscRatePercent4?;\n    string LegalEntityXrefCode?;\n    LegalEntity LegalEntity?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeBalanceTransaction record {\n    string TransactionDate?;\n    string ExpiryDate?;\n    decimal Delta?;\n    decimal GrantDelta?;\n    int:Signed32 TransactionSource?;\n    string TAFWXRefCode?;\n    string Comment?;\n    string ApprovalStatus?;\n};\n\npublic type Payload_IEnumerable_LaborValidationRule record {\n    LaborValidationRule[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type PayrollCountry record {\n    string CountryName?;\n    string CountryCode?;\n    boolean HCMPayrollCountry?;\n    boolean ConnectedPayCountry?;\n    boolean IPSEnabled?;\n    boolean PayGroup?;\n    string DefaultTimeZoneName?;\n    string DefaultTimeZoneXRefCode?;\n};\n\npublic type Payload_IEnumerable_EmployeeWorkAssignment record {\n    EmployeeWorkAssignment[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeHRPolicy record {\n    EmployeeHRPolicy[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmploymentIndicator record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeSchedulePostAPIResponse record {\n    string EmployeeScheduleXRefCode?;\n    string EmployeeXRefCode?;\n    string TimeStart?;\n    string TimeEnd?;\n};\n\npublic type BenefitsDFLinkExportCareProvider record {\n    string RecordType?;\n    string ProviderIDQualifier?;\n    string ProviderId?;\n    string RelationshipCode?;\n    string EntityIDCode?;\n};\n\npublic type Payload_IEnumerable_EmployeeTimeAwayFromWork record {\n    EmployeeTimeAwayFromWork[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_PayrollPayEntryImportHistory record {\n    PayrollPayEntryImportHistory Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type JobStepPolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PRTaxResidentCode record {\n    string XRefCode?;\n    string LastModifiedTimestamp?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type LaborValidationRule record {\n    int:Signed32 PolicyId?;\n    string PolicyXRefCode?;\n    string XRefCode?;\n    string Name?;\n    string Description?;\n    string EffectiveFrom?;\n    string EffectiveTo?;\n    boolean Active?;\n    string CodeName?;\n    int:Signed32 Sequence?;\n    string ValidationErrorMessage?;\n    int:Signed32 SeverityLevel?;\n    LaborValidationModel[] Models?;\n    LaborValidationQualifier[] Children?;\n    LaborValidationQualifier[] Qualifiers?;\n};\n\npublic type EmploymentAgreementType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeEarningParameterCollection record {\n    EmployeeEarningParameter[] Items?;\n};\n\npublic type UserPayAdjustCodeGroup record {\n    PayAdjCodeGroup PayAdjCodeGroup?;\n    string LastModifiedTimestamp?;\n};\n\npublic type ContactInformationType record {\n    ContactInformationTypeGroup ContactInformationTypeGroup?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LaborCostResult record {\n    string LocationXRefCode?;\n    string CalendarDate?;\n    string Currency?;\n    LaborCostTotalResult Totals?;\n    LaborCostTimeInterval[] Intervals?;\n};\n\npublic type DeductionLimit record {\n    LimitAccessType LimitAccessType?;\n    AccumulationType AccumulationType?;\n    LimitType LimitType?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_AnalyticsReportMetadata record {\n    AnalyticsReportMetadata Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type ApplicantResume record {\n    string Text?;\n    string HrXml?;\n    string Html?;\n    CandidateDetails Json?;\n    FileDetails File?;\n};\n\npublic type EmployeeEarningSummary record {\n    int:Signed32 Year?;\n    string NationalIdNumber?;\n    string FirstName?;\n    string LastName?;\n    decimal RateOfPay?;\n    EmployeeAddress EmployeeResidentialAddress?;\n    decimal GrossEarningYTD?;\n    decimal GrossNormalEarningYTD?;\n    decimal GrossOverTimeEarningYTD?;\n    decimal GrossBonusEarningYTD?;\n    decimal GrossCommissionEarningYTD?;\n    decimal GrossOtherEarningYTD?;\n    boolean EarningGroupingsSumUp?;\n    string EmploymentStatus?;\n    string EmploymentType?;\n    string JobAssignment?;\n    string HireDate?;\n    string TerminationDate?;\n    string PayFrequency?;\n    string PayType?;\n    string LastPayrollPayDate?;\n    string LegalEntityName?;\n    string FEIN?;\n    LegalEntityAddress LegalEntityAddress?;\n};\n\npublic type LaborMetricsType record {\n    string ClockTransferCode?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type BidderInfo record {\n    string EmployeeXRefCode?;\n    decimal BaseRate?;\n    decimal CurrentWeeklyHours?;\n    string SeniorityDate?;\n};\n\npublic type Payload_IEnumerable_EmployeeManager record {\n    EmployeeManager[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeHealthWellness record {\n    string TobaccoUser?;\n    string DateLastSmoked?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeTrainingProgram record {\n    EmployeeTrainingProgram[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_PayGroupCalendar record {\n    PayGroupCalendar Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type ParameterAccessType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type OrgUnitLocationType record {\n    OrgLocationType LocationType?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_List_Employee record {\n    Employee[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type LaborMetricTypeForSubmit record {\n    string ShortName?;\n    string LongName?;\n    string LaborMetricTypeXRefCode?;\n    string ClockTransferCode?;\n    boolean IsDeleted?;\n};\n\npublic type EarningCode record {\n    EarningType EarningType?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LegalEntityDEUShortTimeWork record {\n    int:Signed32 LegalEntityDEUShortTimeWorkID?;\n    string StoppageNumber?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type CandidateScreeningDetailedResult record {\n    string ReportIdentifier?;\n    string ScreeningType?;\n    string Status?;\n    string Result?;\n    string CompletionDate?;\n};\n\npublic type EmployeePayrollTax record {\n    string TaxAuthority?;\n    string TaxType?;\n    EmployeePayrollTaxName Name?;\n    boolean EmployeeTax?;\n    boolean EmployerTax?;\n    string LegalEntity?;\n    string ResidentCode?;\n    boolean ManuallyAddedTax?;\n    string[] Addresses?;\n    string TaxAuthorityInstance?;\n    string LegalEntityXrefCode?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeClockDeviceGroup record {\n    EmployeeClockDeviceGroup[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeePayrollTax record {\n    EmployeePayrollTax[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeConfidentialIdentification record {\n    EmployeeConfidentialIdentification[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type DeductionPayee record {\n    DeductionPayeeParameter[] PayeeParameters?;\n    string PayeeName?;\n    string PayeeXRefCode?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean Default?;\n};\n\npublic type Payload_EmploymentStatusReason record {\n    EmploymentStatusReason Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeCANFederalTaxCollection record {\n    EmployeeCANFederalTax[] Items?;\n};\n\npublic type EmployeePayrollTaxParameterElementName record {\n    string ShortName?;\n    string LongName?;\n    string XRefCode?;\n};\n\npublic type Payload_LaborMetricType record {\n    LaborMetricType Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type CandidateRTWDocumentGenericError record {\n    string Code?;\n    string Message?;\n};\n\npublic type EmployeeCompensation record {\n    string EmployeeNumber?;\n    string EffectiveEnd?;\n    string EffectiveStart?;\n    PayGrade PayGrade?;\n    PayType PayType?;\n    PayGroup PayGroup?;\n    PayClass PayClass?;\n    EmploymentStatusReason EmploymentStatusReason?;\n    decimal AlternateRate?;\n    decimal AverageDailyHours?;\n    decimal AverageOvertimeRate?;\n    decimal BaseRate?;\n    boolean BaseRateManuallySet?;\n    decimal BaseSalary?;\n    decimal DailyRate?;\n    decimal NormalWeeklyHours?;\n    decimal NormalSemiMonthlyHoursTop?;\n    decimal NormalSemiMonthlyHoursBottom?;\n    string LastPayEditDate?;\n    decimal VacationRate?;\n    decimal MinimumRate?;\n    decimal ControlRate?;\n    decimal MaximumRate?;\n    decimal RateMidPoint?;\n    decimal MinimumSalary?;\n    decimal ControlSalary?;\n    decimal MaximumSalary?;\n    decimal SalaryMidPoint?;\n    decimal CompRatio?;\n    decimal ChangePercent?;\n    decimal ChangeValue?;\n    decimal PreviousBaseSalary?;\n    decimal PreviousBaseRate?;\n    PayPolicy PayPolicy?;\n    JobStepPolicy RatePolicy?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_KpiData record {\n    KpiData[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmploymentAgreementSettlement record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeHRIncidentCollection record {\n    EmployeeHRIncident[] Items?;\n};\n\npublic type DocMgmtSecurityGroupUserMapCollection record {\n    EmployeeDocumentManagementSecurityGroup[] Items?;\n};\n\npublic type EmployeeDependentsBeneficiariesAddressCollection record {\n    EmployeeDependentsBeneficiariesAddress[] Items?;\n};\n\npublic type EmploymentStatusGroup record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type RelationshipType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\n# Report meta data that defines report parameters.\r\n# Parameter values are supplied by the end-user for execution.\r\n# All parameters must be supplied during execution.\r\n# Not all Parameters have default value.\npublic type AnalyticsReportFilterMetadata record {\n    # Name of the parameter.\n    string Name?;\n    # Description of the Parameter.\r\n    # The description will be localized, based on the Session Culture.\n    string Description?;\n    # Data type of the parameter.\n    string DataType?;\n    # Operator type of the parameter, such as \u003d, \u0026lt;, \u0026gt;\u003d, etc...\r\n    # Not all parameters have operator type.\r\n    # For example, SQL Parameters don\u0027t have operators.\n    string Operator?;\n    # True if a value needs to be supplied.\n    boolean IsRequired?;\n    # Value that will be used.\r\n    # Reference values should contain Ids and be comma separated. E.g \"1,2,3\"\n    string Value?;\n    # True if the operator is editable\n    boolean Editable?;\n    # Sequence of the filter\n    int:Signed32 Sequence?;\n    # List of available values a parameter can have.\n    AnalyticsListValue[] AvailableValues?;\n};\n\npublic type EVerify record {\n    string EVerifyCaseNumber?;\n    string EVerifyStatus?;\n    string EVerifyStatusDate?;\n    string EVerifyStatusDesc?;\n};\n\npublic type BenefitsDFLinkExportDependentElectionDetail record {\n    string RecordType?;\n    int:Signed32 EmployeeElectionId?;\n    int:Signed32 UniqueDependentId?;\n    string PlanTypeCode?;\n    string PlanSubTypeCode?;\n    string PlanXrefCode?;\n    string PlanCode?;\n    string PolicyNumber?;\n    string OptionCode?;\n    string CoverageStartDate?;\n    string CoverageEndDate?;\n    string EffectiveStartDate?;\n    string EffectiveEndDate?;\n    string PlanStartDate?;\n    BenefitsDFLinkExportCareProvider[] CareProviderDetails?;\n};\n\npublic type HRConfigurationEntity record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type LaborMetricType record {\n    string Name?;\n    string Description?;\n    string ClockTransferCode?;\n    string LaborMetricTypeXRefCode?;\n};\n\npublic type Payload_ArchiveDocument record {\n    ArchiveDocument Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeConfidentialIdentification record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    ConfidentialIdentificationType ConfidentialIdentificationType?;\n    string CountryCode?;\n    string ExpiryDate?;\n    string IDNumber?;\n    string PlaceOfIssue?;\n    string IssueDate?;\n    boolean UseForRTW?;\n    string RTWDocReview?;\n    string RTWDocReviewOn?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeShortTimeWork record {\n    int:Signed32 EmployeeShortTimeWorkId?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean IncreasedRate?;\n    boolean Consent?;\n    DEUSTWParticipationReason DEUSTWParticipationReason?;\n    LegalEntityDEUShortTimeWork LegalEntityDEUShortTimeWork?;\n    string LastModifiedTimestamp?;\n};\n\npublic type DisabilityWorkingTime record {\n    int:Signed32 DisabilityWorkingTimeId?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type FLSAStatus record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeEmploymentType record {\n    EmployeeEmploymentType[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type ProjectAssignmentType record {\n    boolean IsAssignedAll?;\n    string[] XrefCodes?;\n};\n\npublic type SuperannuationContributionType record {\n    string LastModifiedTimestamp?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n};\n\npublic type Payload_CarrierFeeds record {\n    CarrierFeeds Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Payload_IEnumerable_EmployeeIRLTaxEWSS record {\n    EmployeeIRLTaxEWSS[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type EmployeeIRLTaxEWSS record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    boolean IsEWSSEligible?;\n    string LegalEntityXrefCode?;\n    LegalEntity LegalEntity?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PersonManagementHistory record {\n    string PurgeDate?;\n    Validation ValidationMessage?;\n    string[] Policy?;\n    string Name?;\n    string RemovalAction?;\n    string ApprovedBy?;\n    string PersonType?;\n    string TerminationDate?;\n};\n\npublic type Payee record {\n    string Name?;\n    string Description?;\n    string XRefCode?;\n    string PayeeCategoryName?;\n    string PayeeCategoryXRefCode?;\n    string OperatingCountryCode?;\n    string OperatingCountryName?;\n    boolean Active?;\n    boolean EarningPayee?;\n    boolean DeductionPayee?;\n    boolean SystemPayee?;\n    string ElectronicServiceAddress?;\n    string BusinessNumber?;\n    string UniqueSuperIdentifier?;\n    PayeeAddress Address?;\n    PayeePaymentMethod PaymentMethod?;\n    PayeeHealthCareProvider HealthCareProvider?;\n    PayeeParameter[] PayeeParameters?;\n    PayeeStateCoverage[] StateCoverage?;\n};\n\npublic type OperatingHoursExceptionDay record {\n    string ExceptionName?;\n    string ExceptionDescription?;\n    string ExceptionStartDateTime?;\n    string ExceptionEndDateTime?;\n    string IsClosed?;\n    OperatingHoursRecurExceptionDetails OperatingHoursRecurExceptionDetails?;\n};\n\npublic type PFRatingScale record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type PositionAssignment record {\n    Location Location?;\n    decimal BudgetedHeadCount?;\n    string EffectiveEnd?;\n    string EffectiveStart?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type OperatingHoursDayPattern record {\n    string SundayStartTime?;\n    string SundayEndTime?;\n    string MondayStartTime?;\n    string MondayEndTime?;\n    string TuesdayStartTime?;\n    string TuesdayEndTime?;\n    string WednesdayStartTime?;\n    string WednesdayEndTime?;\n    string ThursdayStartTime?;\n    string ThursdayEndTime?;\n    string FridayStartTime?;\n    string FridayEndTime?;\n    string SaturdayStartTime?;\n    string SaturdayEndTime?;\n};\n\npublic type LegalEntityMasterBankAccountSetting record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeEEO record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeSkillCollection record {\n    EmployeeSkill[] Items?;\n};\n\npublic type Segment record {\n    string TimeStart?;\n    string TimeEnd?;\n    decimal NetHours?;\n    string DepartmentXRefCode?;\n    string JobXRefCode?;\n    string PositionXRefCode?;\n    string OrgUnitXRefCode?;\n    string OrgLocationTypeXRefCode?;\n    string PayAdjCodeXRefCode?;\n    string DocketXRefCode?;\n    string ProjectXRefCode?;\n    string Comment?;\n    EmployeeScheduleSegmentLaborMetric[] LaborMetrics?;\n};\n\npublic type Skills record {\n    string SkillXRefCode?;\n    string SkillLevelXRefCode?;\n    boolean IsMandatory?;\n};\n\npublic type EmployeeEmploymentType record {\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    EmploymentTypeConfig EmploymentType?;\n    string TaxPayerId?;\n    string DBAName?;\n    boolean GamingProfitsDistributions?;\n    boolean IR35?;\n    PensionTypeConfiguration PensionType?;\n    string ContractorTaxFormType?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Payload_IEnumerable_EmployeeUnionMembership record {\n    EmployeeUnionMembership[] Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type QuestionsInResponse record {\n    QuestionModel[] Questions?;\n    string Url?;\n    int RetrievedOnMillis?;\n    QuestionAnswers[] Answers?;\n};\n\npublic type DisabilityEvidenceType record {\n    int:Signed32 DisabilityEvidenceTypeId?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type ConfidentialIdentificationType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Patents record {\n    int:Signed32 _Total?;\n    PatentDetails[] Values?;\n};\n\npublic type Payload_Boolean record {\n    boolean Data?;\n    ProcessResult[] ProcessResults?;\n};\n\npublic type Zone record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type WorkPatternShiftType record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmergencyContactPersonAddressCollection record {\n    EmergencyContactPersonAddress[] Items?;\n};\n\npublic type EmployeeOccupationalPension record {\n    string PensionStartDate?;\n    string PensionProviderXrefCode?;\n    string PaymentCompletedBy?;\n    string MembershipNumber?;\n    string LastModifiedTimestamp?;\n};\n\npublic type EmployeeVolunteerListCollection record {\n    EmployeeVolunteerList[] Items?;\n};\n\npublic type OrgUnitLegalEntity record {\n    HRConfigurationEntity LegalEntity?;\n    string EffectiveStart?;\n    string EffectiveEnd?;\n    LegalEntityWorkSiteState LegalEntityWorkSiteState?;\n    LegalEntityMasterBankAccountSetting OverrideCustomerFundingIdentifier?;\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n\npublic type Response record {\n    string Identifier?;\n};\n\npublic type ArchiveDocument record {\n    string DocumentType?;\n    string DocumentGroup?;\n    int:Signed32 UserId?;\n    string SourceReportUniqueId?;\n    string PublishDateTime?;\n    string Title?;\n    int:Signed32 PageCount?;\n    int:Signed32 CultureId?;\n    string Contents?;\n    string Link?;\n    string FileName?;\n    int SizeBytes?;\n    string ReportAlternateTitle?;\n    string EmployeeXRefCode?;\n    boolean IsAvailableOnCloud?;\n};\n\npublic type PredefinedValue record {\n    string XRefCode?;\n    string FriendlyName?;\n};\n\npublic type PaginatedPayload_IEnumerable_DataEntry record {\n    DataEntry[] Data?;\n    ProcessResult[] ProcessResults?;\n    Paging Paging?;\n};\n\npublic type QuestionModel record {\n    string id?;\n    string \u0027type?;\n    string question?;\n    string text?;\n    QuestionOptionModel[] options?;\n    boolean required?;\n    string format?;\n    int:Signed32 \u0027limit?;\n    string min?;\n    string max?;\n    QuestionConditionModel condition?;\n    QuestionHierarchicalOptionModel[] hierarchicalOptions?;\n    boolean HTML?;\n    string fontSize?;\n};\n\npublic type KpiTargetPatternDetail record {\n    int:Signed32 PatternIndex?;\n    decimal Value?;\n};\n\npublic type EmployeeDeductionParameter record {\n    DeductionParameter DeductionParameter?;\n    decimal Value?;\n    decimal PayGroupValue?;\n    string LastModifiedTimestamp?;\n};\n\npublic type LMSEmployeeCertificationCollection record {\n    LMSEmployeeCertification[] Items?;\n};\n\npublic type WorkContractPremiumPolicy record {\n    string XRefCode?;\n    string ShortName?;\n    string LongName?;\n    string LastModifiedTimestamp?;\n};\n"},{"name":"client.bal","coveredLines":[0,6,13,14,16,20,23,26,29,32,36,37,38,39,3246,3247,3248,3249,3250,3251,3252],"missedLines":[17,18,21,24,27,30,33,47,48,49,50,51,52,53,54,55,62,63,64,65,72,73,74,75,81,82,83,84,90,91,92,93,94,95,96,104,105,106,107,108,109,110,111,112,120,121,122,123,124,125,126,127,128,135,136,137,138,145,146,147,148,157,158,159,160,161,162,163,172,173,174,175,176,177,178,179,180,189,190,191,192,193,194,195,196,197,207,208,209,210,211,212,221,222,223,224,225,226,233,234,235,236,237,238,239,240,241,257,258,259,260,261,262,263,270,271,272,273,281,282,283,284,285,286,287,288,289,297,298,299,300,301,302,303,304,305,312,313,314,315,316,317,318,319,320,327,328,329,330,331,332,333,334,335,342,343,344,345,346,347,348,349,350,358,359,360,361,362,363,364,365,366,374,375,376,377,378,379,380,381,382,394,395,396,397,398,399,400,409,410,411,412,413,414,415,427,428,429,430,431,432,433,442,443,444,445,446,447,448,456,457,458,459,460,461,462,463,464,472,473,474,475,476,477,483,484,485,486,500,501,502,503,504,505,506,513,514,515,516,517,518,519,527,528,529,530,531,532,533,534,535,543,544,545,546,547,548,549,550,551,557,558,559,560,569,570,571,572,573,574,575,583,584,585,586,587,588,589,590,591,599,600,601,602,603,604,605,606,607,613,614,615,616,622,623,624,625,634,635,636,637,638,639,640,648,649,650,651,652,653,654,655,656,665,666,667,668,669,670,671,672,673,691,692,693,694,695,696,697,707,708,709,710,711,712,713,721,722,723,724,725,726,727,737,738,739,740,741,742,743,752,753,754,755,756,757,758,768,769,770,771,772,773,774,779,780,781,782,787,788,789,790,791,792,793,794,795,800,801,802,803,804,805,810,811,812,813,814,815,816,817,818,825,826,827,828,837,838,839,840,841,842,843,844,845,854,855,856,857,858,859,860,861,862,873,874,875,876,877,878,879,886,887,888,889,897,898,899,900,901,902,903,904,905,912,913,914,915,916,917,918,927,928,929,930,931,932,933,948,949,950,951,952,953,954,962,963,964,965,966,967,976,977,978,979,980,981,982,991,992,993,994,995,996,997,998,999,1008,1009,1010,1011,1012,1013,1014,1015,1016,1023,1024,1025,1026,1035,1036,1037,1038,1039,1040,1041,1042,1043,1052,1053,1054,1055,1056,1057,1058,1059,1060,1069,1070,1071,1072,1073,1074,1075,1083,1084,1085,1086,1087,1088,1089,1090,1091,1099,1100,1101,1102,1103,1104,1105,1106,1107,1116,1117,1118,1119,1120,1121,1122,1131,1132,1133,1134,1135,1136,1137,1138,1139,1148,1149,1150,1151,1152,1153,1154,1155,1156,1165,1166,1167,1168,1169,1170,1171,1180,1181,1182,1183,1184,1185,1186,1195,1196,1197,1198,1199,1200,1201,1209,1210,1211,1212,1213,1214,1215,1216,1217,1225,1226,1227,1228,1229,1230,1231,1232,1233,1242,1243,1244,1245,1246,1247,1248,1257,1258,1259,1260,1261,1262,1263,1264,1265,1274,1275,1276,1277,1278,1279,1280,1281,1282,1291,1292,1293,1294,1295,1296,1297,1306,1307,1308,1309,1310,1311,1312,1319,1320,1321,1322,1323,1324,1325,1326,1327,1334,1335,1336,1337,1338,1339,1340,1341,1342,1351,1352,1353,1354,1355,1356,1357,1366,1367,1368,1369,1370,1371,1372,1373,1374,1383,1384,1385,1386,1387,1388,1389,1390,1391,1400,1401,1402,1403,1404,1405,1406,1415,1416,1417,1418,1419,1420,1421,1422,1423,1432,1433,1434,1435,1436,1437,1438,1439,1440,1449,1450,1451,1452,1453,1454,1455,1464,1465,1466,1467,1468,1469,1470,1471,1472,1481,1482,1483,1484,1485,1486,1487,1488,1489,1498,1499,1500,1501,1502,1503,1504,1513,1514,1515,1516,1517,1518,1519,1520,1521,1530,1531,1532,1533,1534,1535,1536,1537,1538,1547,1548,1549,1550,1551,1552,1553,1562,1563,1564,1565,1566,1567,1568,1569,1570,1579,1580,1581,1582,1583,1584,1585,1586,1587,1596,1597,1598,1599,1600,1601,1602,1611,1612,1613,1614,1615,1616,1617,1626,1627,1628,1629,1630,1631,1632,1633,1634,1643,1644,1645,1646,1647,1648,1649,1650,1651,1658,1659,1660,1661,1670,1671,1672,1673,1674,1675,1676,1677,1678,1687,1688,1689,1690,1691,1692,1693,1694,1695,1704,1705,1706,1707,1708,1709,1710,1718,1719,1720,1721,1722,1723,1724,1725,1726,1734,1735,1736,1737,1738,1739,1740,1741,1742,1751,1752,1753,1754,1755,1756,1757,1766,1767,1768,1769,1770,1771,1772,1780,1781,1782,1783,1784,1785,1786,1787,1788,1796,1797,1798,1799,1800,1801,1802,1803,1804,1813,1814,1815,1816,1817,1818,1819,1827,1828,1829,1830,1831,1832,1833,1834,1835,1843,1844,1845,1846,1847,1848,1849,1850,1851,1860,1861,1862,1863,1864,1865,1866,1875,1876,1877,1878,1879,1880,1881,1889,1890,1891,1892,1893,1894,1895,1896,1897,1905,1906,1907,1908,1909,1910,1911,1912,1913,1922,1923,1924,1925,1926,1927,1928,1937,1938,1939,1940,1941,1942,1943,1952,1953,1954,1955,1956,1957,1958,1959,1960,1969,1970,1971,1972,1973,1974,1975,1976,1977,1986,1987,1988,1989,1990,1991,1992,2001,2002,2003,2004,2005,2006,2007,2008,2009,2018,2019,2020,2021,2022,2023,2024,2025,2026,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2055,2056,2057,2058,2059,2060,2061,2070,2071,2072,2073,2074,2075,2076,2077,2078,2087,2088,2089,2090,2091,2092,2093,2094,2095,2104,2105,2106,2107,2108,2109,2110,2119,2120,2121,2122,2123,2124,2125,2126,2127,2135,2136,2137,2138,2139,2140,2141,2142,2143,2150,2151,2152,2153,2160,2161,2162,2163,2171,2172,2173,2174,2175,2176,2177,2178,2179,2188,2189,2190,2191,2192,2193,2194,2203,2204,2205,2206,2207,2208,2209,2210,2211,2220,2221,2222,2223,2224,2225,2226,2227,2228,2237,2238,2239,2240,2241,2242,2243,2251,2252,2253,2254,2255,2256,2257,2258,2259,2267,2268,2269,2270,2271,2272,2273,2274,2275,2284,2285,2286,2287,2288,2289,2290,2299,2300,2301,2302,2303,2304,2305,2306,2307,2316,2317,2318,2319,2320,2321,2322,2323,2324,2333,2334,2335,2336,2337,2338,2339,2348,2349,2350,2351,2352,2353,2354,2355,2356,2365,2366,2367,2368,2369,2370,2371,2372,2373,2380,2381,2382,2383,2391,2392,2393,2394,2395,2396,2397,2398,2399,2406,2407,2408,2409,2418,2419,2420,2421,2422,2423,2424,2425,2426,2433,2434,2435,2436,2445,2446,2447,2448,2449,2450,2451,2452,2453,2462,2463,2464,2465,2466,2467,2468,2469,2470,2477,2478,2479,2480,2488,2489,2490,2491,2492,2493,2494,2495,2496,2504,2505,2506,2507,2508,2509,2510,2511,2512,2519,2520,2521,2522,2531,2532,2533,2534,2535,2536,2537,2538,2539,2548,2549,2550,2551,2552,2553,2554,2555,2556,2563,2564,2565,2566,2575,2576,2577,2578,2579,2580,2581,2582,2583,2591,2592,2593,2594,2595,2596,2597,2598,2599,2608,2609,2610,2611,2612,2613,2614,2623,2624,2625,2626,2627,2628,2629,2630,2631,2640,2641,2642,2643,2644,2645,2646,2647,2648,2657,2658,2659,2660,2661,2662,2663,2672,2673,2674,2675,2676,2677,2678,2687,2688,2689,2690,2691,2692,2693,2694,2695,2704,2705,2706,2707,2708,2709,2710,2711,2712,2719,2720,2721,2722,2729,2730,2731,2732,2741,2742,2743,2744,2745,2746,2747,2748,2749,2758,2759,2760,2761,2762,2763,2764,2765,2766,2787,2788,2789,2790,2791,2792,2793,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810,2818,2819,2820,2821,2822,2823,2824,2825,2826,2827,2836,2837,2838,2839,2840,2841,2842,2849,2850,2851,2852,2862,2863,2864,2865,2866,2867,2868,2877,2878,2879,2880,2881,2882,2883,2884,2885,2894,2895,2896,2897,2898,2899,2900,2901,2902,2911,2912,2913,2914,2915,2916,2917,2918,2919,2928,2929,2930,2931,2932,2933,2934,2935,2936,2947,2948,2949,2950,2951,2952,2953,2968,2969,2970,2971,2972,2973,2974,2981,2982,2983,2984,2989,2990,2991,2992,2993,2994,2995,2996,2997,3002,3003,3004,3005,3006,3007,3008,3009,3010,3019,3020,3021,3022,3023,3024,3025,3034,3035,3036,3037,3038,3039,3040,3041,3042,3051,3052,3053,3054,3055,3056,3057,3058,3059,3079,3080,3081,3082,3083,3084,3085,3090,3091,3092,3093,3094,3095,3107,3108,3109,3110,3111,3112,3113,3120,3121,3122,3123,3124,3125,3126,3127,3128,3137,3138,3139,3140,3141,3142,3143,3152,3153,3154,3155,3156,3157,3158,3159,3160,3169,3170,3171,3172,3173,3174,3175,3176,3177,3211,3212,3213,3214,3215,3216,3217,3225,3226,3227,3228,3229,3230,3231,3232,3233,3263,3264,3265,3266,3267,3268,3269,3270,3271,3272,3282,3283,3284,3285,3286,3287,3288,3301,3302,3303,3304,3305,3306,3307,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3346,3347,3348,3349,3350,3351,3352,3361,3362,3363,3364,3365,3366,3367,3376,3377,3378,3379,3380,3381,3382,3383,3384,3393,3394,3395,3396,3397,3398,3399,3400,3401,3408,3409,3410,3411,3420,3421,3422,3423,3424,3425,3426,3427,3428,3435,3436,3437,3438,3447,3448,3449,3450,3451,3452,3453,3454,3455,3463,3464,3465,3466,3467,3468,3469,3470,3471,3478,3479,3480,3481,3488,3489,3490,3491,3492,3493,3494,3495,3496,3502,3503,3504,3505,3506,3507,3508,3509,3510,3516,3517,3518,3519,3520,3521,3522,3531,3532,3533,3534,3535,3536,3537,3538,3539,3548,3549,3550,3551,3552,3553,3554,3555,3556,3562,3563,3564,3565,3566,3567,3568,3577,3578,3579,3580,3581,3582,3583,3584,3585,3594,3595,3596,3597,3598,3599,3600,3601,3602,3609,3610,3611,3612,3621,3622,3623,3624,3625,3626,3627,3628,3629,3638,3639,3640,3641,3642,3643,3644,3645,3646,3655,3656,3657,3658,3659,3660,3661,3670,3671,3672,3673,3674,3675,3676,3677,3678,3686,3687,3688,3689,3690,3691,3692,3693,3694,3703,3704,3705,3706,3707,3708,3709,3718,3719,3720,3721,3722,3723,3724,3725,3726,3735,3736,3737,3738,3739,3740,3741,3742,3743,3752,3753,3754,3755,3756,3757,3758,3767,3768,3769,3770,3771,3772,3773,3774,3775,3784,3785,3786,3787,3788,3789,3790,3791,3792,3801,3802,3803,3804,3805,3806,3807,3816,3817,3818,3819,3820,3821,3822,3823,3824,3833,3834,3835,3836,3837,3838,3839,3840,3841,3849,3850,3851,3852,3860,3861,3862,3863,3872,3873,3874,3875,3876,3877,3878,3887,3888,3889,3890,3891,3892,3893,3894,3895,3904,3905,3906,3907,3908,3909,3910,3911,3912,3921,3922,3923,3924,3925,3926,3927,3936,3937,3938,3939,3940,3941,3942,3943,3944,3953,3954,3955,3956,3957,3958,3959,3960,3961,3970,3971,3972,3973,3974,3975,3976,3985,3986,3987,3988,3989,3990,3991,3992,3993,4002,4003,4004,4005,4006,4007,4008,4009,4010,4021,4022,4023,4024,4025,4026,4027,4028,4029,4030,4039,4040,4041,4042,4043,4044,4045,4053,4054,4055,4056,4057,4058,4059,4060,4061,4070,4071,4072,4073,4074,4075,4076,4077,4078,4089,4090,4091,4092,4093,4094,4095,4096,4097,4098,4108,4109,4110,4111,4112,4113,4114,4122,4123,4124,4125,4126,4127,4128,4129,4130,4138,4139,4140,4141,4142,4143,4144,4145,4146,4152,4153,4154,4155,4161,4162,4163,4164,4170,4171,4172,4173,4179,4180,4181,4182,4187,4188,4189,4190,4191,4192,4193,4194,4200,4201,4202,4203,4204,4205,4211,4212,4213,4214,4215,4216,4217,4218,4219,4224,4225,4226,4227,4228,4229,4230,4237,4238,4239,4240,4241,4242,4243,4251,4252,4253,4254,4255,4256,4257,4258,4259,4273,4274,4275,4276,4277,4278,4279,4285,4286,4287,4288,4289,4290,4291,4299,4300,4301,4302,4303,4304,4305,4306,4307,4314,4315,4316,4317,4326,4327,4328,4329,4330,4331,4332,4333,4334,4348,4349,4350,4351,4352,4353,4354,4364,4365,4366,4367,4368,4369,4370,4371,4372,4373,4383,4384,4385,4386,4387,4388,4389,4390,4391,4392,4402,4403,4404,4405,4406,4407,4408,4418,4419,4420,4421,4422,4423,4424,4425,4426,4436,4437,4438,4439,4440,4441,4442,4443,4444,4449,4450,4451,4452,4453,4454,4467,4468,4469,4470,4471,4472,4473,4479,4480,4481,4482,4483,4484,4485,4486,4487,4501,4502,4503,4504,4505,4506,4507,4512,4513,4514,4515,4516,4517,4518,4519,4520,4521,4527,4528,4529,4530,4538,4539,4540,4541,4542,4543,4544,4545,4546,4554,4555,4556,4557,4558,4559,4560,4561,4562,4568,4569,4570,4571,4579,4580,4581,4582,4583,4584,4585,4586,4587,4596,4597,4598,4599,4600,4601,4602,4603,4604,4608,4609,4610,4611,4612,4613,4614,4615,4616,4617,4623,4624,4625,4626,4631,4632,4633,4634,4640,4641,4642,4643,4644,4645,4646,4647,4648,4653,4654,4655,4656,4657,4658,4659,4665,4666,4667,4668,4669,4670,4678,4679,4680,4681,4682,4683,4684,4685,4686,4691,4692,4693,4694,4695,4696,4705,4706,4707,4708,4709,4710,4711,4712,4713,4719,4720,4721,4722,4723,4724,4725,4733,4734,4735,4736,4737,4738,4739,4740,4741,4750,4751,4752,4753,4754,4755,4756,4757,4758,4767,4768,4769,4770,4771,4772,4773,4782,4783,4784,4785,4786,4787,4788,4789,4790,4799,4800,4801,4802,4803,4804,4805,4806,4807,4815,4816,4817,4818,4819,4820,4825,4826,4827,4828,4829,4830,4831,4832,4833,4838,4839,4840,4841,4842,4843,4844,4845,4846,4852,4853,4854,4855,4863,4864,4865,4866,4867,4868,4869,4870,4871,4872,4881,4882,4883,4884,4885,4886,4887,4897,4898,4899,4900,4901,4902,4903,4904,4905,4906,4912,4913,4914,4915,4916,4917,4918,4925,4926,4927,4928,4941,4942,4943,4944,4945,4946,4947,4954,4955,4956,4957,4958,4959,4960,4961,4962,4969,4970,4971,4972,4973,4974,4975,4976,4977,4988,4989,4990,4991,4992,4993,4994,4999,5000,5001,5002,5003,5004,5005,5013,5014,5015,5016,5017,5018,5019,5020,5021,5022,5030,5031,5032,5033,5034,5035,5036,5037,5038,5039,5046,5047,5048,5049,5050,5051,5052,5053,5054,5061,5062,5063,5064,5065,5066,5067,5068,5069,5070,5077,5078,5079,5080,5081,5082,5083,5084,5085,5086,5102,5103,5104,5105,5106,5107,5108,5109,5110,5111,5127,5128,5129,5130,5131,5132,5133,5140,5141,5142,5143,5144,5145,5146,5147,5148,5149,5156,5157,5158,5159,5160,5161,5162,5163,5164,5170,5171,5172,5173,5174,5175,5176,5186,5187,5188,5189,5190,5191,5192,5198,5199,5200,5201,5207,5208,5209,5210,5219,5220,5221,5222,5223,5224,5225,5234,5235,5236,5237,5238,5239,5240,5241,5242,5251,5252,5253,5254,5255,5256,5257,5258,5259,5268,5269,5270,5271,5272,5273,5274,5283,5284,5285,5286,5287,5288,5289,5290,5291,5300,5301,5302,5303,5304,5305,5306,5307,5308,5319,5320,5321,5322,5323,5324,5325,5330,5331,5332,5333,5334,5335,5336,5337,5338,5344,5345,5346,5347,5348,5349,5361,5362,5363,5364,5365,5366,5367,5368,5369,5375,5376,5377,5378,5379,5380,5381,5389,5390,5391,5392,5393,5394,5395,5396,5397,5405,5406,5407,5408,5409,5410,5411,5420,5421,5422,5423,5424,5425,5426,5427,5428,5437,5438,5439,5440,5441,5442,5443,5477,5478,5479,5480,5481,5482,5483,5490,5491,5492,5493,5494,5495,5496,5497,5498,5507,5508,5509,5510,5511,5512,5513,5514,5515,5521,5522,5523,5524,5530,5531,5532,5533,5540,5541,5542,5543,5551,5552,5553,5554,5555,5556,5557,5567,5568,5569,5570,5571,5572,5581,5582,5583,5584,5585,5586,5587,5588,5589,5598,5599,5600,5601,5602,5603,5604,5612,5613,5614,5615,5616,5617,5618,5619,5620,5621,5628,5629,5630,5631,5632,5633,5634,5641,5642,5643,5644,5645,5646,5647,5648,5649,5657,5658,5659,5660,5661,5662,5663,5664,5665,5675,5676,5677,5678,5679,5680,5688,5689,5690,5691,5692,5693,5694,5695,5696,5705,5706,5707,5708,5709,5710,5711,5712,5713,5720,5721,5722,5723,5724,5725,5726,5734,5735,5736,5737,5738,5739,5740,5741,5742,5751,5752,5753,5754,5755,5756,5757,5758,5759,5764,5765,5766,5767,5768,5775,5776,5777,5778,5787,5788,5789,5790,5791,5792,5793,5794,5795,5804,5805,5806,5807,5808,5809,5810,5811,5812,5821,5822,5823,5824,5825,5826,5827,5836,5837,5838,5839,5840,5841,5842,5843,5844,5853,5854,5855,5856,5857,5858,5859,5860,5861],"coveragePercentage":0.71,"sourceCode":"// AUTO-GENERATED FILE. DO NOT MODIFY.\n// This file is auto-generated by the Ballerina OpenAPI tool.\n\nimport ballerina/http;\n\npublic isolated client class Client {\n    final http:Client clientEp;\n    # Gets invoked to initialize the `connector`.\n    #\n    # + config - The configurations to be used when initializing the `connector` \n    # + serviceUrl - URL of the target service \n    # + return - An error if connector initialization failed \n    public isolated function init(ConnectionConfig config, string serviceUrl \u003d \"https://ustest241-services.dayforcehcm.com/Api\") returns error? {\n        http:ClientConfiguration httpClientConfig \u003d {auth: config.auth, httpVersion: config.httpVersion, timeout: config.timeout, forwarded: config.forwarded, poolConfig: config.poolConfig, compression: config.compression, circuitBreaker: config.circuitBreaker, retryConfig: config.retryConfig, validation: config.validation};\n        do {\n            if config.http1Settings is ClientHttp1Settings {\n                ClientHttp1Settings settings \u003d check config.http1Settings.ensureType(ClientHttp1Settings);\n                httpClientConfig.http1Settings \u003d {...settings};\n            }\n            if config.http2Settings is http:ClientHttp2Settings {\n                httpClientConfig.http2Settings \u003d check config.http2Settings.ensureType(http:ClientHttp2Settings);\n            }\n            if config.cache is http:CacheConfig {\n                httpClientConfig.cache \u003d check config.cache.ensureType(http:CacheConfig);\n            }\n            if config.responseLimits is http:ResponseLimitConfigs {\n                httpClientConfig.responseLimits \u003d check config.responseLimits.ensureType(http:ResponseLimitConfigs);\n            }\n            if config.secureSocket is http:ClientSecureSocket {\n                httpClientConfig.secureSocket \u003d check config.secureSocket.ensureType(http:ClientSecureSocket);\n            }\n            if config.proxy is http:ProxyConfig {\n                httpClientConfig.proxy \u003d check config.proxy.ensureType(http:ProxyConfig);\n            }\n        }\n        http:Client httpEp \u003d check new (serviceUrl, httpClientConfig);\n        self.clientEp \u003d httpEp;\n        return;\n    }\n    # Add new HR Bulk Export details into Job Queue tables.\n    #\n    # + isValidateOnly - This parameter used to run a test case without fail\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A HR Bulk Export is created with an empty response body. \n    resource isolated function post [string clientNamespace]/v1/GetEmployeeBulkAPI(true isValidateOnly, EmployeeExportParams payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/v1/GetEmployeeBulkAPI`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Get the status of Job Queue tables.\n    #\n    # + backgroundJobQueueItemId - To find a status of employee export background job\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Job Status and Access API URL \n    resource isolated function get [string clientNamespace]/v1/GetEmployeeBulkAPI/Status/[int:Signed32 backgroundJobQueueItemId]() returns Payload_Object|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/v1/GetEmployeeBulkAPI/Status/${getEncodedUri(backgroundJobQueueItemId)}`;\n        Payload_Object response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get bulk employee of data as a string in json format\n    #\n    # + jobId - To get background job processed data for employee export\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Returns a page of employee data. \n    resource isolated function get [string clientNamespace]/v1/GetEmployeeBulkAPI/Data/[string jobId]() returns PaginatedPayload_IEnumerable_Employee|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/v1/GetEmployeeBulkAPI/Data/${getEncodedUri(jobId)}`;\n        PaginatedPayload_IEnumerable_Employee response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get Reports\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of Reports \n    resource isolated function get [string clientNamespace]/V1/Analytics/Reports() returns Payload_IEnumerable_AnalyticsReportDefinitions|Payload_IEnumerable_Object|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Analytics/Reports`;\n        Payload_IEnumerable_AnalyticsReportDefinitions|Payload_IEnumerable_Object response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get Dataset\n    #\n    # + datasetId - Uniquely identifies a dataset.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Contents of a dataset \n    resource isolated function get [string clientNamespace]/V1/Analytics/Datasets/[string datasetId](string? page \u003d (), string? datasetPageSize \u003d ()) returns Payload_AnalyticsReportDataset|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Analytics/Datasets/${getEncodedUri(datasetId)}`;\n        map\u003canydata\u003e queryParam \u003d {\"page\": page, \"DatasetPageSize\": datasetPageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_AnalyticsReportDataset response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Refresh Dataset\n    #\n    # + datasetId - Uniquely identifies a dataset.\n    # + isValidateOnly - This parameter is applied here for testing purposes. Please remember to remove it when utilizing this endpoint to actually refresh the dataset\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Status of a dataset refresh and its metadata \n    resource isolated function post [string clientNamespace]/V1/Analytics/Datasets/[string datasetId](true isValidateOnly, AnalyticsReportMetadata payload) returns Payload_AnalyticsDatasetMetadataResponse|json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Analytics/Datasets/${getEncodedUri(datasetId)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_AnalyticsDatasetMetadataResponse|json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Create Dataset\n    #\n    # + reportId - Uniquely identifies a report.\n    # + isValidateOnly - This parameter is applied here for testing purposes. Please remember to remove it when utilizing this endpoint to actually post the report\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Metadata of a dataset \n    resource isolated function post [string clientNamespace]/V1/Analytics/Reports/[int:Signed32 reportId](true isValidateOnly, AnalyticsReportMetadata payload) returns Payload_Object|Payload_AnalyticsDatasetMetadata|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Analytics/Reports/${getEncodedUri(reportId)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_Object|Payload_AnalyticsDatasetMetadata response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Get Dataset Metadata\n    #\n    # + datasetId - Uniquely identifies a dataset.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Metadata of a dataset \n    resource isolated function get [string clientNamespace]/V1/Analytics/Datasets/[string datasetId]/Metadata() returns Payload_Object|Payload_AnalyticsDatasetMetadata|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Analytics/Datasets/${getEncodedUri(datasetId)}/Metadata`;\n        Payload_Object|Payload_AnalyticsDatasetMetadata response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get Report Metadata\n    #\n    # + reportId - Uniquely identifies a report.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Metadata of the report \n    resource isolated function get [string clientNamespace]/V1/Analytics/Reports/[int:Signed32 reportId]/Metadata() returns Payload_IEnumerable_AnalyticsReportMetadata|Payload_AnalyticsReportMetadata|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Analytics/Reports/${getEncodedUri(reportId)}/Metadata`;\n        Payload_IEnumerable_AnalyticsReportMetadata|Payload_AnalyticsReportMetadata response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET AppUserSSO Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The AppUserSSO with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/SSOAccounts(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeSSOAccount|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/SSOAccounts`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeSSOAccount response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a AppUserSSO\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/SSOAccounts(true isValidateOnly, EmployeeSSOAccount payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/SSOAccounts`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a AppUserSSO\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The AppUserSSO is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/SSOAccounts(true isValidateOnly, EmployeeSSOAccount payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/SSOAccounts`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Delete an SSOAccount entry that has matching {loginName}\n    #\n    # + employeeXRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be deleted.\n    # The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + loginName - The loginName of the SSOAccount to be deleted from this Employee\n    # + isValidateOnly - When a TRUE value is used in this parameter, this operation is validated without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An SSO Account is deleted for this Employee \n    resource isolated function delete [string clientNamespace]/V1/Employees/[string employeeXRefCode]/SSOAccounts/[string loginName](true isValidateOnly) returns Payload_SubordinateEntityReferences|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(employeeXRefCode)}/SSOAccounts/${getEncodedUri(loginName)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_SubordinateEntityReferences response \u003d check self.clientEp-\u003edelete(resourcePath);\n        return response;\n    }\n    # GET List of Employee Availability\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + filterAvailabilityStartDate - Inclusive period start date to determine which employee availability data to retrieve . Example: 2017-01-01T00:00:00\n    # + filterAvailabilityEndDate - Inclusive period end date to determine which employee availability data to retrieve . Example: 2017-01-01T00:00:00\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of employee availability meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Availability(string filterAvailabilityStartDate, string filterAvailabilityEndDate) returns Payload_IEnumerable_EmployeeAvailability|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Availability`;\n        map\u003canydata\u003e queryParam \u003d {\"filterAvailabilityStartDate\": filterAvailabilityStartDate, \"filterAvailabilityEndDate\": filterAvailabilityEndDate};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeAvailability response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Post Employee Availablity\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - OK response \n    resource isolated function post [string clientNamespace]/V1/[string employeeXRefCode]/EmployeeAvailability(true isValidateOnly, EmployeeAvailabilityPostAPIRequestDTO payload) returns Payload_IEnumerable_ProcessResult|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/${getEncodedUri(employeeXRefCode)}/EmployeeAvailability`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_ProcessResult response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET List of Background Job Logs\n    #\n    # + pageSize - Use to specify the number of records returned per page in the paginated response. This value will be constrained to be between 1 and 10,000 (default is 1,000).\n    # + codeName - Use to search for background job logs using a comma separated list of code names. If omitted, all job code names are included.\n    # + status - Use to search for background job logs by job status. If omitted, all job statuses are included. Accepted values: Queued, In Progress, Paused, Completed, Cancelled, Error.\n    # + hasItemLevelErrors - Use to search for background job logs with item-level errors. If omitted, both logs with and without item level errors are included. Accepted values: True, False\n    # + queueTimeUtcStart - The beginning date/time used when searching for logs that were queued in a specified time frame. When a value is provided for this parameter, a queueTimeUtcEnd value must also be provided.  Example: 2017-01-01T13:24:56\n    # + queueTimeUtcEnd - The ending date/time used when searching for logs that were queued in a specified time frame. When a value is provided for this parameter, a queueTimeUtcStart value must also be provided.  Example: 2017-01-01T13:24:56\n    # + wasScheduled - Use to search for background job logs that were scheduled or ran on-demand. If omitted, logs for both scheduled and on-demand background jobs are included.  Accepted values: True, False\n    # + submittedBy - Use to search for background job logs that were manually submitted by a specified user. If omitted, all job submitters including the System are included.\n    # + filterUpdateTimeUtcStart - The beginning date/time used when searching for background job logs with updates in a specified time frame. When a value is provided for this parameter, a filterUpdateTimeUtcEnd value must also be provided.  Example: 2017-01-01T13:24:56\n    # + filterUpdateTimeUtcEnd - The ending date/time used when searching for background job logs with updates in a specified time frame. When a value is provided for this parameter, a filterUpdateTimeUtcStart value must also be provided.  Example: 2017-01-01T13:24:56\n    # + includeSuppressedTaskTypes - Used to specify whether commonly suppressed background jobs should be included in the filtered results.  Accepted values: True, False.  Defaults to False.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of background job logs meeting the search criteria. Parameters, JobInformation, ErrorInformation, DebugInformation and FileList fields are not retrieved with this call. \n    resource isolated function get [string clientNamespace]/V1/BackgroundJobLogs(int:Signed32? pageSize \u003d (), string? codeName \u003d (), string? status \u003d (), boolean? hasItemLevelErrors \u003d (), string? queueTimeUtcStart \u003d (), string? queueTimeUtcEnd \u003d (), boolean? wasScheduled \u003d (), string? submittedBy \u003d (), string? filterUpdateTimeUtcStart \u003d (), string? filterUpdateTimeUtcEnd \u003d (), boolean? includeSuppressedTaskTypes \u003d ()) returns PaginatedPayload_IEnumerable_BackgroundJobLog|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BackgroundJobLogs`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize, \"codeName\": codeName, \"status\": status, \"hasItemLevelErrors\": hasItemLevelErrors, \"queueTimeUtcStart\": queueTimeUtcStart, \"queueTimeUtcEnd\": queueTimeUtcEnd, \"wasScheduled\": wasScheduled, \"submittedBy\": submittedBy, \"filterUpdateTimeUtcStart\": filterUpdateTimeUtcStart, \"filterUpdateTimeUtcEnd\": filterUpdateTimeUtcEnd, \"includeSuppressedTaskTypes\": includeSuppressedTaskTypes};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_BackgroundJobLog response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Details of a Background Job Log based on backgroundLogId\n    #\n    # + backgroundJobLogId - The identifier of the background job log to retrieve further information.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A background job log that meets the search criteria. \n    resource isolated function get [string clientNamespace]/V1/BackgroundJobLogs/[string backgroundJobLogId]() returns Payload_BackgroundJobLog|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BackgroundJobLogs/${getEncodedUri(backgroundJobLogId)}`;\n        Payload_BackgroundJobLog response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # PATCH (Update) a Background Screening Status for a specific candidate.\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The Json payload containing an event and the new status.\n    # + return - The Background Screening request is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/BackgroundScreening/Status(true isValidateOnly, BackgroundScreeningStatus payload) returns BackgroundScreeningStatus|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BackgroundScreening/Status`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        BackgroundScreeningStatus response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # PATCH (Update) a Background Screening Adjudication Status for a specific candidate.\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The Json payload containing an event and the new adjudication status.\n    # + return - The Background Screening request is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/BackgroundScreening/AdjudicationStatus(true isValidateOnly, BackgroundScreeningAdjudicationStatus payload) returns BackgroundScreeningAdjudicationStatus|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BackgroundScreening/AdjudicationStatus`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        BackgroundScreeningAdjudicationStatus response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # POST Background Screening Packages.\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Background Screening Packages are added, no response body. \n    resource isolated function post [string clientNamespace]/V1/BackgroundScreening/Package(true isValidateOnly, BackgroundScreeningPackage payload) returns BackgroundScreeningPackage[]|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BackgroundScreening/Package`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        BackgroundScreeningPackage[] response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # POST Background Screening Billing Codes.\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Background Screening Billing Codes are added, no response body. \n    resource isolated function post [string clientNamespace]/V1/BackgroundScreening/BillingCode(true isValidateOnly, BackgroundScreeningBillingCode payload) returns BackgroundScreeningBillingCode[]|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BackgroundScreening/BillingCode`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        BackgroundScreeningBillingCode[] response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # POST Background Screening Provider Statuses.\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Custom Provider Statuses are added, no response body. \n    resource isolated function post [string clientNamespace]/V1/BackgroundScreening/ProviderStatuses(true isValidateOnly, BackgroundScreeningProviderStatuses payload) returns BackgroundScreeningProviderStatuses|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BackgroundScreening/ProviderStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        BackgroundScreeningProviderStatuses response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH Background Screening Status, URL and Report containing PII\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The Json payload containing Status, Url and Report containing PII.\n    # + return - The Background Screening Status, Url and Report containing PII are added, no response body. \n    resource isolated function patch [string clientNamespace]/V1/BackgroundScreening(true isValidateOnly, BackgroundScreeningStatusUrlReport payload) returns BackgroundScreeningStatusUrlReport[]|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BackgroundScreening`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        BackgroundScreeningStatusUrlReport[] response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # PATCH Background Screening Report containing Personal Identifiable Informations\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The Json payload with a Report containing Personal Identifiable Informations.\n    # + return - The Background Screening Report containing Personal Identifiable Informations are added, no response body. \n    resource isolated function patch [string clientNamespace]/V1/BackgroundScreening/PersonalIdentifiableInformation(true isValidateOnly, BackgroundScreeningReport payload) returns BackgroundScreeningReport[]|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BackgroundScreening/PersonalIdentifiableInformation`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        BackgroundScreeningReport[] response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET Benefits ongoing carrier feed export in JSON format\n    #\n    # + carrierXRefCode - A reference code that maps to a given carrier.\n    # + planStartDate - The plan start date.\n    # + planEndDate - The plan end date.\n    # + payrollEarningAccumulationXRefCodes - A comma delimited list of reference codes, mapping to a list of individual payroll earning accumulations.\n    # + blackoutPeriodStartDate - If applicable, the blackout period start date.\n    # + lookBackDays - The number of days the export will look back from execution date to find employee elections.\n    # + lookForwardDays - The number of days the export will look forward from execution date to find employee elections.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The CarrierFeeds model in json format. \n    resource isolated function get [string clientNamespace]/V1/BenefitsCarrierFeedOngoingExports(string carrierXRefCode, string planStartDate, string planEndDate, string? payrollEarningAccumulationXRefCodes \u003d (), string? blackoutPeriodStartDate \u003d (), int:Signed32? lookBackDays \u003d (), int:Signed32? lookForwardDays \u003d ()) returns Payload_CarrierFeeds|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BenefitsCarrierFeedOngoingExports`;\n        map\u003canydata\u003e queryParam \u003d {\"carrierXRefCode\": carrierXRefCode, \"planStartDate\": planStartDate, \"planEndDate\": planEndDate, \"payrollEarningAccumulationXRefCodes\": payrollEarningAccumulationXRefCodes, \"blackoutPeriodStartDate\": blackoutPeriodStartDate, \"lookBackDays\": lookBackDays, \"lookForwardDays\": lookForwardDays};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_CarrierFeeds response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Benefits open enrollment carrier feed export in JSON format\n    #\n    # + carrierXRefCode - A reference code that maps to a given carrier.\n    # + planStartDate - The plan start date.\n    # + planEndDate - The plan end date.\n    # + payrollEarningAccumulationXRefCodes - A comma delimited list of reference codes, mapping to a list of individual payroll earning accumulations.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The CarrierFeeds model in json format. \n    resource isolated function get [string clientNamespace]/V1/BenefitsCarrierFeedOpenEnrollmentExports(string carrierXRefCode, string planStartDate, string? planEndDate \u003d (), string? payrollEarningAccumulationXRefCodes \u003d ()) returns Payload_CarrierFeeds|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BenefitsCarrierFeedOpenEnrollmentExports`;\n        map\u003canydata\u003e queryParam \u003d {\"carrierXRefCode\": carrierXRefCode, \"planStartDate\": planStartDate, \"planEndDate\": planEndDate, \"payrollEarningAccumulationXRefCodes\": payrollEarningAccumulationXRefCodes};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_CarrierFeeds response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Benefits multi carrier ongoing carrier feed export in JSON format\n    #\n    # + carrierXRefCodes - A comma delimited list of reference codes, mapping to a list of individual carriers.\n    # + planStartDate - The plan start date.\n    # + planEndDate - The plan end date.\n    # + payrollEarningAccumulationXRefCodes - A comma delimited list of reference codes, mapping to a list of individual payroll earning accumulations.\n    # + blackoutPeriodStartDate - If applicable, the blackout period start date.\n    # + lookBackDays - The number of days the export will look back from execution date to find employee elections.\n    # + lookForwardDays - The number of days the export will look forward from execution date to find employee elections.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The CarrierFeeds model in json format. \n    resource isolated function get [string clientNamespace]/V1/BenefitsCarrierFeedMultiCarrierOngoingExports(string carrierXRefCodes, string planStartDate, string planEndDate, string? payrollEarningAccumulationXRefCodes \u003d (), string? blackoutPeriodStartDate \u003d (), int:Signed32? lookBackDays \u003d (), int:Signed32? lookForwardDays \u003d ()) returns Payload_CarrierFeeds|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BenefitsCarrierFeedMultiCarrierOngoingExports`;\n        map\u003canydata\u003e queryParam \u003d {\"carrierXRefCodes\": carrierXRefCodes, \"planStartDate\": planStartDate, \"planEndDate\": planEndDate, \"payrollEarningAccumulationXRefCodes\": payrollEarningAccumulationXRefCodes, \"blackoutPeriodStartDate\": blackoutPeriodStartDate, \"lookBackDays\": lookBackDays, \"lookForwardDays\": lookForwardDays};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_CarrierFeeds response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Benefits multi carrier open enrollment carrier feed export in JSON format\n    #\n    # + carrierXRefCodes - A comma delimited list of reference codes, mapping to a list of individual carriers.\n    # + planStartDate - The plan start date.\n    # + planEndDate - The plan end date.\n    # + payrollEarningAccumulationXRefCodes - A comma delimited list of reference codes, mapping to a list of individual payroll earning accumulations.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The CarrierFeeds model in json format. \n    resource isolated function get [string clientNamespace]/V1/BenefitsCarrierFeedMultiCarrierOpenEnrollmentExports(string carrierXRefCodes, string planStartDate, string? planEndDate \u003d (), string? payrollEarningAccumulationXRefCodes \u003d ()) returns Payload_CarrierFeeds|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/BenefitsCarrierFeedMultiCarrierOpenEnrollmentExports`;\n        map\u003canydata\u003e queryParam \u003d {\"carrierXRefCodes\": carrierXRefCodes, \"planStartDate\": planStartDate, \"planEndDate\": planEndDate, \"payrollEarningAccumulationXRefCodes\": payrollEarningAccumulationXRefCodes};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_CarrierFeeds response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a Candidate Application and/or a Candidate Profile\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, this will validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The Json payload containing candidate and application details.\n    # + return - Candidate profile/application have been accepted. \n    resource isolated function post [string clientNamespace]/V1/CandidateSourcing(true isValidateOnly, JobPostingApplicantModel payload) returns Response|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/CandidateSourcing`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Response response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET Job Posting Questionnaires\n    #\n    # + jobPostingId - The job posting id\n    # + cultureId - The culture id to determine the language screening questions\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of questionnaires for a particular job posting. Each questionnaire section is separated by a page break object. \n    resource isolated function get [string clientNamespace]/V1/JobPostingQuestionnaires(int:Signed32 jobPostingId, int:Signed32 cultureId) returns Payload_IEnumerable_QuestionModel|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/JobPostingQuestionnaires`;\n        map\u003canydata\u003e queryParam \u003d {\"jobPostingId\": jobPostingId, \"cultureId\": cultureId};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_QuestionModel response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Candidate Application Statuses\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of candidate application statuses for all job applications sent by the provider calling this endpoint. Once the latest unsent application statuses are provided via this endpoint, no further data will be provided on subsequent calls unless further application status updates have been made. This endpoint will return application statuses in tranches of up to 1000 statuses per call and will continue to do so for subsequent calls until all unsent statuses have been provided. \n    resource isolated function get [string clientNamespace]/V1/CandidateApplicationStatuses() returns Payload_CandidateApplicationStatusUpdatesPaginationModel|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/CandidateApplicationStatuses`;\n        Payload_CandidateApplicationStatusUpdatesPaginationModel response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Job Postings\n    #\n    # + companyName - Company name. Example: XYZ Co.\n    # + parentCompanyName - Parent Company name. Example: Ceridian\n    # + internalJobBoardCode - XRefCode of Job Board. Example: CANDIDATEPORTAL\n    # + includeActivePostingOnly - If true, then exclude inactive postings from the result. If False, then the \u0027Last Update Time From\u0027 and \u0027Last Update Time To\u0027 parameters are required and the range specified between the \u0027Last Update Time From\u0027 and \u0027Last Update Time To\u0027 parameters must not be larger than 1 month. Example: True\n    # + lastUpdateTimeFrom - A starting timestamp of last updated job posting. Example: 2017-01-01T13:24:56\n    # + lastUpdateTimeTo - An ending timestamp of last updated job posting. Example: 2017-02-01T13:24:56\n    # + datePostedFrom - A starting timestamp of job posting date. Example: 2017-01-01T13:24:56\n    # + datePostedTo - An ending timestamp of job posting date. Example: 2017-02-01T13:24:56\n    # + htmlDescription - A flag to feed the jobs over with html formatting or plain text description\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of all active external job postings (i.e. public facing job postings) based on specified filter parameters. Each job posting included in the response also includes URLs for Candidate Sourcing and Apply endpoints. Users with access to the Candidate Sourcing and Apply feature should use this endpoint for obtaining job postings rather than GET JobFeeds. \n    resource isolated function get [string clientNamespace]/V1/JobPostings(string? companyName \u003d (), string? parentCompanyName \u003d (), string? internalJobBoardCode \u003d (), boolean? includeActivePostingOnly \u003d (), string? lastUpdateTimeFrom \u003d (), string? lastUpdateTimeTo \u003d (), string? datePostedFrom \u003d (), string? datePostedTo \u003d (), boolean? htmlDescription \u003d ()) returns Payload_IEnumerable_JobFeed|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/JobPostings`;\n        map\u003canydata\u003e queryParam \u003d {\"companyName\": companyName, \"parentCompanyName\": parentCompanyName, \"internalJobBoardCode\": internalJobBoardCode, \"includeActivePostingOnly\": includeActivePostingOnly, \"lastUpdateTimeFrom\": lastUpdateTimeFrom, \"lastUpdateTimeTo\": lastUpdateTimeTo, \"datePostedFrom\": datePostedFrom, \"datePostedTo\": datePostedTo, \"htmlDescription\": htmlDescription};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_JobFeed response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET the list of all certifications\n    #\n    # + pageSize - The page size for the pagination (Default is 1000)\n    # + xRefCode - The xrefcode filter for the certifications\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of certifications \n    resource isolated function get [string clientNamespace]/V1/Certifications(int:Signed32? pageSize \u003d (), string? xRefCode \u003d ()) returns PaginatedPayload_IEnumerable_LMSCertification|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Certifications`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize, \"xRefCode\": xRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_LMSCertification response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST one certification\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The certification payload that will be used for certification creation\n    # + return - A certification is created, no response body \n    resource isolated function post [string clientNamespace]/V1/Certifications(true isValidateOnly, LMSCertification payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Certifications`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH one certification\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The certification payload that will be used for certification modification\n    # + return - A certification is updated, no response body \n    resource isolated function patch [string clientNamespace]/V1/Certifications(string xRefCode, true isValidateOnly, LMSCertification payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Certifications`;\n        map\u003canydata\u003e queryParam \u003d {\"xRefCode\": xRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET Client Metadata\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Returns client metadata. \n    resource isolated function get [string clientNamespace]/V1/ClientMetadata() returns ClientMetadata|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ClientMetadata`;\n        ClientMetadata response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET client payroll countries.\n    #\n    # + countryCodes - Comma separated list of country codes to filter the results.\n    # + hcmPayroll - Flag to filter countries for HCM Payroll.\n    # + connectedPay - Flag to filter countries for Connected Pay.\n    # + payGroup - Flag to filter countries having pay group(s).\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Client Payroll Countries. \n    resource isolated function get [string clientNamespace]/V1/ClientPayrollCountry(string? countryCodes \u003d (), boolean? hcmPayroll \u003d (), boolean? connectedPay \u003d (), boolean? payGroup \u003d ()) returns Payload_ClientPayrollCountry|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ClientPayrollCountry`;\n        map\u003canydata\u003e queryParam \u003d {\"countryCodes\": countryCodes, \"hcmPayroll\": hcmPayroll, \"connectedPay\": connectedPay, \"payGroup\": payGroup};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_ClientPayrollCountry response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST Client Payroll Country.\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The ClientPayrollCountry has been added successfully, no response body. \n    resource isolated function post [string clientNamespace]/V1/ClientPayrollCountry(true isValidateOnly, ClientPayrollCountryUpdate[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ClientPayrollCountry`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH Client Payroll Country.\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - ClientPayrollCountry has been updated successfully, no response body. \n    resource isolated function patch [string clientNamespace]/V1/ClientPayrollCountry(true isValidateOnly, ClientPayrollCountryUpdate[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ClientPayrollCountry`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET a List of ContactInformationTypes\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of ContactInformationType XRefCodes. \n    resource isolated function get [string clientNamespace]/V1/ContactInformationTypes() returns Payload_IEnumerable_ContactInformationType|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ContactInformationTypes`;\n        Payload_IEnumerable_ContactInformationType response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET a ContactInformationType with the requested XRefCode.\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The ContactInformationType with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/ContactInformationTypes/[string xrefCode]() returns Payload_ContactInformationType|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ContactInformationTypes/${getEncodedUri(xrefCode)}`;\n        Payload_ContactInformationType response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET the list of all courses\n    #\n    # + pageSize - The page size for the pagination (Default is 1000)\n    # + courseType - The course type filter for the courses\n    # + courseProvider - The course provider filter for the courses\n    # + xRefCode - The xrefcode filter for the courses\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of courses \n    resource isolated function get [string clientNamespace]/V1/Courses(int:Signed32? pageSize \u003d (), string? courseType \u003d (), string? courseProvider \u003d (), string? xRefCode \u003d ()) returns PaginatedPayload_IEnumerable_Course|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Courses`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize, \"courseType\": courseType, \"courseProvider\": courseProvider, \"xRefCode\": xRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_Course response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST one course\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The course payload that will be used for course creation\n    # + return - A course is created, no response body \n    resource isolated function post [string clientNamespace]/V1/Courses(true isValidateOnly, Course payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Courses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH one course\n    #\n    # + xRefCode - The course payload that will be used for course creation\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The course payload that will be used for course creation\n    # + return - A course is updated, no response body \n    resource isolated function patch [string clientNamespace]/V1/Courses(string xRefCode, true isValidateOnly, Course payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Courses`;\n        map\u003canydata\u003e queryParam \u003d {\"xRefCode\": xRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET List of Data Entries.\n    #\n    # + payGroupXRefCode - The pay group reference code.\n    # + entryType - The type of the data entry.\n    # + periodStartDate - The pay run period start date.\n    # + periodEndDate - The pay run period end date.\n    # + payDate - The pay run pay date.\n    # + ppn - The pay run\u0027s pay period number (format: ##-##).\n    # + orgUnitXRefCode - The user org unit reference code to load data entries from (in org unit hierarchy).\n    # + codeType - The type of the data entry codes.\n    # + codeXRefCode - The data entry code reference code.\n    # + employeeXRefCode - The employee reference code.\n    # + projectXRefCodes - The comma separated project reference codes.\n    # + sinceLastModifiedTimestamp - Last modified timestamp to load entries since.\n    # + pageSize - Number of records to be loaded.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Payroll data entries. \n    resource isolated function get [string clientNamespace]/V1/Payroll/DataEntry/[string payGroupXRefCode]/[string entryType](string? periodStartDate \u003d (), string? periodEndDate \u003d (), string? payDate \u003d (), string? ppn \u003d (), string? orgUnitXRefCode \u003d (), string? codeType \u003d (), string? codeXRefCode \u003d (), string? employeeXRefCode \u003d (), string? projectXRefCodes \u003d (), string? sinceLastModifiedTimestamp \u003d (), string? \u0027source \u003d (), int:Signed32? pageSize \u003d ()) returns PaginatedPayload_IEnumerable_DataEntry|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/DataEntry/${getEncodedUri(payGroupXRefCode)}/${getEncodedUri(entryType)}`;\n        map\u003canydata\u003e queryParam \u003d {\"periodStartDate\": periodStartDate, \"periodEndDate\": periodEndDate, \"payDate\": payDate, \"ppn\": ppn, \"orgUnitXRefCode\": orgUnitXRefCode, \"codeType\": codeType, \"codeXRefCode\": codeXRefCode, \"employeeXRefCode\": employeeXRefCode, \"projectXRefCodes\": projectXRefCodes, \"sinceLastModifiedTimestamp\": sinceLastModifiedTimestamp, \"source\": \u0027source, \"pageSize\": pageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_DataEntry response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get a list of Person Management History\n    #\n    # + pageSize - The number of records returned per page in the paginated response\n    # + policy - Person Management Policy Types such as HR, WFM, etc\n    # + personType - Can be either Employee or Candidate\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which Person Management History data to search when records have specific start and end dates.The service defaults to null if the requester does not specify a value.Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which Person Management History data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of Person Management History. \n    resource isolated function get [string clientNamespace]/V1/DataPrivacy/PersonManagementHistory(int:Signed32? pageSize \u003d (), string? policy \u003d (), string? personType \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns PaginatedPayload_PersonManagementHistory|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/DataPrivacy/PersonManagementHistory`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize, \"policy\": policy, \"personType\": personType, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_PersonManagementHistory response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get a list of Person Management Exemption\n    #\n    # + pageSize - The number of records returned per page in the paginated response\n    # + number - Represent the Employee number\n    # + personType - Can be either Employee or Candidate\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of Person Management Exemption. \n    resource isolated function get [string clientNamespace]/V1/DataPrivacy/PersonManagementExemptions(int:Signed32? pageSize \u003d (), string? number \u003d (), string? personType \u003d ()) returns PaginatedPayload_PersonManagementExemption|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/DataPrivacy/PersonManagementExemptions`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize, \"number\": number, \"personType\": personType};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_PersonManagementExemption response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get a list of Person Management Erase History\n    #\n    # + pageSize - The number of records returned per page in the paginated response\n    # + personType - Can be either Employee or Candidate\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which user data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which user data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + requestId - The right to be forgotten request identifier. The value provided must be exact match; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of Person Management Erase History. \n    resource isolated function get [string clientNamespace]/V1/DataPrivacy/PersonManagementEraseHistory(int:Signed32? pageSize \u003d (), string? personType \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d (), int:Signed32? requestId \u003d ()) returns PaginatedPayload_PersonManagementEraseHistory|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/DataPrivacy/PersonManagementEraseHistory`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize, \"personType\": personType, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo, \"requestId\": requestId};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_PersonManagementEraseHistory response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get a List of Policy Associations\n    #\n    # + countryCodes - The country codes to search policies for, if ommited all countries will be returned\n    # + pageSize - The number of records returned per page in the paginated response\n    # + personType - Can be either Employee or Candidate\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of PolicyAssociation data meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/DataPrivacy/PolicyAssociations(string? countryCodes \u003d (), int:Signed32? pageSize \u003d (), string? personType \u003d (), string? xRefCode \u003d ()) returns PaginatedPayload_IEnumerable_PolicyAssociation|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/DataPrivacy/PolicyAssociations`;\n        map\u003canydata\u003e queryParam \u003d {\"countryCodes\": countryCodes, \"pageSize\": pageSize, \"personType\": personType, \"xRefCode\": xRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_PolicyAssociation response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get List of Deduction Definitions.\n    #\n    # + countryCodes - \u0026gt;List of country codes with comma separator to filter the result base on country.\n    # + deductionXRefCodes - List of Deduction Reference Codes with comma separator to filter the result.\n    # + taxComplianceXRefCodes - List of Tax Compliance Reference Codes (DeductionCodeXRefCodes) with comma separator to filter the result.\n    # + taxTypeCodes - List of Tax Type Codes with comma separator to filter the result.\n    # + systemDeduction - Set to True to get only System Defined Deduction, or set to False to get only User Defined Deductions.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - List of Deduction Definitions and associated payees. \n    resource isolated function get [string clientNamespace]/V1/DeductionDefinition(string? countryCodes \u003d (), string? deductionXRefCodes \u003d (), string? taxComplianceXRefCodes \u003d (), string? taxTypeCodes \u003d (), boolean? systemDeduction \u003d ()) returns Payload_IEnumerable_DeductionDefinition|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/DeductionDefinition`;\n        map\u003canydata\u003e queryParam \u003d {\"countryCodes\": countryCodes, \"deductionXRefCodes\": deductionXRefCodes, \"taxComplianceXRefCodes\": taxComplianceXRefCodes, \"taxTypeCodes\": taxTypeCodes, \"systemDeduction\": systemDeduction};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_DeductionDefinition response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of Department XRefCodes. \n    resource isolated function get [string clientNamespace]/V1/Departments() returns Payload_IEnumerable_Department|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Departments`;\n        Payload_IEnumerable_Department response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A Department is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Departments(true isValidateOnly, Department payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Departments`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A Department XRefCode meets the search criteria. \n    resource isolated function get [string clientNamespace]/V1/Departments/[string xRefCode](true isValidateOnly) returns Payload_Department|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Departments/${getEncodedUri(xRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_Department response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A Department is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Departments/[string xRefCode](true isValidateOnly, Department payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Departments/${getEncodedUri(xRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET DocMgmtSecurityGroupUserMap Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The DocMgmtSecurityGroupUserMap with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/DocumentManagementSecurityGroups() returns Payload_IEnumerable_EmployeeDocumentManagementSecurityGroup|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DocumentManagementSecurityGroups`;\n        Payload_IEnumerable_EmployeeDocumentManagementSecurityGroup response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a DocMgmtSecurityGroupUserMap\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The DocMgmtSecurityGroupUserMap is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/DocumentManagementSecurityGroups(true isValidateOnly, EmployeeDocumentManagementSecurityGroup payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DocumentManagementSecurityGroups`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a DocMgmtSecurityGroupUserMap\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The DocMgmtSecurityGroupUserMap is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/DocumentManagementSecurityGroups(true isValidateOnly, EmployeeDocumentManagementSecurityGroup payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DocumentManagementSecurityGroups`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET a List of Documents\n    #\n    # + employeeXRefCode - Filter for documents attached to the uniquely identified employee specified. Partial search is not supported, so provide the full value. Otherwise, a 400 error will be returned.\n    # + lastModifiedTimestampStart - Filter for documents starting from this date time value. The lastModifiedTimestampStart and lastModifiedTimestampEnd criteria require additional criteria to be specified.\n    # + lastModifiedTimestampEnd - Filter for documents until this date time value. The lastModifiedTimestampStart and lastModifiedTimestampEnd criteria require additional criteria to be specified.\n    # + entity - Filter documents attached to this specified entity. The entity and entityTypeXRefCode must both be provided to apply this filter criteria.\n    # + entityTypeXRefCode - Filter for documents associated with this specified Entity Type. The current Entity Types supported for filtering are: \"BENEFIT_PLAN\", \"BENEFIT_PLAN_OPTION\", \"HR_POLICY\", \"PAY_RUN\", \"PAY_GROUP_CALENDAR\", \"EMPLOYEE_FILE\". The entity and entityTypeXRefCode must both be provided to apply this filter criteria.\n    # + documentTypeXRefCode - Filter for documents associated with this specified Document Type\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Returns documents associated with the given criteria. \n    resource isolated function get [string clientNamespace]/V1/Documents(string? employeeXRefCode \u003d (), string? lastModifiedTimestampStart \u003d (), string? lastModifiedTimestampEnd \u003d (), string? entity \u003d (), string? entityTypeXRefCode \u003d (), string? documentTypeXRefCode \u003d ()) returns Payload_IEnumerable_Document|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Documents`;\n        map\u003canydata\u003e queryParam \u003d {\"employeeXRefCode\": employeeXRefCode, \"lastModifiedTimestampStart\": lastModifiedTimestampStart, \"lastModifiedTimestampEnd\": lastModifiedTimestampEnd, \"entity\": entity, \"entityTypeXRefCode\": entityTypeXRefCode, \"documentTypeXRefCode\": documentTypeXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_Document response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Document Details\n    #\n    # + documentGuid - Uniquely identifies the document you want to retrieve. Partial search is not supported, so provide the full value. Otherwise, a 400 error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Returns the document identified by the documentGuid \n    resource isolated function get [string clientNamespace]/V1/documents/[string documentGuid]() returns Payload_ArchiveDocument|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/documents/${getEncodedUri(documentGuid)}`;\n        Payload_ArchiveDocument response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Create) Queue Document Import task\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the metadata entities and elements of document import to be processed in POST (queue task) operation.\n    # + return - Document import queued. \n    resource isolated function post [string clientNamespace]/V1/Documents/Import/Queue(true isValidateOnly, DocumentImportQueueRequest[] payload) returns Payload_DocumentImportQueueResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Documents/Import/Queue`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_DocumentImportQueueResponse response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Upload one or more documents using a multipart request.\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Document(s) processed. \n    resource isolated function post [string clientNamespace]/V1/Documents/Upload(true isValidateOnly) returns DocMgmtUploadResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Documents/Upload`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        DocMgmtUploadResponse response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET List of Earning Definitions.\n    #\n    # + countryCodes - List of country codes with comma separator to filter the result base on country.\n    # + earningXRefCodes - List of Earning Reference Codes with comma separator to filter the result.\n    # + taxComplianceXRefCodes - List of Tax Compliance Reference Codes (EarningCodeXRefCodes) with comma separator to filter the result.\n    # + earningTypeXRefCodes - List of Earning Type Reference Codes with comma separator to filter the result.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - List of Earning Definitions and associated payees. \n    resource isolated function get [string clientNamespace]/V1/EarningDefinition(string? countryCodes \u003d (), string? earningXRefCodes \u003d (), string? taxComplianceXRefCodes \u003d (), string? earningTypeXRefCodes \u003d ()) returns Payload_IEnumerable_EarningDefinition|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EarningDefinition`;\n        map\u003canydata\u003e queryParam \u003d {\"countryCodes\": countryCodes, \"earningXRefCodes\": earningXRefCodes, \"taxComplianceXRefCodes\": taxComplianceXRefCodes, \"earningTypeXRefCodes\": earningTypeXRefCodes};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EarningDefinition response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Earning Statement Headers\n    #\n    # + pageSize - The number of records returned per page in the paginated response\n    # + payGroupXRefCode - The pay group\u0027s reference code.\n    # + payDate - The pay run\u0027s pay date (format: yyyy-mm-dd).\n    # + payPeriodStartDate - The pay run\u0027s period start date (format: yyyy-mm-dd).\n    # + payPeriodEndDate - The pay run\u0027s period end date (format: yyyy-mm-dd).\n    # + ppn - The PayPeriodNumber(format: ##-##).\n    # + employeeXRefCodes - Comma delimited list of XRef codes for employees\n    # + employeeLastNames - Comma delimited list of last names for employees\n    # + employeePayDateBegin - The employee\u0027s pay start date(format: yyyy-mm-dd).\n    # + employeePayDateEnd - The employee\u0027s pay end date(format: yyyy-mm-dd).\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An encrypted string which contains list of earning statement headers. \n    resource isolated function get [string clientNamespace]/V1/EarningStatementHeader(int:Signed32? pageSize \u003d (), string? payGroupXRefCode \u003d (), string? payDate \u003d (), string? payPeriodStartDate \u003d (), string? payPeriodEndDate \u003d (), string? ppn \u003d (), string? employeeXRefCodes \u003d (), string? employeeLastNames \u003d (), string? employeePayDateBegin \u003d (), string? employeePayDateEnd \u003d ()) returns PaginatedPayload_EarningStatementHeader|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EarningStatementHeader`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize, \"payGroupXRefCode\": payGroupXRefCode, \"payDate\": payDate, \"payPeriodStartDate\": payPeriodStartDate, \"payPeriodEndDate\": payPeriodEndDate, \"ppn\": ppn, \"employeeXRefCodes\": employeeXRefCodes, \"employeeLastNames\": employeeLastNames, \"employeePayDateBegin\": employeePayDateBegin, \"employeePayDateEnd\": employeePayDateEnd};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_EarningStatementHeader response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Earning Statement Pdf\n    #\n    # + employeeXRefCode - Employee XRefCode.\n    # + earningStatementXRefCode - Unique identifier for the Earning Statement.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Earning statement document. \n    resource isolated function get [string clientNamespace]/V1/EarningStatement/[string earningStatementXRefCode](string employeeXRefCode) returns Payload_List_EarningStatementDocument|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EarningStatement/${getEncodedUri(earningStatementXRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"employeeXRefCode\": employeeXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_List_EarningStatementDocument response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET EmergencyContact Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The emergency contacts of employee with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmergencyContacts(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeEmergencyContact|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmergencyContacts`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeEmergencyContact response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmergencyContact\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmergencyContact is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmergencyContacts(true isValidateOnly, EmployeeEmergencyContact payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmergencyContacts`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmergencyContact\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmergencyContact is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmergencyContacts(true isValidateOnly, EmployeeEmergencyContact payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmergencyContacts`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET DEUEmployeeAccidentInsurance Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The DEUEmployeeAccidentInsurance with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeAccidentInsurance/AccidentInsurance() returns Payload_IEnumerable_DEUEmployeeAccidentInsurance|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeAccidentInsurance/AccidentInsurance`;\n        Payload_IEnumerable_DEUEmployeeAccidentInsurance response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST A dEUEmployeeAccidentInsurance\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A DEUEmployeeAccidentInsurance is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeAccidentInsurance/AccidentInsurance(true isValidateOnly, DEUEmployeeAccidentInsurance payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeAccidentInsurance/AccidentInsurance`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an DEUEmployeeAccidentInsurance\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The dEUEmployeeAccidentInsurance is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeAccidentInsurance/AccidentInsurance(true isValidateOnly, DEUEmployeeAccidentInsurance payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeAccidentInsurance/AccidentInsurance`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeAssignedSexAndGenderIdentity Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeAssignedSexAndGenderIdentity with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeAssignedSexAndGenderIdentity(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeAssignedSexAndGenderIdentity|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeAssignedSexAndGenderIdentity`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeAssignedSexAndGenderIdentity response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeAssignedSexAndGenderIdentity\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeAssignedSexAndGenderIdentity is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeAssignedSexAndGenderIdentity(true isValidateOnly, EmployeeAssignedSexAndGenderIdentity payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeAssignedSexAndGenderIdentity`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeAssignedSexAndGenderIdentity\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeAssignedSexAndGenderIdentity is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeAssignedSexAndGenderIdentity(true isValidateOnly, EmployeeAssignedSexAndGenderIdentity payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeAssignedSexAndGenderIdentity`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeAUSFederalTax Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeAUSFederalTax with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/AUSFederalTaxes(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeAUSFederalTax|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/AUSFederalTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeAUSFederalTax response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeAUSFederalTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeAUSFederalTax is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/AUSFederalTaxes(true isValidateOnly, EmployeeAUSFederalTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/AUSFederalTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeAUSFederalTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeAUSFederalTax is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/AUSFederalTaxes(true isValidateOnly, EmployeeAUSFederalTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/AUSFederalTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET Employee superannuation details for Australia\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The employee superannuation details for Australia by requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/AUSSuperannuation(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeAUSSuperannuation|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/AUSSuperannuation`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeAUSSuperannuation response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Employee superannuation rules for Australia\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The employee superannuation rules for Australia by requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/AUSSuperannuationRules(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeAUSSuperannuationRules|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/AUSSuperannuationRules`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeAUSSuperannuationRules response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Employee\u0027s Authorization Assignment Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeAuthorizationAssignments with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/AuthorizationAssignments(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_AuthorizationAssignment|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/AuthorizationAssignments`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_AuthorizationAssignment response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an AuthorizationAssignment\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An AuthorizationAssignment is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/AuthorizationAssignments(true isValidateOnly, AuthorizationAssignment payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/AuthorizationAssignments`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an AuthorizationAssignment\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The AuthorizationAssignment is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/AuthorizationAssignments(true isValidateOnly, AuthorizationAssignment payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/AuthorizationAssignments`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeBadge Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeBadge with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Badges(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeBadge|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Badges`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeBadge response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeBadge\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeBadge is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/Badges(true isValidateOnly, EmployeeBadge payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Badges`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeBadge\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeBadge is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/Badges(true isValidateOnly, EmployeeBadge payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Badges`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get a list of Employee Balance Periods\n    #\n    # + employeeXRefCode - A case-sensitive field that identifies a unique employee.\n    # + asOfDate - The date as of which to calculate the current values for the employee balance periods returned. If omitted, current values will be calculated as of today. Example: 2020-01-01T00:00:00\n    # + startDate - Period start date to determine which employee balance periods to retrieve. If omitted, today\u0027s date will be used. Example: 2020-01-01T00:00:00\n    # + endDate - Period end date to determine which employee balance periods to retrieve. If omitted, the period start date will be used. If the period start date is also omitted, today\u0027s date will be used. Example: 2020-01-01T00:00:00\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of employee balance periods meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/EmployeeBalancePeriods(string employeeXRefCode, string? asOfDate \u003d (), string? startDate \u003d (), string? endDate \u003d ()) returns Payload_IEnumerable_EmployeeBalancePeriod|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeBalancePeriods`;\n        map\u003canydata\u003e queryParam \u003d {\"employeeXRefCode\": employeeXRefCode, \"asOfDate\": asOfDate, \"startDate\": startDate, \"endDate\": endDate};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeBalancePeriod response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get a list of Employee Balance Transactions grouped by their employee balance periods\n    #\n    # + employeeXRefCode - A case-sensitive field that identifies a unique employee.\n    # + balanceXRefCode - A case-sensitive field that identifies a unique balance.\n    # + startDate - Period start date to determine which employee balance periods to retrieve. If omitted, today\u0027s date will be used. Example: 2020-01-01T00:00:00\n    # + endDate - Period end date to determine which employee balance periods to retrieve. If omitted, the period start date will be used. If the period start date is also omitted, today\u0027s date will be used. Example: 2020-01-01T00:00:00\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of employee balance transactions grouped by their employee balance periods meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/EmployeeBalanceTransactions(string employeeXRefCode, string balanceXRefCode, string? startDate \u003d (), string? endDate \u003d ()) returns Payload_IEnumerable_EmployeeBalanceTransactions|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeBalanceTransactions`;\n        map\u003canydata\u003e queryParam \u003d {\"employeeXRefCode\": employeeXRefCode, \"balanceXRefCode\": balanceXRefCode, \"startDate\": startDate, \"endDate\": endDate};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeBalanceTransactions response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Create) Employee Balance Transaction\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An employee balance transaction is created \n    resource isolated function post [string clientNamespace]/V1/EmployeeBalanceTransactions(true isValidateOnly, EmployeeBalanceTransactionForSubmit payload) returns EmployeeBalanceTransactionPostResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeBalanceTransactions`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        EmployeeBalanceTransactionPostResponse response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH (Modify) Employee Balance Transaction\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An employee balance transaction is modified \n    resource isolated function patch [string clientNamespace]/V1/EmployeeBalanceTransactions(string employeeBalanceTransactionId, true isValidateOnly, EmployeeBalanceTransactionForPatch payload) returns EmployeeBalanceTransactionPatchResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeBalanceTransactions`;\n        map\u003canydata\u003e queryParam \u003d {\"employeeBalanceTransactionId\": employeeBalanceTransactionId, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        EmployeeBalanceTransactionPatchResponse response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeCANFederalTax Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeCANFederalTax with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/CANFederalTaxes(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeCANFederalTax|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/CANFederalTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeCANFederalTax response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeCANFederalTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeCANFederalTax is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/CANFederalTaxes(true isValidateOnly, EmployeeCANFederalTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/CANFederalTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeCANFederalTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeCANFederalTax is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/CANFederalTaxes(true isValidateOnly, EmployeeCANFederalTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/CANFederalTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeCANStateTax Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeCANStateTax with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/CANStateTaxes(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeCANStateTax|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/CANStateTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeCANStateTax response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeCANStateTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A CANStateTaxes is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/CANStateTaxes(true isValidateOnly, EmployeeCANStateTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/CANStateTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeCANStateTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The CANStateTaxes is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/CANStateTaxes(true isValidateOnly, EmployeeCANStateTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/CANStateTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeCANTaxStatus Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeCANTaxStatus with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/CANTaxStatuses(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeCANTaxStatus|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/CANTaxStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeCANTaxStatus response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST EmployeeCANTaxStatus Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A EmployeeCANTaxStatus Detail is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/CANTaxStatuses(true isValidateOnly, EmployeeCANTaxStatus payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/CANTaxStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH EmployeeCANTaxStatus Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeCANTaxStatus Detail is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/CANTaxStatuses(true isValidateOnly, EmployeeCANTaxStatus payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/CANTaxStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeCertification Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeCertification with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeCertifications(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_LMSEmployeeCertification|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeCertifications`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_LMSEmployeeCertification response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an Employee Certification\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee Certification is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeCertifications(true isValidateOnly, LMSEmployeeCertification payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeCertifications`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH (Update) an Employee Certification\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee Certification is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeCertifications(true isValidateOnly, LMSEmployeeCertification payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeCertifications`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeClockDeviceGroup Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeClockDeviceGroup with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/ClockDeviceGroups(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeClockDeviceGroup|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/ClockDeviceGroups`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeClockDeviceGroup response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeClockDeviceGroup\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeClockDeviceGroup is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/ClockDeviceGroups(true isValidateOnly, EmployeeClockDeviceGroup payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/ClockDeviceGroups`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeClockDeviceGroup\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeClockDeviceGroup is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/ClockDeviceGroups(true isValidateOnly, EmployeeClockDeviceGroup payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/ClockDeviceGroups`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeCompensation Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeCompensation with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/CompensationSummary(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeCompensation|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/CompensationSummary`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeCompensation response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET EmployeeConfidentialIdentification Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeConfidentialIdentification with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/ConfidentialIdentification(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeConfidentialIdentification|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/ConfidentialIdentification`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeConfidentialIdentification response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeConfidentialIdentification\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeConfidentialIdentification is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/ConfidentialIdentification(true isValidateOnly, EmployeeConfidentialIdentification payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/ConfidentialIdentification`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeConfidentialIdentification\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeConfidentialIdentification is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/ConfidentialIdentification(true isValidateOnly, EmployeeConfidentialIdentification payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/ConfidentialIdentification`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeCourse Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeCourse with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Courses() returns Payload_IEnumerable_EmployeeCourse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Courses`;\n        Payload_IEnumerable_EmployeeCourse response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an Employee Course Enrollment\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be created.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee Course Enrollment is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/Courses(true isValidateOnly, EmployeeCourse payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Courses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH (Update) an Employee Course Enrollment\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be created.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, PATCH operation validate the request without applying the changes to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee Course Enrollment is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/Courses(true isValidateOnly, EmployeeCourse payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Courses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeDefaultLabor Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeDefaultLabor with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/LaborDefaults(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeDefaultLabor|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/LaborDefaults`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeDefaultLabor response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeDefaultLabor\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An EmployeeDefaultLabor is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/LaborDefaults(true isValidateOnly, EmployeeDefaultLabor payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/LaborDefaults`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeDefaultLabor\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeDefaultLabor is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/LaborDefaults(true isValidateOnly, EmployeeDefaultLabor payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/LaborDefaults`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeDependentsBeneficiaries Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeDependentsBeneficiaries with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/DependentsBeneficiaries(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeDependentBeneficiary|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DependentsBeneficiaries`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeDependentBeneficiary response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET EmployeeWageTax Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeWageTax with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/DEUTax/DEUEmployeeWageTax(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_DEUEmployeeWageTax|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DEUTax/DEUEmployeeWageTax`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_DEUEmployeeWageTax response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an Employee Wage Tax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An Employee Wage Tax is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/DEUTax/DEUEmployeeWageTax(true isValidateOnly, DEUEmployeeWageTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DEUTax/DEUEmployeeWageTax`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH (Update) an Employee Wage Tax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An Employee Wage Tax is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/DEUTax/DEUEmployeeWageTax(true isValidateOnly, DEUEmployeeWageTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DEUTax/DEUEmployeeWageTax`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET Employee Social Insurance Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Employee Social Insurance details with the requested Employee XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/DEUTax/SocialInsurance(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_DEUTaxSocialInsurance|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DEUTax/SocialInsurance`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_DEUTaxSocialInsurance response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST Employee Social Insurance Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An Employee Social Insurance is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/DEUTax/SocialInsurance(true isValidateOnly, DEUTaxSocialInsurance payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DEUTax/SocialInsurance`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH (Update) aEmployee Social Insurance Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An Employee Social Insurance is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/DEUTax/SocialInsurance(true isValidateOnly, DEUTaxSocialInsurance payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DEUTax/SocialInsurance`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeDirectDeposit Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeDirectDeposit with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/DirectDeposits(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeDirectDeposit|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/DirectDeposits`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeDirectDeposit response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET EmployeeDisability Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeDisabilityController with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Disabilities(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeDisability|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Disabilities`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeDisability response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeDisability\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A EmployeeDisability is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/Disabilities(true isValidateOnly, EmployeeDisability payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Disabilities`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeDisability\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeDisability is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/Disabilities(true isValidateOnly, EmployeeDisability payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Disabilities`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeEIRate Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeEIRate with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EIRates(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeCANEmploymentInsuranceRate|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EIRates`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeCANEmploymentInsuranceRate response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET EmployeeEmploymentAgreement Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeEmploymentAgreement with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmploymentAgreements(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeEmploymentAgreement|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmploymentAgreements`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeEmploymentAgreement response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeEmploymentAgreement\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmploymentAgreements(true isValidateOnly, EmployeeEmploymentAgreement payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmploymentAgreements`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeEmploymentAgreement\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeEmploymentAgreement is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmploymentAgreements(true isValidateOnly, EmployeeEmploymentAgreement payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmploymentAgreements`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmploymentStatus Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Employment Statuses of employee with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmploymentStatuses(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeEmploymentStatus|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmploymentStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeEmploymentStatus response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmploymentStatus\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmploymentStatus is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmploymentStatuses(true isValidateOnly, EmployeeEmploymentStatus payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmploymentStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmploymentStatus\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmploymentStatus is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmploymentStatuses(true isValidateOnly, EmployeeEmploymentStatus payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmploymentStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Replace EmploymentStatuses\n    #\n    # + xRefCode - The unique identifier (external reference code) of the Employee for whom the subordinate data will be replaced.\n    # The value provided must be the exact match for an Employee; otherwise, a bad request (400) error will be returned.\n    # + replaceFrom - The date from which all EmploymentStatuses will be replaced.\n    # + replaceTo - The date up to which all EmploymentStatuses will be replaced.\n    # + isValidateOnly - When a TRUE value is used in this parameter, validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The new JSON-formatted EmploymentStatus with which to replace the deleted ones.\n    # + return - The Employee\u0027s Employment Statuses are replaced within the given date range; no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmploymentStatuses/Replacement(true isValidateOnly, EmployeeEmploymentStatus payload, string? replaceFrom \u003d (), string? replaceTo \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmploymentStatuses/Replacement`;\n        map\u003canydata\u003e queryParam \u003d {\"replaceFrom\": replaceFrom, \"replaceTo\": replaceTo, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeEmploymentType Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeEmploymentType with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmploymentTypes(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeEmploymentType|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmploymentTypes`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeEmploymentType response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeEmploymentType\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeEmploymentType is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmploymentTypes(true isValidateOnly, EmployeeEmploymentType payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmploymentTypes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeEmploymentType\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeEmploymentType is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmploymentTypes(true isValidateOnly, EmployeeEmploymentType payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmploymentTypes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeEthnicity Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeEthnicity with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Ethnicities(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeEthnicity|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Ethnicities`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeEthnicity response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST EmployeeEthnicity Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A EmployeeEthnicity Detail is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/Ethnicities(true isValidateOnly, EmployeeEthnicity payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Ethnicities`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH EmployeeEthnicity Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeEthnicity Detail is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/Ethnicities(true isValidateOnly, EmployeeEthnicity payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Ethnicities`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get the status of Job Queue tables.\n    #\n    # + backgroundJobQueueItemId - To find a status of employee export background job\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Job Status and Access API URL \n    resource isolated function get [string clientNamespace]/v1/EmployeeExportJobs/Status/[int:Signed32 backgroundJobQueueItemId]() returns Payload_Object|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/v1/EmployeeExportJobs/Status/${getEncodedUri(backgroundJobQueueItemId)}`;\n        Payload_Object response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get bulk employee of data as a string in json format\n    #\n    # + jobId - To get background job processed data for employee export\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Returns a page of employee data. \n    resource isolated function get [string clientNamespace]/v1/EmployeeExportJobs/Data/[string jobId]() returns PaginatedPayload_IEnumerable_Employee|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/v1/EmployeeExportJobs/Data/${getEncodedUri(jobId)}`;\n        PaginatedPayload_IEnumerable_Employee response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Add new HR Bulk Export details into Job Queue tables.\n    #\n    # + isValidateOnly - This parameter used to run a test case without fail\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A HR Bulk Export is created with an empty response body. \n    resource isolated function post [string clientNamespace]/V1/EmployeeExportJobs(true isValidateOnly, EmployeeExportParams payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeExportJobs`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeGlobalPropertyValue Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeGlobalPropertyValue with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeGlobalProperties(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeGlobalPropertyValue|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeGlobalProperties`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeGlobalPropertyValue response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeGlobalPropertyValue\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee Global Property is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeGlobalProperties(true isValidateOnly, EmployeeGlobalPropertyValue payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeGlobalProperties`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeGlobalPropertyValue\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeGlobalPropertyValue is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeGlobalProperties(true isValidateOnly, EmployeeGlobalPropertyValue payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeGlobalProperties`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET the list of employee gl splits.\n    #\n    # + payGroupXRefCode - The pay group reference code.\n    # + employeeXRefCodes - The comma separated employee XRef codes.\n    # + splitStatus - Filter to fetch all or current/future effective GL splits. Value can be All or Active. Default value is Active.\n    # + pageSize - Number of records to be loaded.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Employee GL Splits. \n    resource isolated function get [string clientNamespace]/V1/Payroll/EmployeeGLSplits(string? payGroupXRefCode \u003d (), string? employeeXRefCodes \u003d (), string? splitStatus \u003d (), int:Signed32? pageSize \u003d ()) returns PaginatedPayload_IEnumerable_EmployeeGLSplits|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/EmployeeGLSplits`;\n        map\u003canydata\u003e queryParam \u003d {\"payGroupXRefCode\": payGroupXRefCode, \"employeeXRefCodes\": employeeXRefCodes, \"splitStatus\": splitStatus, \"pageSize\": pageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_EmployeeGLSplits response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a list of employee GLSplitSets.\n    #\n    # + isValidateOnly - If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - OK response \n    resource isolated function post [string clientNamespace]/V1/Payroll/EmployeeGLSplits(true isValidateOnly, EmployeeGLSplitUpsert[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/EmployeeGLSplits`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a list of employee GLSplitSets.\n    #\n    # + isValidateOnly - If TRUE, PATCH operations validate the request without queue the import. The default value is FALSE. Note, PATCH operation will only validate data structure.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - OK response \n    resource isolated function patch [string clientNamespace]/V1/Payroll/EmployeeGLSplits(true isValidateOnly, EmployeeGLSplitUpsert[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/EmployeeGLSplits`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET HighlyCompensatedEmployee Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The HighlyCompensatedEmployee with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/HighlyCompensatedEmployees(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeHighlyCompensatedEmployeeIndicator|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/HighlyCompensatedEmployees`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeHighlyCompensatedEmployeeIndicator response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a HighlyCompensatedEmployee\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A HighlyCompensatedEmployee is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/HighlyCompensatedEmployees(true isValidateOnly, EmployeeHighlyCompensatedEmployeeIndicator payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/HighlyCompensatedEmployees`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a HighlyCompensatedEmployee\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The HighlyCompensatedEmployee is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/HighlyCompensatedEmployees(true isValidateOnly, EmployeeHighlyCompensatedEmployeeIndicator payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/HighlyCompensatedEmployees`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeHealthWellness Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeHealthWellness with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/HealthWellnessDetails(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeHealthWellness|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/HealthWellnessDetails`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeHealthWellness response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeHealthWellness\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A EmployeeHealthWellness is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/HealthWellnessDetails(true isValidateOnly, EmployeeHealthWellness payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/HealthWellnessDetails`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeHealthWellness\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeHealthWellness is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/HealthWellnessDetails(true isValidateOnly, EmployeeHealthWellness payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/HealthWellnessDetails`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeHRIncident Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeHRIncident with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/HRIncidents() returns Payload_IEnumerable_EmployeeHRIncident|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/HRIncidents`;\n        Payload_IEnumerable_EmployeeHRIncident response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeHRIncident\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An EmployeeHRIncident is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/HRIncidents(true isValidateOnly, EmployeeHRIncident payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/HRIncidents`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeHRPolicy Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Employee HRPolicy with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/HRPolicies() returns Payload_IEnumerable_EmployeeHRPolicy|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/HRPolicies`;\n        Payload_IEnumerable_EmployeeHRPolicy response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeHRPolicy\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee HRPolicy is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/HRPolicies(true isValidateOnly, EmployeeHRPolicy payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/HRPolicies`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET an EmployeeIRLTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeIRLTaxEWSS with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/EWSS() returns Payload_IEnumerable_EmployeeIRLTaxEWSS|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/EWSS`;\n        Payload_IEnumerable_EmployeeIRLTaxEWSS response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeIRLTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeIRLTaxEWSS is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/EWSS(true isValidateOnly, EmployeeIRLTaxEWSS payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/EWSS`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeIRLTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeIRLTaxEWSS is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/EWSS(true isValidateOnly, EmployeeIRLTaxEWSS payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/EWSS`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeIRLTaxPAYEExclusion Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeIRLTaxPAYEExclusion with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/PAYEExclusion() returns Payload_IEnumerable_EmployeeIRLTaxPAYEExclusion|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/PAYEExclusion`;\n        Payload_IEnumerable_EmployeeIRLTaxPAYEExclusion response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeIRLTaxPAYEExclusion\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An EmployeeIRLTaxPAYEExclusion is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/PAYEExclusion(true isValidateOnly, EmployeeIRLTaxPAYEExclusion payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/PAYEExclusion`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeIRLTaxPAYEExclusion\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeIRLTaxPAYEExclusion is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/PAYEExclusion(true isValidateOnly, EmployeeIRLTaxPAYEExclusion payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/PAYEExclusion`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeIRLTax Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeIRLTaxPRSI with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/PRSI() returns Payload_IEnumerable_EmployeeIRLTaxPRSI|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/PRSI`;\n        Payload_IEnumerable_EmployeeIRLTaxPRSI response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeIRLTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeIRLTaxPRSI is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/PRSI(true isValidateOnly, EmployeeIRLTaxPRSI payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/PRSI`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeIRLTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeIRLTaxPRSI is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/PRSI(true isValidateOnly, EmployeeIRLTaxPRSI payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/PRSI`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET an EmployeeIRLTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeIRLTaxRPN with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/RPN() returns Payload_IEnumerable_EmployeeIRLTaxRPN|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/RPN`;\n        Payload_IEnumerable_EmployeeIRLTaxRPN response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeIRLTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeIRLTaxRPN is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/RPN(true isValidateOnly, EmployeeIRLTaxRPN payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/RPN`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeIRLTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeIRLTaxRPN is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/IRLTax/RPN(true isValidateOnly, EmployeeIRLTaxRPN payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/IRLTax/RPN`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeLocation Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeLocation with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Locations(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeLocation|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Locations`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeLocation response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeLocation\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeLocation is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/Locations(true isValidateOnly, EmployeeLocation payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Locations`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeLocation\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeLocation is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/Locations(true isValidateOnly, EmployeeLocation payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Locations`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeManager Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeManager with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeManagers(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeManager|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeManagers`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeManager response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET EmployeeOnboardingPolicy Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeOnboardingPolicy with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/OnboardingPolicies(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeOnboardingPolicy|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/OnboardingPolicies`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeOnboardingPolicy response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeOnboardingPolicy\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/OnboardingPolicies(true isValidateOnly, EmployeeOnboardingPolicy payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/OnboardingPolicies`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeOnboardingPolicy\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeOnboardingPolicy is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/OnboardingPolicies(true isValidateOnly, EmployeeOnboardingPolicy payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/OnboardingPolicies`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeOrgUnitInfo Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeOrgUnitInfo with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/OrgUnitInfos() returns Payload_IEnumerable_EmployeeOrgUnitInformation|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/OrgUnitInfos`;\n        Payload_IEnumerable_EmployeeOrgUnitInformation response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET EmployeePayAdjCodeGroupList Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeePayAdjCodeGroupList with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeePayAdjustCodeGroups() returns Payload_IEnumerable_EmployeePayAdjustCodeGroup|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeePayAdjustCodeGroups`;\n        Payload_IEnumerable_EmployeePayAdjustCodeGroup response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeePayAdjCodeGroupList\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeePayAdjCodeGroupList is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeePayAdjustCodeGroups(true isValidateOnly, EmployeePayAdjustCodeGroup payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeePayAdjustCodeGroups`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeePayAdjCodeGroupList\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeePayAdjCodeGroupList is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeePayAdjustCodeGroups(true isValidateOnly, EmployeePayAdjustCodeGroup payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeePayAdjustCodeGroups`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get a list of Employee Pay Adjustments\n    #\n    # + filterPayAdjustmentStartDate - Inclusive period start date in UTC to determine which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00\n    # + filterPayAdjustmentEndDate - Inclusive period end date in UTC to determine which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00\n    # + filterLastModifiedStartDateUTC - Inclusive period last modified start date in UTC to determine which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00Z\n    # + filterLastModifiedEndDateUTC - Inclusive period last modified end date in UTC to determine which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00Z\n    # + orgUnitXRefCode - A case-sensitive field that identifies a unique organization\n    # + employeeXRefCode - A case-sensitive field that identifies a unique employee\n    # + payAdjustmentCodeXRefCode - A case-sensitive field that identifies a unique pay adjustment code\n    # + projectXRefCode - A case-sensitive field that identifies a unique project\n    # + departmentXRefCode - A case-sensitive field that identifies a unique department\n    # + jobXRefCode - A case-sensitive field that identifies a unique job\n    # + docketXRefCode - A case-sensitive field that identifies a unique docket\n    # + referenceDate - Inclusive period reference date in UTC to determine which employee pay adjustment data to retrieve. Example: 2017-01-01T00:00:00\n    # + managerAuthorized - A flag to determine if a pay adjustment is manager authorized\n    # + employeeAuthorized - A flag to determine if a pay adjustment is employee authorized\n    # + isDeleted - A flag to determine if a pay adjustment is deleted\n    # + pageSize - The number of records returned per page in the paginated response\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of EmployeePayAdjustment data meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/EmployeePayAdjustments(string filterPayAdjustmentStartDate, string filterPayAdjustmentEndDate, string? filterLastModifiedStartDateUTC \u003d (), string? filterLastModifiedEndDateUTC \u003d (), string? orgUnitXRefCode \u003d (), string? employeeXRefCode \u003d (), string? payAdjustmentCodeXRefCode \u003d (), string? projectXRefCode \u003d (), string? departmentXRefCode \u003d (), string? jobXRefCode \u003d (), string? docketXRefCode \u003d (), string? referenceDate \u003d (), boolean? managerAuthorized \u003d (), boolean? employeeAuthorized \u003d (), boolean? isDeleted \u003d (), int:Signed32? pageSize \u003d ()) returns PaginatedPayload_IEnumerable_EmployeePayAdjustment|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeePayAdjustments`;\n        map\u003canydata\u003e queryParam \u003d {\"filterPayAdjustmentStartDate\": filterPayAdjustmentStartDate, \"filterPayAdjustmentEndDate\": filterPayAdjustmentEndDate, \"filterLastModifiedStartDateUTC\": filterLastModifiedStartDateUTC, \"filterLastModifiedEndDateUTC\": filterLastModifiedEndDateUTC, \"orgUnitXRefCode\": orgUnitXRefCode, \"employeeXRefCode\": employeeXRefCode, \"payAdjustmentCodeXRefCode\": payAdjustmentCodeXRefCode, \"projectXRefCode\": projectXRefCode, \"departmentXRefCode\": departmentXRefCode, \"jobXRefCode\": jobXRefCode, \"docketXRefCode\": docketXRefCode, \"referenceDate\": referenceDate, \"managerAuthorized\": managerAuthorized, \"employeeAuthorized\": employeeAuthorized, \"isDeleted\": isDeleted, \"pageSize\": pageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_EmployeePayAdjustment response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Create) Employee Pay Adjustment\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operations validate the request without applying updates to the database.\n    # + isValidateLabor - When a TRUE value is used in this parameter, POST operations validate against Labor Validation Engine to verify pay adjustment follows rules/qualifiers created\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An employee pay adjustment is created \n    resource isolated function post [string clientNamespace]/V1/EmployeePayAdjustments(true isValidateOnly, EmployeePayAdjustmentForSubmit payload, boolean? isValidateLabor \u003d ()) returns EmployeePayAdjustmentPostResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeePayAdjustments`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly, \"isValidateLabor\": isValidateLabor};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        EmployeePayAdjustmentPostResponse response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH (Update) Employee Pay Adjustment\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, PATCH operations validate the request without applying updates to the database.\n    # + isValidateLabor - When a TRUE value is used in this parameter, PATCH operations validate against Labor Validation Engine to verify pay adjustment follows rules/qualifiers created\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An employee pay adjustment is updated \n    resource isolated function patch [string clientNamespace]/V1/EmployeePayAdjustments/[string xRefCode](true isValidateOnly, EmployeePayAdjustmentForSubmit payload, boolean? isValidateLabor \u003d ()) returns EmployeePayAdjustmentPostResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeePayAdjustments/${getEncodedUri(xRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly, \"isValidateLabor\": isValidateLabor};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        EmployeePayAdjustmentPostResponse response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeePayGradeRate Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeePayGradeRate with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/PayGradeRates(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeePayGradeRate|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/PayGradeRates`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeePayGradeRate response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET List of Taxes for a specific employee.\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved. The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeePayrollTax with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeePayrollTaxes() returns Payload_IEnumerable_EmployeePayrollTax|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeePayrollTaxes`;\n        Payload_IEnumerable_EmployeePayrollTax response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET List of Tax Parameters for a specific employee.\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved. The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates. The service defaults to the current day if the requester does not specify a value. Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates. The service defaults to null if the requester does not specify a value. Example: 2017-01-01T13:24:56\n    # + taxAuthorityInstance - The Governmental Authority having jurisdiction over the assessment, determination, collection or imposition of any tax. The value provided must be an exact match to an authority assigned to the employee. Example: USA-00000000-001.\n    # + legalEntityXRefCode - The unique reference code which identifies the organization that the federal tax authorities recognize. The value provided must be an exact match to the Legal Entity reference to which the employee is assigned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeePayrollTax with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeePayrollTaxParameters(string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d (), string? taxAuthorityInstance \u003d (), string? legalEntityXRefCode \u003d ()) returns Payload_IEnumerable_EmployeePayrollTaxParameter|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeePayrollTaxParameters`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo, \"taxAuthorityInstance\": taxAuthorityInstance, \"legalEntityXRefCode\": legalEntityXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeePayrollTaxParameter response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST Tax Parameter for an employee.\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeePayrollTaxParameter is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeePayrollTaxParameters(true isValidateOnly, EmployeePayrollTaxParameter payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeePayrollTaxParameters`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH Tax Parameter for an employee.\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeePayrollTaxParameter is created, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeePayrollTaxParameters(true isValidateOnly, EmployeePayrollTaxParameter payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeePayrollTaxParameters`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # POST Tax Parameter for an employee.\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - EmployeePayrollTaxParameter is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeePayrollTaxParametersList(true isValidateOnly, EmployeePayrollTaxParameter[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeePayrollTaxParametersList`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH Tax Parameter for an employee.\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - EmployeePayrollTaxParameter is created, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeePayrollTaxParametersList(true isValidateOnly, EmployeePayrollTaxParameter[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeePayrollTaxParametersList`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET a List of Employee pay summaries\n    #\n    # + filterPaySummaryStartDate - Inclusive period start date in UTC to determine which employee pay summary data to retrieve. Example: 2017-01-01T00:00:00\n    # + filterPaySummaryEndDate - Inclusive period end date in UTC to determine which employee pay summary data to retrieve. Example: 2017-01-01T00:00:00\n    # + employeeXRefCode - The unique identifier (external reference code) of the employee to be retrieved. The value provided must be the exact match for an employee\n    # + locationXRefCode - The unique identifier (external reference code) of the location to be retrieved. The value provided must be the exact match for a location\n    # + payGroupXRefCode - The unique identifier (external reference code) of the position to be retrieved. The value provided must be the exact match for a position\n    # + payCategoryXRefCode - The unique identifier (external reference code) of the payCatergory to be retrieved. The value provided must be the exact match for a payCatergory\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of EmployeePaySummary data meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/EmployeePaySummaries(string filterPaySummaryStartDate, string filterPaySummaryEndDate, string? employeeXRefCode \u003d (), string? locationXRefCode \u003d (), string? payGroupXRefCode \u003d (), string? payCategoryXRefCode \u003d ()) returns PaginatedPayload_IEnumerable_EmployeePaySummary|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeePaySummaries`;\n        map\u003canydata\u003e queryParam \u003d {\"filterPaySummaryStartDate\": filterPaySummaryStartDate, \"filterPaySummaryEndDate\": filterPaySummaryEndDate, \"employeeXRefCode\": employeeXRefCode, \"locationXRefCode\": locationXRefCode, \"payGroupXRefCode\": payGroupXRefCode, \"payCategoryXRefCode\": payCategoryXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_EmployeePaySummary response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET a List of Employee pay summaries retro\n    #\n    # + payGroupXRefCode - The unique identifier (external reference code) of the pay group to be retrieved. The value provided must be the exact match for a pay group.\n    # + periodStartDate - The start date of the pay calendar to be retrieved. The value provided must be the exact match for an effective start of a pay calendar.\n    # + periodEndDate - The end date of the pay calendar to be retrieved. The value provided must be the exact match for an effective end of a pay calendar.\n    # + payDate - The pay date of the pay calendar to be retrieved. The value provided must be the exact match for a pay date of a pay calendar.\n    # + employeeXRefCode - The unique identifier (external reference code) of the employee to be retrieved. The value provided must be the exact match for an employee.\n    # + locationXRefCode - The unique identifier (external reference code) of the location to be retrieved. The value provided must be the exact match for a location.\n    # + payCategoryXRefCode - The unique identifier (external reference code) of the payCategory to be retrieved. The value provided must be the exact match for a payCategory.\n    # + onlyRetros - Filters only Retro Employee Pay Summaries (defaults to false).\n    # + payExportId - The unique identifier of the Pay export data to be retrieved. The value provided must be the exact match for a Pay export.\n    # + pageSize - Number of records to be loaded (defaults to a 1000 records).\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of EmployeePaySummary retro data meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/EmployeePaySummariesRetro(string payGroupXRefCode, string? periodStartDate \u003d (), string? periodEndDate \u003d (), string? payDate \u003d (), string? employeeXRefCode \u003d (), string? locationXRefCode \u003d (), string? payCategoryXRefCode \u003d (), boolean? onlyRetros \u003d (), int? payExportId \u003d (), int:Signed32? pageSize \u003d ()) returns PaginatedPayload_IEnumerable_EmployeePaySummaryRetro|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeePaySummariesRetro`;\n        map\u003canydata\u003e queryParam \u003d {\"payGroupXRefCode\": payGroupXRefCode, \"periodStartDate\": periodStartDate, \"periodEndDate\": periodEndDate, \"payDate\": payDate, \"employeeXRefCode\": employeeXRefCode, \"locationXRefCode\": locationXRefCode, \"payCategoryXRefCode\": payCategoryXRefCode, \"onlyRetros\": onlyRetros, \"payExportId\": payExportId, \"pageSize\": pageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_EmployeePaySummaryRetro response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET EmployeePerformanceRating Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeePerformanceRating with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/PerformanceRatings() returns Payload_IEnumerable_EmployeePerformanceRating|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/PerformanceRatings`;\n        Payload_IEnumerable_EmployeePerformanceRating response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An Employee Performance Rating is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/PerformanceRatings(true isValidateOnly, EmployeePerformanceRating payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/PerformanceRatings`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An Employee Performance Rating is created, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/PerformanceRatings(true isValidateOnly, EmployeePerformanceRating payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/PerformanceRatings`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeePropertyValue Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeePropertyValue with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeProperties(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeePropertyValue|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeProperties`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeePropertyValue response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeePropertyValue\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeProperties(true isValidateOnly, EmployeePropertyValue payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeProperties`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeePropertyValue\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeePropertyValue is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeProperties(true isValidateOnly, EmployeePropertyValue payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeProperties`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET a List of Employee Punches\n    #\n    # + filterTransactionStartTimeUTC - Inclusive transaction period start date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00\n    # + filterTransactionEndTimeUTC - Inclusive transaction period end date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00\n    # + employeeXRefCode - The unique identifier (external reference code) of the employee to be retrieved. The value provided must be the exact match for an employee\n    # + locationXRefCode - A case-sensitive field that identifies a location or organizational units\n    # + positionXRefCode - A case-sensitive field that identifies one or more Positions\n    # + departmentXRefCode - A case-sensitive field that identifies one or more Departments\n    # + jobXRefCode - A case-sensitive field that identifies one or more Jobs\n    # + docketXRefCode - A case-sensitive field that identifies one or more dockets\n    # + projectXRefCode - A case-sensitive field that identifies one or more projects\n    # + payAdjustmentXRefCode - A case-sensitive field that identifies one or more pay adjustment\n    # + shiftStatus - A case-sensitive field containing shift status groups. Examples: [ACTIVE, COMPLETED, PROBLEM, ALL]\n    # + filterShiftTimeStart - Use with FilterTransactionStartTimeUTC to search for shifts with a Start and end time in a given timeframe. Example: Used to include or exclude edits made to historical punches\n    # + filterShiftTimeEnd - Use with FilterTransactionEndTimeUTC to search for shifts with a Start and end time in a given timeframe. Example: Used to include or exclude edits made to historical\n    # + businessDate - The Business Date value is intended as a “Timesheet View” to return punch data related to a clients Business day parameter configuration. Example: 2017-01-01T00:00:00\n    # + pageSize - The number of records returned per page in the paginated response\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of EmployeePunch data meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/EmployeePunches(string filterTransactionStartTimeUTC, string filterTransactionEndTimeUTC, string? employeeXRefCode \u003d (), string? locationXRefCode \u003d (), string? positionXRefCode \u003d (), string? departmentXRefCode \u003d (), string? jobXRefCode \u003d (), string? docketXRefCode \u003d (), string? projectXRefCode \u003d (), string? payAdjustmentXRefCode \u003d (), string? shiftStatus \u003d (), string? filterShiftTimeStart \u003d (), string? filterShiftTimeEnd \u003d (), string? businessDate \u003d (), int:Signed32? pageSize \u003d ()) returns PaginatedPayload_IEnumerable_EmployeePunch|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeePunches`;\n        map\u003canydata\u003e queryParam \u003d {\"filterTransactionStartTimeUTC\": filterTransactionStartTimeUTC, \"filterTransactionEndTimeUTC\": filterTransactionEndTimeUTC, \"employeeXRefCode\": employeeXRefCode, \"locationXRefCode\": locationXRefCode, \"positionXRefCode\": positionXRefCode, \"departmentXRefCode\": departmentXRefCode, \"jobXRefCode\": jobXRefCode, \"docketXRefCode\": docketXRefCode, \"projectXRefCode\": projectXRefCode, \"payAdjustmentXRefCode\": payAdjustmentXRefCode, \"shiftStatus\": shiftStatus, \"filterShiftTimeStart\": filterShiftTimeStart, \"filterShiftTimeEnd\": filterShiftTimeEnd, \"businessDate\": businessDate, \"pageSize\": pageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_EmployeePunch response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - EmployeePunch details which matches XRefCode were Deleted. \n    resource isolated function delete [string clientNamespace]/V1/EmployeePunches(string employeePunchXRefCode) returns Payload_EmployeePunchPatchPostDeleteResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeePunches`;\n        map\u003canydata\u003e queryParam \u003d {\"employeePunchXRefCode\": employeePunchXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_EmployeePunchPatchPostDeleteResponse response \u003d check self.clientEp-\u003edelete(resourcePath);\n        return response;\n    }\n    # GET a List of Employee Raw Punches\n    #\n    # + filterTransactionStartTimeUTC - Inclusive transaction period start date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00\n    # + filterTransactionEndTimeUTC - Inclusive transaction period end date in UTC to determine which employee punch data to retrieve. Example: 2017-01-01T00:00:00\n    # + employeeXRefCode - The unique identifier (external reference code) of the employee to be retrieved. The value provided must be the exact match for an employee\n    # + employeeBadge - The badge number of the employee to be retrieved. The value provided must be the exact match for a badge\n    # + punchState - The state of the punch. Examples: [PROCESSED, REJECTED, ALL]\n    # + punchTypes - Comma separated values of punch types. Example: [Punch_In, Break_Out, Job_Transfer, ALL, etc]\n    # + pageSize - The number of records returned per page in the paginated response\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of EmployeePunch data meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/EmployeeRawPunches(string filterTransactionStartTimeUTC, string filterTransactionEndTimeUTC, string? employeeXRefCode \u003d (), string? employeeBadge \u003d (), string? punchState \u003d (), string? punchTypes \u003d (), int:Signed32? pageSize \u003d ()) returns PaginatedPayload_IEnumerable_EmployeeRawPunch|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeRawPunches`;\n        map\u003canydata\u003e queryParam \u003d {\"filterTransactionStartTimeUTC\": filterTransactionStartTimeUTC, \"filterTransactionEndTimeUTC\": filterTransactionEndTimeUTC, \"employeeXRefCode\": employeeXRefCode, \"employeeBadge\": employeeBadge, \"punchState\": punchState, \"punchTypes\": punchTypes, \"pageSize\": pageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_EmployeeRawPunch response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Create) Employee Raw Punch\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A raw punch is created. \n    resource isolated function post [string clientNamespace]/V1/EmployeeRawPunches(true isValidateOnly, EmployeeRawPunchForSubmit payload) returns PaginatedPayload_IEnumerable_EmployeeRawPunch|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeRawPunches`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        PaginatedPayload_IEnumerable_EmployeeRawPunch response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeRole Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeRole with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Roles(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeRole|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Roles`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeRole response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeRole\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/Roles(true isValidateOnly, EmployeeRole payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Roles`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeRole\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeRole is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/Roles(true isValidateOnly, EmployeeRole payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Roles`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET a List of Employees\n    #\n    # + employeeNumber - Employment identification number assigned to an employee.  A partial value can be provided for a wider search.\n    # + displayName - Employee Name. A partial value can be provided for a wider search.\n    # + socialSecurityNumber - Social Security Number of the employee. A partial value can be provided for a wider search.\n    # + employmentStatusXRefCode - Employment status xrefcode, which can be client-specific. Use this to search employees having the given employment status. Use a ContextDate value to search for employees with a given status as of a point in time. Otherwise, the search will use the current date and time.\n    # + orgUnitXRefCode - Organizational units\u0027 xrefcode. Use this to search all levels of the employees’ organization including department, location, region, corporate, etc. Use a ContextDate value to search for employees with a specific value as of a point in time.  Otherwise, the search will use the current date and time.\n    # + departmentXRefCode - Department xrefcode value, which can be client-specific. Use this to search employees\u0027 work assignments having the given department.Use a ContextDate value to search for employees with a given department as of a point in time. Otherwise, the search will use the current date and time.\n    # + jobXRefCode - Job xrefcode value, which can be client-specific. Use this to search employees\u0027 work assignments having the given job. Use a ContextDate value to search for employees with a given job as of a point in time. Otherwise, the search will use the current date and time.\n    # + positionXRefCode - Position xrefcode value, which can be client-specific. Use this to search employees\u0027 work assignments having the given position. Use a ContextDate value to search for employees with a given position as of a point in time. Otherwise, the search will use the current date and time.\n    # + payClassXRefCode - Pay class xrefcode value, which can be client-specific. Use this to search employees having the given pay class. Use a ContextDate value to search for employees with a given pay class as of a point in time. Otherwise, the search will use the current date and time.\n    # + payGroupXRefCode - Pay group xrefcode value, which can be client-specific. Use this to search employees having the given pay group. Use a ContextDate value to search for employees with a given pay group as of a point in time. Otherwise, the search will use the current date and time.\n    # + payPolicyXRefCode - Pay policy xrefcode value, which can be client-specific. Use this to search employees having the given pay policy. Use a ContextDate value to search for employees with a given pay policy as of a point in time. Otherwise, the search will use the current date and time.\n    # + payTypeXRefCode - Pay type xrefcode value, which can be client-specific. Use this to search employees having the given pay type. Use a ContextDate value to search for employees with a given pay type as of a point in time. Otherwise, the search will use the current date and time.\n    # + payrollPolicyXRefCode - Payroll policy xrefcode value, which can be client-specific. Use this to search employees having the given payroll policy. Use a ContextDate value to search for employees with a given payroll policy as of a point in time. Otherwise, the search will use the current date and time.\n    # + filterHireStartDate - Use to search for employees whose most recent hire date is greater than or equal to the specified value (e.g. 2017-01-01T13:24:56). Use with filterHireEndDate to search for employees hired or rehired in a given timeframe.\n    # + filterHireEndDate - Use to search for employees whose most recent hire date is less than or equal to the specified value. Typically this parameter is used in conjunction with FilterHireStartDate to search for employees hired or rehired in a given timeframe. Example: 2017-01-01T13:24:56\n    # + filterTerminationStartDate - Use to search for employees with termination date values greater than or equal to the specified value. Typically this parameter is used in conjunction with FilterTerminationStartDate to search for employees terminated in a given timeframe. Example: 2017-01-01T13:24:56\n    # + filterTerminationEndDate - Use to search for employees with termination date values less than or equal to the specified value. Typically this parameter is used in conjunction with filterTerminationStartDate to search for employees terminated in a given timeframe. Example: 2017-01-01T13:24:56\n    # + filterUpdatedStartDate - The beginning date used when searching for employees with updates (and newly effective records) in a specified timeframe. When a value is provided for this parameter, a filterUpdatedEndDate value must also be provided. Because this search is conducted across all entities in the HR data model regardless of whether the requesting user has access to them, it is possible that the query will return XRefCode of employees with changes in which the consuming application is not interested.  Example: 2017-01-01T13:24:56\n    # + filterUpdatedEndDate - The end date used when searching for employees with updates (and newly effective records) in a specified timeframe. When a value is provided for this parameter, a filterUpdatedStartDate value must also be provided.   Example: 2017-01-01T13:24:56\n    # + filterUpdatedEntities - Use to search employees with changes to specific employee sub-entities. These sub-entity names, based on the employee model, can be provided in a comma-separated value, e.g. filterUpdatedEntities\u003dEmploymentStatuses,WorkAssignments,Addresses. The base Employee is always searched by default. This parameter requires that filterUpdatedStartDate/filterUpdatedEndDate range is provided, otherwise it is ignored and all relevant employee entities are searched.\n    # + filterOriginalHireStartDate - Use to search for employees with original hire date values greater than or equal to the specified value. Typically this parameter is used in conjunction with filterOriginialHireEndDate to search for employees who were originally hired in a given timeframe. Example: 2017-01-01T13:24:56\n    # + filterOriginalHireEndDate - Use to search for employees with original hire date values less than or equal to the specified value. Typically this parameter is used in conjunction with filterOriginialHireStartDate to search for employees who were originally hired in a given timeframe. Example: 2017-01-01T13:24:56\n    # + filterSeniorityStartDate - Use to search for employees with seniority date values greater than or equal to the specified value. Typically this parameter is used in conjunction with filterSeniorityEndDate to search for employees seniority date in a given timeframe. Example: 2017-01-01T13:24:56\n    # + filterSeniorityEndDate - Use to search for employees with original hire date values less than or equal to the specified value. Typically this parameter is used in conjunction with filterSeniorityStartDate to search for employees seniority date in a given timeframe. Example: 2017-01-01T13:24:56\n    # + filterBaseSalaryFrom - Use to search for employees base salary greater than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseSalaryTo to search for employees base salary in a given range. Example: 20000\n    # + filterBaseSalaryTo - Use to search for employees base salary less than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseSalaryFrom to search for employees base salary in a given range. Example: 40000\n    # + filterBaseRateFrom - Use to search for employees base rate greater than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseRateTo to search for employees base rate in a given range. Example: 10\n    # + filterBaseRateTo - Use to search for employees base rate less than or equal to the specified value. Typically this parameter is used in conjunction with filterBaseRateFrom to search for employees base rate in a given range. Example: 40\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of Employees XRefCodes meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/Employees(string? employeeNumber \u003d (), string? displayName \u003d (), string? socialSecurityNumber \u003d (), string? employmentStatusXRefCode \u003d (), string? orgUnitXRefCode \u003d (), string? departmentXRefCode \u003d (), string? jobXRefCode \u003d (), string? positionXRefCode \u003d (), string? payClassXRefCode \u003d (), string? payGroupXRefCode \u003d (), string? payPolicyXRefCode \u003d (), string? payTypeXRefCode \u003d (), string? payrollPolicyXRefCode \u003d (), string? filterHireStartDate \u003d (), string? filterHireEndDate \u003d (), string? filterTerminationStartDate \u003d (), string? filterTerminationEndDate \u003d (), string? filterUpdatedStartDate \u003d (), string? filterUpdatedEndDate \u003d (), string? filterUpdatedEntities \u003d (), string? filterOriginalHireStartDate \u003d (), string? filterOriginalHireEndDate \u003d (), string? filterSeniorityStartDate \u003d (), string? filterSeniorityEndDate \u003d (), decimal? filterBaseSalaryFrom \u003d (), decimal? filterBaseSalaryTo \u003d (), decimal? filterBaseRateFrom \u003d (), decimal? filterBaseRateTo \u003d (), string? contextDate \u003d ()) returns Payload_IEnumerable_Employee|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees`;\n        map\u003canydata\u003e queryParam \u003d {\"employeeNumber\": employeeNumber, \"displayName\": displayName, \"socialSecurityNumber\": socialSecurityNumber, \"employmentStatusXRefCode\": employmentStatusXRefCode, \"orgUnitXRefCode\": orgUnitXRefCode, \"departmentXRefCode\": departmentXRefCode, \"jobXRefCode\": jobXRefCode, \"positionXRefCode\": positionXRefCode, \"payClassXRefCode\": payClassXRefCode, \"payGroupXRefCode\": payGroupXRefCode, \"payPolicyXRefCode\": payPolicyXRefCode, \"payTypeXRefCode\": payTypeXRefCode, \"payrollPolicyXRefCode\": payrollPolicyXRefCode, \"filterHireStartDate\": filterHireStartDate, \"filterHireEndDate\": filterHireEndDate, \"filterTerminationStartDate\": filterTerminationStartDate, \"filterTerminationEndDate\": filterTerminationEndDate, \"filterUpdatedStartDate\": filterUpdatedStartDate, \"filterUpdatedEndDate\": filterUpdatedEndDate, \"filterUpdatedEntities\": filterUpdatedEntities, \"filterOriginalHireStartDate\": filterOriginalHireStartDate, \"filterOriginalHireEndDate\": filterOriginalHireEndDate, \"filterSeniorityStartDate\": filterSeniorityStartDate, \"filterSeniorityEndDate\": filterSeniorityEndDate, \"filterBaseSalaryFrom\": filterBaseSalaryFrom, \"filterBaseSalaryTo\": filterBaseSalaryTo, \"filterBaseRateFrom\": filterBaseRateFrom, \"filterBaseRateTo\": filterBaseRateTo, \"contextDate\": contextDate};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_Employee response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Hire) an Employee\n    #\n    # + isValidateOnly - If true, then the POST data is validated without being submitted.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST (hire and rehire ) and PATCH (employee update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees(true isValidateOnly, Employee payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET Employee Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + expand - This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the employee master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document.\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + amfEntity - This parameter is to identify the application object for Application Metadata Framework (AMF) request.\n    # + amfLevel - This parameter is to identify the level for Application Metadata Framework (AMF) request.\n    # + amfLevelValue - This parameter is to identify context specific to amfLevel for Application Metadata Framework (AMF) request.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Employee with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode](string? contextDate \u003d (), string? expand \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d (), string? amfEntity \u003d (), string? amfLevel \u003d (), string? amfLevelValue \u003d ()) returns Payload_Employee|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"expand\": expand, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo, \"amfEntity\": amfEntity, \"amfLevel\": amfLevel, \"amfLevelValue\": amfLevelValue};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_Employee response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # PATCH (Update) an Employee\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + replaceExisting - This parameter accepts a comma-separated list of employee-subordinate entities where the respective data provided will replace all existing records.\n    # It applies to the following collections (which are not effective dated and thus require this special treatment):\n    # \u003clist type\u003d\"bullet\"\u003e\u003citem\u003eClockDeviceGroups, \u003c/item\u003e\u003citem\u003eDirectDeposits, \u003c/item\u003e\u003citem\u003eEmployeePayAdjustCodeGroups, \u003c/item\u003e\u003citem\u003eOrgUnitLocationTypes, \u003c/item\u003e\u003citem\u003eSSOAccounts, \u003c/item\u003e\u003citem\u003eUserPayAdjustCodeGroups\u003c/item\u003e\u003c/list\u003e\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST (hire and rehire ) and PATCH (employee update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The Employee is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode](true isValidateOnly, Employee payload, string? replaceExisting \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly, \"replaceExisting\": replaceExisting};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET List Employee Schedules\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + filterScheduleStartDate - Inclusive period start aligned to the employee business day start date to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56\n    # + filterScheduleEndDate - Exclusive period end aligned to the employee business day start to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56\n    # + isPosted - A flag to determine whether to display posted schedules.By default it searches for published schedules\n    # + expand - This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of employee schedule meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Schedules(string filterScheduleStartDate, string filterScheduleEndDate, boolean? isPosted \u003d (), string? expand \u003d ()) returns Payload_IEnumerable_EmployeeSchedule|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Schedules`;\n        map\u003canydata\u003e queryParam \u003d {\"filterScheduleStartDate\": filterScheduleStartDate, \"filterScheduleEndDate\": filterScheduleEndDate, \"isPosted\": isPosted, \"expand\": expand};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeSchedule response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET List of Employee Schedules\n    #\n    # + filterScheduleStartDate - Inclusive period start aligned to the employee business day start date to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56\n    # + filterScheduleEndDate - Exclusive period end aligned to the employee business day start to determine which employee schedule data to retrieve . Example: 2017-01-01T13:24:56\n    # + employeeXRefCode - Only valid when Unfill \u003d FALSE or not provided\n    # + orgUnitXRefCode - Not required when Unfill \u003d TRUE, Will send all unfilled shifts for the specified date range\n    # + unfill - When a TRUE value is used in this parameter, the API returns all Unfill shifts.\n    # When a FALSE value is used in this parameter, only employee schdules are returned\n    # + expand - This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document.\n    # + pageSize - The number of records returned per page in the paginated response\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of employee schedule meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/EmployeeSchedules(string filterScheduleStartDate, string filterScheduleEndDate, string? employeeXRefCode \u003d (), string? departmentXRefCode \u003d (), string? jobXRefCode \u003d (), string? positionXRefCode \u003d (), string? orgUnitXRefCode \u003d (), boolean? unfill \u003d (), string? expand \u003d (), int:Signed32? pageSize \u003d ()) returns PaginatedPayload_IEnumerable_EmployeeSchedule|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeSchedules`;\n        map\u003canydata\u003e queryParam \u003d {\"filterScheduleStartDate\": filterScheduleStartDate, \"filterScheduleEndDate\": filterScheduleEndDate, \"employeeXRefCode\": employeeXRefCode, \"departmentXRefCode\": departmentXRefCode, \"jobXRefCode\": jobXRefCode, \"positionXRefCode\": positionXRefCode, \"orgUnitXRefCode\": orgUnitXRefCode, \"unfill\": unfill, \"expand\": expand, \"pageSize\": pageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_EmployeeSchedule response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Create) Employee schedule\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - OK response \n    resource isolated function post [string clientNamespace]/V1/EmployeeSchedules(string orgUnitXRefCode, true isValidateOnly, EmployeeSchedulePostAPIRequestDTO[] payload, 0|1|2|3|4? violationLevel \u003d ()) returns Payload_IEnumerable_EmployeeSchedulePostAPIResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeSchedules`;\n        map\u003canydata\u003e queryParam \u003d {\"orgUnitXRefCode\": orgUnitXRefCode, \"isValidateOnly\": isValidateOnly, \"violationLevel\": violationLevel};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_EmployeeSchedulePostAPIResponse response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH (Update) Employee schedule\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, PATCH operation validates the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - OK response \n    resource isolated function patch [string clientNamespace]/V1/EmployeeSchedules(string orgUnitXRefCode, true isValidateOnly, EmployeeSchedulePatchAPIRequestDTO[] payload, 0|1|2|3|4? violationLevel \u003d ()) returns Payload_IEnumerable_EmployeeSchedulePostAPIResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeSchedules`;\n        map\u003canydata\u003e queryParam \u003d {\"orgUnitXRefCode\": orgUnitXRefCode, \"isValidateOnly\": isValidateOnly, \"violationLevel\": violationLevel};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_EmployeeSchedulePostAPIResponse response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeShortTimeWork Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeShortTimeWorkController with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeShortTimeWorks(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeShortTimeWork|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeShortTimeWorks`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeShortTimeWork response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET EmployeeSkill Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeSkill with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Skills(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeSkill|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Skills`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeSkill response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an Employee Skill\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee Skill is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/Skills(true isValidateOnly, EmployeeSkill payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Skills`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH (Update) an Employee Skill\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee Skill is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/Skills(true isValidateOnly, EmployeeSkill payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Skills`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeTrainingProgram Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeTrainingProgram with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/TrainingPrograms() returns Payload_IEnumerable_EmployeeTrainingProgram|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/TrainingPrograms`;\n        Payload_IEnumerable_EmployeeTrainingProgram response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeTrainingProgram\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeTrainingProgram is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/TrainingPrograms(true isValidateOnly, EmployeeTrainingProgram payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/TrainingPrograms`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET an EmployeeUKIrregularPaymentDetails\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUKIrregularPaymentDetail with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/Irregular() returns Payload_IEnumerable_EmployeeUKIrregularPaymentDetails|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/Irregular`;\n        Payload_IEnumerable_EmployeeUKIrregularPaymentDetails response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeUKIrregularPaymentDetails\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeUKIrregularPaymentDetails is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/Irregular(true isValidateOnly, EmployeeUKIrregularPaymentDetails payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/Irregular`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeUKIrregularPaymentDetails\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUKIrregularPaymentDetails is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/Irregular(true isValidateOnly, EmployeeUKIrregularPaymentDetails payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/Irregular`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET Employee NI Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUKNIDetails with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/UKNI/NIInfo() returns Payload_IEnumerable_EmployeeUKNIDetails|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKNI/NIInfo`;\n        Payload_IEnumerable_EmployeeUKNIDetails response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST Employee NI Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Created NI Details for Employee with supplied XRefCode. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/UKNI/NIInfo(true isValidateOnly, EmployeeUKNIDetails payload) returns Payload_IEnumerable_EmployeeUKNIDetails|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKNI/NIInfo`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_EmployeeUKNIDetails response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH Employee NI Details\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUKTaxDetails is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/UKNI/NIInfo(true isValidateOnly, EmployeeUKNIDetails payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKNI/NIInfo`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeUKPostgraduateLoan Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUKPostgraduateLoan with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/PostgraduateLoan(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeUKPostgraduateLoan|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/PostgraduateLoan`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeUKPostgraduateLoan response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeUKPostgraduateLoan\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeUKPostgraduateLoan is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/PostgraduateLoan(true isValidateOnly, EmployeeUKPostgraduateLoan payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/PostgraduateLoan`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeUKPostgraduateLoan\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeUKPostgraduateLoan is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/PostgraduateLoan(true isValidateOnly, EmployeeUKPostgraduateLoan payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/PostgraduateLoan`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeUKStudentLoan Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUKStudentLoan with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/StudentLoan(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeUKStudentLoan|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/StudentLoan`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeUKStudentLoan response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeUKStudentLoan\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeUKStudentLoan is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/StudentLoan(true isValidateOnly, EmployeeUKStudentLoan payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/StudentLoan`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeUKStudentLoan\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeUKStudentLoan is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/StudentLoan(true isValidateOnly, EmployeeUKStudentLoan payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/StudentLoan`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeUKTaxDetails Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUKTaxDetails with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/TaxInfo() returns Payload_IEnumerable_EmployeeUKTaxDetails|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/TaxInfo`;\n        Payload_IEnumerable_EmployeeUKTaxDetails response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeUKTaxDetails\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeUKTaxDetails is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/TaxInfo(true isValidateOnly, EmployeeUKTaxDetails payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/TaxInfo`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeUKTaxDetails\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeUKTaxDetails is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/UKTax/TaxInfo(true isValidateOnly, EmployeeUKTaxDetails payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UKTax/TaxInfo`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeUnion Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUnion with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/UnionMemberships(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeUnionMembership|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UnionMemberships`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeUnionMembership response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeUnion\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A EmployeeUnion is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/UnionMemberships(true isValidateOnly, EmployeeUnionMembership payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UnionMemberships`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeUnion\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUnion is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/UnionMemberships(true isValidateOnly, EmployeeUnionMembership payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UnionMemberships`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeUSFederalTax Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUSFederalTax with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/USFederalTaxes(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeUSFederalTax|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/USFederalTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeUSFederalTax response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeUSFederalTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeUSFederalTax is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/USFederalTaxes(true isValidateOnly, EmployeeUSFederalTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/USFederalTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeUSFederalTax\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeUSFederalTax is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/USFederalTaxes(true isValidateOnly, EmployeeUSFederalTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/USFederalTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeUSStateTax Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUSStateTax with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/USStateTaxes(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeUSStateTax|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/USStateTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeUSStateTax response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST EmployeeUSStateTax Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A EmployeeUSStateTax Detail is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/USStateTaxes(true isValidateOnly, EmployeeUSStateTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/USStateTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH EmployeeUSStateTax Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeUSStateTax Detail is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/USStateTaxes(true isValidateOnly, EmployeeUSStateTax payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/USStateTaxes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeUSTaxStatus Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeUSTaxStatus with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/USTaxStatuses(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeUSTaxStatus|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/USTaxStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeUSTaxStatus response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST EmployeeUSTaxStatus Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A EmployeeUSTaxStatus Detail is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/USTaxStatuses(true isValidateOnly, EmployeeUSTaxStatus payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/USTaxStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH EmployeeUSTaxStatus Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeUSTaxStatus Detail is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/USTaxStatuses(true isValidateOnly, EmployeeUSTaxStatus payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/USTaxStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET Verification of Employment (VOE) for a specific employee.\n    #\n    # + countryCode - Employee\u0027s Country Code.\n    # + employeeXRefCode - The unique identifier (external reference code) of the employee.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeePayrollTax with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/EmployeeVOE/[string countryCode]/[string employeeXRefCode]() returns Payload_EmployeeVOE|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeVOE/${getEncodedUri(countryCode)}/${getEncodedUri(employeeXRefCode)}`;\n        Payload_EmployeeVOE response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Verification of Income (VOI) for a specific employee.\n    #\n    # + countryCode - Employee\u0027s Country Code.\n    # + employeeXRefCode - The unique identifier (external reference code) of the employee.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeePayrollTax with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/EmployeeVOI/[string countryCode]/[string employeeXRefCode]() returns Payload_EmployeeVOI|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmployeeVOI/${getEncodedUri(countryCode)}/${getEncodedUri(employeeXRefCode)}`;\n        Payload_EmployeeVOI response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET EmployeeVeteransStatus Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeVeteransStatusController with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/VeteranStatuses(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeVeteransStatus|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/VeteranStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeVeteransStatus response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeVeteransStatus\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A EmployeeVeteransStatus is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/VeteranStatuses(true isValidateOnly, EmployeeVeteransStatus payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/VeteranStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeVeteransStatus\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeVeteransStatus is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/VeteranStatuses(true isValidateOnly, EmployeeVeteransStatus payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/VeteranStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET Employee\u0027s Volunteer List Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The  EmployeeVolunteerList for the requested employee XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/VolunteerLists(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeVolunteerList|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/VolunteerLists`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeVolunteerList response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST an EmployeeVolunteerList\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A EmployeeVolunteerList is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/VolunteerLists(true isValidateOnly, EmployeeVolunteerList payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/VolunteerLists`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH an EmployeeVolunteerList\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A EmployeeVolunteerList is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/VolunteerLists(true isValidateOnly, EmployeeVolunteerList payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/VolunteerLists`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeWorkAssignmentManager Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeWorkAssignmentManager with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeWorkAssignmentManagers(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeWorkAssignmentManager|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeWorkAssignmentManagers`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeWorkAssignmentManager response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeWorkAssignmentManager\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeWorkAssignmentManager is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeWorkAssignmentManagers(true isValidateOnly, EmployeeWorkAssignmentManager payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeWorkAssignmentManagers`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeWorkAssignmentManager\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeWorkAssignmentManager is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeWorkAssignmentManagers(true isValidateOnly, EmployeeWorkAssignmentManager payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeWorkAssignmentManagers`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Replace EmployeeWorkAssignmentManagers\n    #\n    # + xRefCode - The unique identifier (external reference code) of the Employee for whom the subordinate data will be replaced.\n    # The value provided must be the exact match for an Employee; otherwise, a bad request (400) error will be returned.\n    # + replaceFrom - The date from which all EmployeeWorkAssignmentManagers will be replaced.\n    # + replaceTo - The date up to which all EmployeeWorkAssignmentManagers will be replaced.\n    # + isValidateOnly - When a TRUE value is used in this parameter, validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The new JSON-formatted EmployeeWorkAssignmentManager with which to replace the deleted ones.\n    # + return - The Employee\u0027s Work Assignment Managers are replaced within the given date range; no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/EmployeeWorkAssignmentManagers/Replacement(true isValidateOnly, EmployeeWorkAssignmentManager payload, string? replaceFrom \u003d (), string? replaceTo \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/EmployeeWorkAssignmentManagers/Replacement`;\n        map\u003canydata\u003e queryParam \u003d {\"replaceFrom\": replaceFrom, \"replaceTo\": replaceTo, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET WorkAssignment Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Work Assignments of employee with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/WorkAssignments(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeWorkAssignment|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/WorkAssignments`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeWorkAssignment response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a WorkAssignment\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - An EmployeeWorkAssignment is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/WorkAssignments(true isValidateOnly, EmployeeWorkAssignment payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/WorkAssignments`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a Work Assignment\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The Work Assignment is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/WorkAssignments(true isValidateOnly, EmployeeWorkAssignment payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/WorkAssignments`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Replace WorkAssignments\n    #\n    # + xRefCode - The unique identifier (external reference code) of the Employee for whom the subordinate data will be replaced.\n    # The value provided must be the exact match for an Employee; otherwise, a bad request (400) error will be returned.\n    # + replaceFrom - The date from which all WorkAssignments will be replaced.\n    # + replaceTo - The date up to which all WorkAssignments will be replaced.\n    # + isValidateOnly - When a TRUE value is used in this parameter, validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The new JSON-formatted WorkAssignment with which to replace the deleted ones.\n    # + return - The Employee\u0027s Work Assignments are replaced within the given date range; no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/WorkAssignments/Replacement(true isValidateOnly, EmployeeWorkAssignment payload, string? replaceFrom \u003d (), string? replaceTo \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/WorkAssignments/Replacement`;\n        map\u003canydata\u003e queryParam \u003d {\"replaceFrom\": replaceFrom, \"replaceTo\": replaceTo, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET List of work location overrides.\n    #\n    # + workLocationOverrideXRefCodes - The comma delimited list of work location overrides XRef codes.\n    # + locationAddressStateCodes - The comma delimited list of location address state codes.\n    # + legalEntityXRefCode - The legal entity XRef code.\n    # + legalEntityOverrideDetails - Filter to fetch all or current/future effective legal entity overrides. Value can be All or Active. Default value is Active.\n    # + pageSize - Number of records to be loaded.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Work location overrides. \n    resource isolated function get [string clientNamespace]/V1/Payroll/WorkLocationOverride(string? workLocationOverrideXRefCodes \u003d (), string? locationAddressStateCodes \u003d (), string? legalEntityXRefCode \u003d (), string? legalEntityOverrideDetails \u003d (), int:Signed32? pageSize \u003d ()) returns PaginatedPayload_IEnumerable_EmployeeWorkLocationOverride|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/WorkLocationOverride`;\n        map\u003canydata\u003e queryParam \u003d {\"workLocationOverrideXRefCodes\": workLocationOverrideXRefCodes, \"locationAddressStateCodes\": locationAddressStateCodes, \"legalEntityXRefCode\": legalEntityXRefCode, \"legalEntityOverrideDetails\": legalEntityOverrideDetails, \"pageSize\": pageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_EmployeeWorkLocationOverride response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST Employee Elections\n    #\n    # + isValidateOnly - If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - OK response \n    resource isolated function post [string clientNamespace]/v1/Payroll/WorkLocationOverrides(true isValidateOnly, EmployeeWorkLocationOverride[] payload) returns Payload_IEnumerable_EmployeeWorkLocationOverride|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/v1/Payroll/WorkLocationOverrides`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_EmployeeWorkLocationOverride response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH Employee Elections\n    #\n    # + isValidateOnly - If TRUE, PATCH operations validate the request without queue the import. The default value is FALSE. Note, PATCH operation will only validate data structure.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - OK response \n    resource isolated function patch [string clientNamespace]/v1/Payroll/WorkLocationOverrides(true isValidateOnly, EmployeeWorkLocationOverride[] payload) returns Payload_IEnumerable_EmployeeWorkLocationOverride|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/v1/Payroll/WorkLocationOverrides`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_EmployeeWorkLocationOverride response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET a List of EmploymentStatus XRefCodes\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of EmploymentStatus XRefCodes. \n    resource isolated function get [string clientNamespace]/V1/EmploymentStatuses() returns Payload_IEnumerable_EmploymentStatus|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmploymentStatuses`;\n        Payload_IEnumerable_EmploymentStatus response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET a EmploymentStatus with the requested XRefCode.\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmploymentStatus with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/EmploymentStatuses/[string xrefCode]() returns Payload_EmploymentStatus|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmploymentStatuses/${getEncodedUri(xrefCode)}`;\n        Payload_EmploymentStatus response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET a List of EmploymentStatusReason XRefCodes\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of EmploymentStatusReason XRefCodes. \n    resource isolated function get [string clientNamespace]/V1/EmploymentStatusReasons() returns Payload_IEnumerable_EmploymentStatusReason|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmploymentStatusReasons`;\n        Payload_IEnumerable_EmploymentStatusReason response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET a EmploymentStatusReason with the requested XRefCode.\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmploymentStatusReason with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/EmploymentStatusReasons/[string xrefCode]() returns Payload_EmploymentStatusReason|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/EmploymentStatusReasons/${getEncodedUri(xrefCode)}`;\n        Payload_EmploymentStatusReason response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST e-signature order status.\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Returns a HTTP OK response indicating the acceptance of e-signature order status. \n    resource isolated function post [string clientNamespace]/V1/ESignatureOrder(record {}[] payload) returns xml|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ESignatureOrder`;\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        xml response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET The list of regional property.\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The ExtensibleProperty with the requested TypeCode,EntityType,CountryCode,EntityXrefCode. \n    resource isolated function get [string clientNamespace]/V1/ExtensibleProperty/[string typeCode]/[string entityType]/[string countryCode]/[string entityXRefCode](string elementXRefCode, string activeAll) returns Payload_IEnumerable_ExtensibleProperty|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ExtensibleProperty/${getEncodedUri(typeCode)}/${getEncodedUri(entityType)}/${getEncodedUri(countryCode)}/${getEncodedUri(entityXRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"elementXRefCode\": elementXRefCode, \"activeAll\": activeAll};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_ExtensibleProperty response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Create) Extensible Property\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The ExtensibleProperty with the requested TypeCode,EntityType,CountryCode,EntityXrefCode. \n    resource isolated function post [string clientNamespace]/V1/ExtensibleProperty/[string typeCode]/[string entityType]/[string countryCode]/[string entityXRefCode](true isValidateOnly, ExtensibleProperty[] payload) returns ExtensibleProperty[]|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ExtensibleProperty/${getEncodedUri(typeCode)}/${getEncodedUri(entityType)}/${getEncodedUri(countryCode)}/${getEncodedUri(entityXRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        ExtensibleProperty[] response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The ExtensibleProperty with the requested EntityXrefCode. \n    resource isolated function post [string clientNamespace]/V1/ExtensibleProperty/Remove/[string typeCode]/[string entityType]/[string countryCode]/[string entityXRefCode](true isValidateOnly) returns ExtensibleProperty|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ExtensibleProperty/Remove/${getEncodedUri(typeCode)}/${getEncodedUri(entityType)}/${getEncodedUri(countryCode)}/${getEncodedUri(entityXRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        ExtensibleProperty response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # POST Global Pay Run/s Details\n    #\n    # + isValidateOnly - If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A Global Pay Run is created with an empty response body. \n    resource isolated function post [string clientNamespace]/V1/GLOBALPayRunImport(true isValidateOnly) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/GLOBALPayRunImport`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH (Update) an I-9 order\n    #\n    # + i9OrderId - The unique identifier for the I-9 order on the I-9 partner\u0027s system. The value of this parameter needs to match the value for the I9OrderId property in the request body.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - Details about the I-9 order to update.\n    # + return - The I-9 order is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/I9Orders/[string i9OrderId](true isValidateOnly, I9Order payload) returns xml|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/I9Orders/${getEncodedUri(i9OrderId)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        xml response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET Job Feeds\n    #\n    # + companyName - Company name. Example: XYZ Co.\n    # + parentCompanyName - Parent Company name. Example: Ceridian\n    # + internalJobBoardCode - XRefCode of Job Board. Example: CANDIDATEPORTAL\n    # + includeActivePostingOnly - If true, then exclude inactive postings from the result. If False, then the \u0027Last Update Time From\u0027 and \u0027Last Update Time To\u0027 parameters are required and the range specified between the \u0027Last Update Time From\u0027 and \u0027Last Update Time To\u0027 parameters must not be larger than 1 month. Example: True\n    # + lastUpdateTimeFrom - A starting timestamp of last updated job posting. Example: 2017-01-01T13:24:56\n    # + lastUpdateTimeTo - An ending timestamp of last updated job posting. Example: 2017-02-01T13:24:56\n    # + datePostedFrom - A starting timestamp of job posting date. Example: 2017-01-01T13:24:56\n    # + datePostedTo - An ending timestamp of job posting date. Example: 2017-02-01T13:24:56\n    # + htmlDescription - A flag to feed the jobs over with html formatting or plain text description\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of all active external job postings (i.e. public facing job postings) based on specified filter parameters. \n    resource isolated function get [string clientNamespace]/V1/JobFeeds(string? companyName \u003d (), string? parentCompanyName \u003d (), string? internalJobBoardCode \u003d (), boolean? includeActivePostingOnly \u003d (), string? lastUpdateTimeFrom \u003d (), string? lastUpdateTimeTo \u003d (), string? datePostedFrom \u003d (), string? datePostedTo \u003d (), boolean? htmlDescription \u003d ()) returns JobFeed[]|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/JobFeeds`;\n        map\u003canydata\u003e queryParam \u003d {\"companyName\": companyName, \"parentCompanyName\": parentCompanyName, \"internalJobBoardCode\": internalJobBoardCode, \"includeActivePostingOnly\": includeActivePostingOnly, \"lastUpdateTimeFrom\": lastUpdateTimeFrom, \"lastUpdateTimeTo\": lastUpdateTimeTo, \"datePostedFrom\": datePostedFrom, \"datePostedTo\": datePostedTo, \"htmlDescription\": htmlDescription};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        JobFeed[] response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET a List of Jobs\n    #\n    # + contextDate - The Context Date value is an “as-of” date used to determine which job data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of Job XRefCodes meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/Jobs(string? contextDate \u003d ()) returns Payload_IEnumerable_Job|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Jobs`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_Job response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Add) a Job\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, PATCH (job update) operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH (job update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A Job is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Jobs(true isValidateOnly, Job payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Jobs`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET a List of Jobs\n    #\n    # + xrefCode - The unique identifier (external reference code) of the job to be retrieved.  The value provided must be the exact match for a job; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Job with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Jobs/[string xrefCode]() returns Payload_Job|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Jobs/${getEncodedUri(xrefCode)}`;\n        Payload_Job response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # PATCH (Update) a Job\n    #\n    # + xRefCode - The unique identifier (external reference code) of the job to be retrieved.  The value provided must be the exact match for a job; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, PATCH (job update) operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH (job update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A Job is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Jobs/[string xRefCode](true isValidateOnly, Job payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Jobs/${getEncodedUri(xRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get KPI Data matching search criteria\r\n    # (if neither Zone or MDSE supplied the data is assumed to be organization-wide)\n    #\n    # + orgUnitXRefCode - Org unit reference code\n    # + kpiXRefCode - KPI reference Code\n    # + kpiDataType - KPI data type - Enter values for either actual, plan or forecast\n    # + timePeriod - KPI time period - Enter values for either minute, day or week\n    # + filterFrom - Start date of filter range\n    # + filterTo - End date of filter range\n    # + zoneXRefCode - Zone reference code\n    # + mdseXRefCode - MDSE reference code\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - KPI Data which matches the supplied parameters \n    resource isolated function get [string clientNamespace]/V1/KpiData(string orgUnitXRefCode, string kpiXRefCode, string kpiDataType, string timePeriod, string filterFrom, string filterTo, string? zoneXRefCode \u003d (), string? mdseXRefCode \u003d ()) returns Payload_IEnumerable_KpiData|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/KpiData`;\n        map\u003canydata\u003e queryParam \u003d {\"orgUnitXRefCode\": orgUnitXRefCode, \"kpiXRefCode\": kpiXRefCode, \"kpiDataType\": kpiDataType, \"timePeriod\": timePeriod, \"filterFrom\": filterFrom, \"filterTo\": filterTo, \"zoneXRefCode\": zoneXRefCode, \"mdseXRefCode\": mdseXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_KpiData response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Post KPI Data for the supplied parameters\n    #\n    # + orgUnitXRefCode - Org unit reference code\n    # + kpiXRefCode - KPI reference code\n    # + kpiDataType - KPI data type - Enter values for either actual, plan or forecast\n    # + timePeriod - KPI time period - Enter values for either minute, day or week\n    # + aggregateToDay - Aggregate to day will be set to true by default. This will aggregate data from minute to day\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The KPI Data has been created \n    resource isolated function post [string clientNamespace]/V1/KpiData(string orgUnitXRefCode, string kpiXRefCode, string kpiDataType, string timePeriod, true isValidateOnly, KpiData[] payload, boolean? aggregateToDay \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/KpiData`;\n        map\u003canydata\u003e queryParam \u003d {\"orgUnitXRefCode\": orgUnitXRefCode, \"kpiXRefCode\": kpiXRefCode, \"kpiDataType\": kpiDataType, \"timePeriod\": timePeriod, \"AggregateToDay\": aggregateToDay, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Patch KPI Data for the supplied parameters\n    #\n    # + orgUnitXRefCode - Org unit reference code\n    # + kpiXRefCode - KPI reference code\n    # + kpiDataType - KPI data type - Enter values for either actual, plan or forecast\n    # + timePeriod - KPI time period - Enter values for either minute, day or week\n    # + aggregateToDay - Aggregate to day will be set to true by default. This will aggregate data from minute to day\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The KPI Data has been updated \n    resource isolated function patch [string clientNamespace]/V1/KpiData(string orgUnitXRefCode, string kpiXRefCode, string kpiDataType, string timePeriod, true isValidateOnly, KpiData[] payload, boolean? aggregateToDay \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/KpiData`;\n        map\u003canydata\u003e queryParam \u003d {\"orgUnitXRefCode\": orgUnitXRefCode, \"kpiXRefCode\": kpiXRefCode, \"kpiDataType\": kpiDataType, \"timePeriod\": timePeriod, \"AggregateToDay\": aggregateToDay, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get KPI Target Patterns matching search criteria\n    #\n    # + orgUnitXRefCode - Org unit reference code\n    # + kpiXRefCode - KPI reference code\n    # + startDate - Start date\n    # + endDate - End date\n    # + zoneXRefCode - Zone reference code\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - KPI Target Pattern details which matches the supplied parameters \n    resource isolated function get [string clientNamespace]/V1/KpiTargetPattern(string orgUnitXRefCode, string kpiXRefCode, string startDate, string endDate, string? zoneXRefCode \u003d ()) returns Payload_IEnumerable_KpiTargetPattern|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/KpiTargetPattern`;\n        map\u003canydata\u003e queryParam \u003d {\"orgUnitXRefCode\": orgUnitXRefCode, \"kpiXRefCode\": kpiXRefCode, \"startDate\": startDate, \"endDate\": endDate, \"zoneXRefCode\": zoneXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_KpiTargetPattern response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Post KPI Target Pattern for the supplied parameters\n    #\n    # + orgUnitXRefCode - Org unit reference code\n    # + kpiXRefCode - KPI reference code\n    # + isValidateOnly - When a TRUE value is used in this parameter, the POST operation validates the\n    # request without creating records in the database. The default value is FALSE if parameter is not specified\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - If isValidateOnly was passed in as true, this shows that the validation passed. \n    resource isolated function post [string clientNamespace]/V1/KpiTargetPattern(string orgUnitXRefCode, string kpiXRefCode, true isValidateOnly, KpiTargetPatternPOST[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/KpiTargetPattern`;\n        map\u003canydata\u003e queryParam \u003d {\"orgUnitXRefCode\": orgUnitXRefCode, \"kpiXRefCode\": kpiXRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Patch KPI Target Pattern for the supplied parameters\n    #\n    # + orgUnitXRefCode - Org unit reference code\n    # + kpiXRefCode - KPI reference code\n    # + isValidateOnly - When a TRUE value is used in this parameter, the PATCH operation validates the\n    # request without applying the updates to the database. The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - If isValidateOnly was passed in as true, this shows that the validation passed \n    resource isolated function patch [string clientNamespace]/V1/KpiTargetPattern(string orgUnitXRefCode, string kpiXRefCode, true isValidateOnly, KpiTargetPatternPOST[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/KpiTargetPattern`;\n        map\u003canydata\u003e queryParam \u003d {\"orgUnitXRefCode\": orgUnitXRefCode, \"kpiXRefCode\": kpiXRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Labor cost result in the segment of 15 minutes. \n    resource isolated function get [string clientNamespace]/V1/LaborCosts(string locationXRefCode, string businessDate) returns Payload_LaborCostResult|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborCosts`;\n        map\u003canydata\u003e queryParam \u003d {\"locationXRefCode\": locationXRefCode, \"businessDate\": businessDate};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_LaborCostResult response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get Labor Demand Curve details for Org over period\n    #\n    # + orgUnitXRefCode - Org Unit Ref Code\n    # + schedulePeriodStart - start of schedule period\n    # + filterFrom - start of range (optional) - defaults to schedulePeriodStart if not supplied\n    # + filterTo - end of range (optional) - defaults to a week from schedulePeriodStart if not supplied\n    # + zoneXRefCode - filter by Zone Ref Code (optional)\n    # + activityXRefCode - filter by Activity Ref Code (optional)\n    # + laborMeasureXRefCode - filter by Labor Measure Ref Code (optional)\n    # + axisXRefCode - filter by Axis Ref Code (optional)\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Labor demand details which matches the supplied OrgXrefCode and SchedulePeriod \n    resource isolated function get [string clientNamespace]/V1/LaborDemands(string orgUnitXRefCode, string schedulePeriodStart, string? filterFrom \u003d (), string? filterTo \u003d (), string? zoneXRefCode \u003d (), string? activityXRefCode \u003d (), string? laborMeasureXRefCode \u003d (), string? axisXRefCode \u003d ()) returns Payload_LaborDemand|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborDemands`;\n        map\u003canydata\u003e queryParam \u003d {\"orgUnitXRefCode\": orgUnitXRefCode, \"schedulePeriodStart\": schedulePeriodStart, \"filterFrom\": filterFrom, \"filterTo\": filterTo, \"zoneXRefCode\": zoneXRefCode, \"activityXRefCode\": activityXRefCode, \"laborMeasureXRefCode\": laborMeasureXRefCode, \"axisXRefCode\": axisXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_LaborDemand response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Create a set of labor demands for an organization in the defined SchedulePeriod\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Labor Demands have been created \n    resource isolated function post [string clientNamespace]/V1/LaborDemands(true isValidateOnly, LaborDemand payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborDemands`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Deletes Labor Demand Curve details for Org over period\r\n    # Optional will only delete demands matching filters\n    #\n    # + orgUnitXRefCode - Org Unit Ref Code\n    # + schedulePeriodStart - start of schedule period\n    # + filterFrom - start of range (optional) - defaults to schedulePeriodStart if not supplied\n    # + filterTo - end of range (optional) - defaults to a week from schedulePeriodStart if not supplied\n    # + zoneXRefCode - filter by Zone Ref Code (optional)\n    # + activityXRefCode - filter by Activity Ref Code (optional)\n    # + laborMeasureXRefCode - filter by Labor Measure Ref Code (optional)\n    # + axisXRefCode - filter by Axis Ref Code (optional)\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Labor demand details for the supplied OrgXrefCode and SchedulePeriod have been deleted \n    resource isolated function delete [string clientNamespace]/V1/LaborDemands(string orgUnitXRefCode, string schedulePeriodStart, string? filterFrom \u003d (), string? filterTo \u003d (), string? zoneXRefCode \u003d (), string? activityXRefCode \u003d (), string? laborMeasureXRefCode \u003d (), string? axisXRefCode \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborDemands`;\n        map\u003canydata\u003e queryParam \u003d {\"orgUnitXRefCode\": orgUnitXRefCode, \"schedulePeriodStart\": schedulePeriodStart, \"filterFrom\": filterFrom, \"filterTo\": filterTo, \"zoneXRefCode\": zoneXRefCode, \"activityXRefCode\": activityXRefCode, \"laborMeasureXRefCode\": laborMeasureXRefCode, \"axisXRefCode\": axisXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        json response \u003d check self.clientEp-\u003edelete(resourcePath);\n        return response;\n    }\n    # Update a set of labor demands for an organization in the defined SchedulePeriod\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Created \n    resource isolated function patch [string clientNamespace]/V1/LaborDemands(string dayToPatch, true isValidateOnly, LaborDemand payload, string? zoneXRefCode \u003d (), string? activityXRefCode \u003d (), string? laborMeasureXRefCode \u003d (), string? axisXRefCode \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborDemands`;\n        map\u003canydata\u003e queryParam \u003d {\"dayToPatch\": dayToPatch, \"zoneXRefCode\": zoneXRefCode, \"activityXRefCode\": activityXRefCode, \"laborMeasureXRefCode\": laborMeasureXRefCode, \"axisXRefCode\": axisXRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get Labor Metric details\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Labor metric details which matches the XRefCode. \n    resource isolated function get [string clientNamespace]/V1/LaborMetrics/[string xRefCode]() returns Payload_LaborMetricCodes|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborMetrics/${getEncodedUri(xRefCode)}`;\n        Payload_LaborMetricCodes response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Post Insert Labor metrics codes\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - New Labor metrics code data is inserted into Dayforce \n    resource isolated function post [string clientNamespace]/V1/LaborMetrics(true isValidateOnly, LaborMetricsCodesForSubmit payload) returns LaborMetricsCodePostPatchResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborMetrics`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        LaborMetricsCodePostPatchResponse response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Patch (Update) a Labor metrics code\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - Labor metrics code data is updated \n    resource isolated function patch [string clientNamespace]/V1/LaborMetrics(true isValidateOnly, LaborMetricsCodesForSubmit payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborMetrics`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get Labor Metric Type details\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Labor metric type details which matches the XRefCode. \n    resource isolated function get [string clientNamespace]/V1/LaborMetricTypes/[string xRefCode]() returns Payload_LaborMetricType|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborMetricTypes/${getEncodedUri(xRefCode)}`;\n        Payload_LaborMetricType response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST Labor Metric Type details\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - New Labor Metric Type is inserted into Dayforce \n    resource isolated function post [string clientNamespace]/V1/LaborMetricTypes(true isValidateOnly, LaborMetricTypeForSubmit payload) returns LaborMetricTypePatchPostResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborMetricTypes`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        LaborMetricTypePatchPostResponse response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Patch (Update) Labor Metric Type\n    #\n    # + laborMetricTypeXRefCode - Labor Metric Type XRefCode\n    # + isValidateOnly - When a TRUE value is used in this parameter, PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - Labor Metric Type data is updated \n    resource isolated function patch [string clientNamespace]/V1/LaborMetricTypes(string laborMetricTypeXRefCode, true isValidateOnly, LaborMetricTypeForSubmit payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborMetricTypes`;\n        map\u003canydata\u003e queryParam \u003d {\"laborMetricTypeXRefCode\": laborMetricTypeXRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Search results for Labor Validation Policy rules based on parameters \n    resource isolated function post [string clientNamespace]/V1/LaborValidationPolicy/Search(LaborValidationFilters payload, int:Signed32? pageSize \u003d ()) returns PaginatedPayload_IEnumerable_LaborValidationRule|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborValidationPolicy/Search`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        PaginatedPayload_IEnumerable_LaborValidationRule response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Get Labor Validation Policy Rule Details\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Labor Validation Policy rules  which matches the XRefCode \n    resource isolated function get [string clientNamespace]/V1/LaborValidationPolicy/Rule/[string laborValidationPolicyRuleXRefCode]() returns Payload_IEnumerable_LaborValidationRule|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborValidationPolicy/Rule/${getEncodedUri(laborValidationPolicyRuleXRefCode)}`;\n        Payload_IEnumerable_LaborValidationRule response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Delete labor validation policy rules based on xrefcode \n    resource isolated function delete [string clientNamespace]/V1/LaborValidationPolicy/Rule/[string laborValidationPolicyRuleXRefCode]() returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborValidationPolicy/Rule/${getEncodedUri(laborValidationPolicyRuleXRefCode)}`;\n        json response \u003d check self.clientEp-\u003edelete(resourcePath);\n        return response;\n    }\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Post Validation Policy Rule \n    resource isolated function patch [string clientNamespace]/V1/LaborValidationPolicy/Rule/[string laborValidationPolicyRuleXRefCode](true isValidateOnly, LaborValidationRule payload) returns Payload_Boolean|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborValidationPolicy/Rule/${getEncodedUri(laborValidationPolicyRuleXRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_Boolean response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Post Validation Policy Rule \n    resource isolated function post [string clientNamespace]/V1/LaborValidationPolicy/Rule(LaborValidationRule payload) returns Payload_Boolean|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LaborValidationPolicy/Rule`;\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_Boolean response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Get Legacy Labor Metric data\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Legacy labor metric details which matches the Type and XRefCode. \n    resource isolated function get [string clientNamespace]/V1/LegacyLaborMetric(string legacyLaborMetricType, string legacyLaborMetricXRefCode) returns Payload_LegacyLaborMetricCodes|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LegacyLaborMetric`;\n        map\u003canydata\u003e queryParam \u003d {\"legacyLaborMetricType\": legacyLaborMetricType, \"legacyLaborMetricXRefCode\": legacyLaborMetricXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_LegacyLaborMetricCodes response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Post Insert Legacy Labor metrics\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - New Legacy Labor Metric data is inserted into Dayforce \n    resource isolated function post [string clientNamespace]/V1/LegacyLaborMetric(true isValidateOnly, LegacyLaborMetricForSubmit payload) returns LegacyLaborMetricPatchPostDeleteResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LegacyLaborMetric`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        LegacyLaborMetricPatchPostDeleteResponse response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Legacy labor metric details which matches the Type and XRefCode were Deleted. \n    resource isolated function delete [string clientNamespace]/V1/LegacyLaborMetric(string legacyLaborMetricType, string legacyLaborMetricXRefCode) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LegacyLaborMetric`;\n        map\u003canydata\u003e queryParam \u003d {\"legacyLaborMetricType\": legacyLaborMetricType, \"legacyLaborMetricXRefCode\": legacyLaborMetricXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        json response \u003d check self.clientEp-\u003edelete(resourcePath);\n        return response;\n    }\n    # Patch (Update) a Legacy Labor Metric\n    #\n    # + legacyLaborMetricXRefCode - XRefCode\n    # + isValidateOnly - When a TRUE value is used in this parameter, PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - Legacy Labor Metric data is updated \n    resource isolated function patch [string clientNamespace]/V1/LegacyLaborMetric(string legacyLaborMetricXRefCode, true isValidateOnly, LegacyLaborMetricForSubmit payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LegacyLaborMetric`;\n        map\u003canydata\u003e queryParam \u003d {\"legacyLaborMetricXRefCode\": legacyLaborMetricXRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET List of Location Addresses.\n    #\n    # + shortName - Filter the location addresses by their ShortName. The service defaults to NULL if the requester does not specify a value.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of Location Addresses meeting the search criteria, if provided. \n    resource isolated function get [string clientNamespace]/V1/LocationAddresses(string? shortName \u003d (), string? countryCode \u003d (), string? stateProvinceCode \u003d ()) returns Payload_IEnumerable_LocationAddresses|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LocationAddresses`;\n        map\u003canydata\u003e queryParam \u003d {\"ShortName\": shortName, \"CountryCode\": countryCode, \"StateProvinceCode\": stateProvinceCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_LocationAddresses response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST Location Address.\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A Location Address is created with an empty response body. \n    resource isolated function post [string clientNamespace]/V1/LocationAddresses(true isValidateOnly, LocationAddresses payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LocationAddresses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH Location Address.\n    #\n    # + xRefCode - The unique identifier (external reference code) of the position. The value provided must be the exact match for a position; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST (position add) and PATCH (position update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A Location Address is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/LocationAddresses(string xRefCode, true isValidateOnly, LocationAddresses payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/LocationAddresses`;\n        map\u003canydata\u003e queryParam \u003d {\"xRefCode\": xRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET MaritalStatus Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Marital Statuses of employee with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/MaritalStatuses(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeMaritalStatus|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/MaritalStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeMaritalStatus response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a MaritalStatus\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A MaritalStatus is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/MaritalStatuses(true isValidateOnly, EmployeeMaritalStatus payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/MaritalStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a MaritalStatus\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The MaritalStatus is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/MaritalStatuses(true isValidateOnly, EmployeeMaritalStatus payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/MaritalStatuses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    #\n    # + startDate - Date to represent the start of the period for which operating hours should be retrieved. Format yyyy-mm-dd\n    # + endDate - Date to represent the end of the period for which operating hours should be retrieved. Format yyyy-mm-dd\n    # + orgUnitXRefCode - The unique identifier (external reference code) of the organization to be retrieved. The value provided must be the exact match for an organization\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Operating Hours details which matches the supplied OrgUnitXRefCode and date range. \n    resource isolated function get [string clientNamespace]/V1/OperatingHours/GetOperatingHours(string startDate, string endDate, string orgUnitXRefCode) returns Payload_OperatingHours|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/OperatingHours/GetOperatingHours`;\n        map\u003canydata\u003e queryParam \u003d {\"startDate\": startDate, \"endDate\": endDate, \"orgUnitXRefCode\": orgUnitXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_OperatingHours response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - OK \n    resource isolated function post [string clientNamespace]/V1/OperatingHours/PostOperatingHoursException(true isValidateOnly, OperatingHoursExceptionPOST[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/OperatingHours/PostOperatingHoursException`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - OK \n    resource isolated function patch [string clientNamespace]/V1/OperatingHours/PatchOperatingHoursException(true isValidateOnly, OperatingHoursExceptionPOST[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/OperatingHours/PatchOperatingHoursException`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get a list of OrgUnits\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of OrgUnit XRefCodes meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/OrgUnits() returns Payload_IEnumerable_Location|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/OrgUnits`;\n        Payload_IEnumerable_Location response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Add) an OrgUnit\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + calibrateOrg - This parameter accepts TRUE or FALSE values to determine whether the Org Recalculation process is to be triggered. The default value is TRUE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST (orgunit add) and PATCH (orgunit update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Org Unit is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/OrgUnits(true isValidateOnly, Location payload, string? calibrateOrg \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/OrgUnits`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly, \"calibrateOrg\": calibrateOrg};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Get OrgUnit details\n    #\n    # + xrefCode - The unique identifier (external reference code) of the org unit. The value provided must be the exact match for an org unit; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which org unit data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2019-01-01T12:34:56\n    # + expand - This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the orgunit master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document.\n    # + includeChildOrgUnits - When a TRUE value is used in this parameter, the immediate child org units’ information under the org unit being retrieved will be returned as well.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Org Unit with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/OrgUnits/[string xrefCode](string? contextDate \u003d (), string? expand \u003d (), boolean? includeChildOrgUnits \u003d ()) returns Payload_Location|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/OrgUnits/${getEncodedUri(xrefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"expand\": expand, \"includeChildOrgUnits\": includeChildOrgUnits};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_Location response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # PATCH (Update) an OrgUnit\n    #\n    # + xRefCode - The unique identifier (external reference code) of the org unit. The value provided must be the exact match for an org unit; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + replaceExisting - This parameter accepts a comma-separated list of OrgUnit sub-entities where the respective data provided will replace all existing records. This currently applies to OrgUnitLocationTypes sub-entities, which are considered as a list and are not effective dated.\n    # + calibrateOrg - This parameter accepts TRUE or FALSE values to determine whether the Org Recalculation process is to be triggered. The default value is TRUE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST (orgunit add) and PATCH (orgunit update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Org Unit is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/OrgUnits/[string xRefCode](true isValidateOnly, Location payload, string? replaceExisting \u003d (), string? calibrateOrg \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/OrgUnits/${getEncodedUri(xRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly, \"replaceExisting\": replaceExisting, \"calibrateOrg\": calibrateOrg};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET a List of PayClasses\n    #\n    # + contextDate - The Context Date value is an “as-of” date used to determine which PayClass data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of PayClass XRefCodes meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/PayClasses(string? contextDate \u003d ()) returns Payload_IEnumerable_PayClass|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PayClasses`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_PayClass response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get PayClass details\n    #\n    # + xrefCode - The unique identifier (external reference code) of the PayClass to be retrieved.  The value provided must be the exact match for a PayClass; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The PayClass with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/PayClasses/[string xrefCode]() returns Payload_PayClass|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PayClasses/${getEncodedUri(xrefCode)}`;\n        Payload_PayClass response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET List of Third Party Payees.\n    #\n    # + payeeStatus - \u0026gt;Can be Active, InActive or All. The default value is Active.\n    # + payeeXRefCodes - \u0026gt;List of Payee Reference Codes with comma separator to filter the result.\n    # + payeeCategoryXRefCodes - \u0026gt;List of Payee Category Reference Codes with comma separator to filter the result.\n    # + paymentMethodXRefCodes - \u0026gt;List of Pay Method Reference Codes with comma separator to filter the result.\n    # + operatingCountries - \u0026gt;List of country codes with comma separator to filter the result base on country.\n    # + earningPayee - \u0026gt;Set to true to only get Earning Payees.\n    # + deductionPayee - \u0026gt;Set to true to only get Deduction Payees.\n    # + systemPayee - \u0026gt;Set to true to only get System Payees.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - List of payees. \n    resource isolated function get [string clientNamespace]/V1/Payee(string? payeeStatus \u003d (), string? payeeXRefCodes \u003d (), string? payeeCategoryXRefCodes \u003d (), string? paymentMethodXRefCodes \u003d (), string? operatingCountries \u003d (), boolean? earningPayee \u003d (), boolean? deductionPayee \u003d (), boolean? systemPayee \u003d ()) returns Payload_IEnumerable_Payee|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payee`;\n        map\u003canydata\u003e queryParam \u003d {\"PayeeStatus\": payeeStatus, \"PayeeXRefCodes\": payeeXRefCodes, \"PayeeCategoryXRefCodes\": payeeCategoryXRefCodes, \"PaymentMethodXRefCodes\": paymentMethodXRefCodes, \"OperatingCountries\": operatingCountries, \"EarningPayee\": earningPayee, \"DeductionPayee\": deductionPayee, \"SystemPayee\": systemPayee};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_Payee response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST Add Third Party Payees\n    #\n    # + isValidateOnly - If true, only validate the request. Otherwise, validate and save.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - OK response \n    resource isolated function post [string clientNamespace]/V1/Payee(true isValidateOnly, Payee[] payload) returns Payload_List_Payee|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payee`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_List_Payee response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH Update Third Party Payees\n    #\n    # + isValidateOnly - If true, only validate the request. Otherwise, validate and save.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - OK response \n    resource isolated function patch [string clientNamespace]/V1/Payee(true isValidateOnly, Payee[] payload) returns Payload_List_Payee|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payee`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_List_Payee response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET List of Pay Group Calendars.\n    #\n    # + payGroupXRefCode - The pay group\u0027s reference code.\n    # + payDateYear - The pay group calen xdar\u0027s pay date year.\n    # + payDate - The pay group calendar\u0027s pay date.\n    # + periodStartDate - The pay group calendar\u0027s period start date.\n    # + periodEndDate - The pay group calendar\u0027s period end date.\n    # + payPeriod - The pay group calendar\u0027s pay period number.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Pay Group Calendar. \n    resource isolated function get [string clientNamespace]/V1/PayGroupCalendar/[string payGroupXRefCode](boolean? payrollCommitted \u003d (), int:Signed32? payDateYear \u003d (), string? payDate \u003d (), string? periodStartDate \u003d (), string? periodEndDate \u003d (), int:Signed32? payPeriod \u003d ()) returns Payload_PayGroupCalendar|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PayGroupCalendar/${getEncodedUri(payGroupXRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"payrollCommitted\": payrollCommitted, \"payDateYear\": payDateYear, \"payDate\": payDate, \"periodStartDate\": periodStartDate, \"periodEndDate\": periodEndDate, \"payPeriod\": payPeriod};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_PayGroupCalendar response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET List of Employee Elections.\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Employee Payroll Election. \n    resource isolated function get [string clientNamespace]/V1/Payroll/PayrollElection(string? \u0027source \u003d (), string? codeType \u003d (), string? electionStatus \u003d (), string? payGroupXRefCode \u003d (), string? employeeXRefCodes \u003d (), string? employmentStatusXRefCode \u003d (), int:Signed32? pageSize \u003d ()) returns PaginatedPayload_IEnumerable_EmployeePayrollElection|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/PayrollElection`;\n        map\u003canydata\u003e queryParam \u003d {\"source\": \u0027source, \"codeType\": codeType, \"electionStatus\": electionStatus, \"payGroupXRefCode\": payGroupXRefCode, \"employeeXRefCodes\": employeeXRefCodes, \"employmentStatusXRefCode\": employmentStatusXRefCode, \"pageSize\": pageSize};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_EmployeePayrollElection response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST Employee Elections\n    #\n    # + isValidateOnly - If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.\n    # + autoUpdateExisting - If TRUE, all other elections of the same employee will be end-dated. The default value is FALSE.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - OK response \n    resource isolated function post [string clientNamespace]/v1/Payroll/PayrollElections(true isValidateOnly, EmployeePayrollElection[] payload, boolean? autoUpdateExisting \u003d ()) returns Payload_IEnumerable_EmployeePayrollElection|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/v1/Payroll/PayrollElections`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly, \"AutoUpdateExisting\": autoUpdateExisting};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_EmployeePayrollElection response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH Employee Elections\n    #\n    # + isValidateOnly - If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.\n    # + autoUpdateExisting - If TRUE, all other elections of the same employee will be end-dated. The default value is FALSE.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - OK response \n    resource isolated function patch [string clientNamespace]/v1/Payroll/PayrollElections(true isValidateOnly, EmployeePayrollElection[] payload, boolean? autoUpdateExisting \u003d ()) returns Payload_IEnumerable_EmployeePayrollElection|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/v1/Payroll/PayrollElections`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly, \"AutoUpdateExisting\": autoUpdateExisting};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_EmployeePayrollElection response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # PATCH Employee Elections\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - OK response \n    resource isolated function patch [string clientNamespace]/v1/Payroll/DeletePayrollElections(true isValidateOnly, EmployeePayrollElectionDeletionModel[] payload) returns Payload_IEnumerable_EmployeePayrollElectionDeletionModel|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/v1/Payroll/DeletePayrollElections`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_EmployeePayrollElectionDeletionModel response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # POST Import GL Result\n    #\n    # + isValidateOnly - If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - GLResult Import was created successfully, no response body. \n    resource isolated function post [string clientNamespace]/V1/PayrollGL/Import(true isValidateOnly, record{} payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PayrollGL/Import`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # POST Import Time Data\n    #\n    # + isValidateOnly - If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - Time Data Import was created successfully, no response body. \n    resource isolated function post [string clientNamespace]/V1/Payroll/Import/TimeData(true isValidateOnly, record{} payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/Import/TimeData`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # DELETE Import Time Data\n    #\n    # + payGroupXRefCode - The pay group reference code.\n    # + \u0027source - The source of the import.\n    # + periodStartDate - The pay run period start date.\n    # + periodEndDate - The pay run period end date.\n    # + payDate - The pay run pay date.\n    # + ppn - The pay run\u0027s pay period number (format: ##-##).\n    # + orgUnitXRefCode - The user org unit reference code to load data entries from (in org unit hierarchy).\n    # + offCyclePayRunXRefCode - Offcycle pay run XRef Code.\n    # + isValidateOnly - If TRUE, DELETE operations validate the request and IDs. \n    # The default value is FALSE. Note, DELETE operation will only validate data structure.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities ids for DELETE operation.\n    # + return - Time Data Import was deleted successfully, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Payroll/TimeDataDelete/[string payGroupXRefCode](true isValidateOnly, ImportSetModel payload, string? \u0027source \u003d (), string? periodStartDate \u003d (), string? periodEndDate \u003d (), string? payDate \u003d (), string? ppn \u003d (), string? orgUnitXRefCode \u003d (), string? offCyclePayRunXRefCode \u003d ()) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/TimeDataDelete/${getEncodedUri(payGroupXRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"source\": \u0027source, \"periodStartDate\": periodStartDate, \"periodEndDate\": periodEndDate, \"payDate\": payDate, \"ppn\": ppn, \"orgUnitXRefCode\": orgUnitXRefCode, \"offCyclePayRunXRefCode\": offCyclePayRunXRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET the list of Time Data Import Job History with Error info.\n    #\n    # + payGroupXRefCode - The pay group reference code.\n    # + \u0027source - The time data import source name.\n    # + importsFromDate - The time data import history from date.\n    # + importsToDate - The time data import history to date.\n    # + problemsOnly - If true, then return only time data which has errors. If false, then return both error and non error records.\n    # + periodStartDate - The pay run period start date.\n    # + periodEndDate - The pay run period end date.\n    # + payDate - The pay run pay date.\n    # + ppn - The pay run\u0027s pay period number (format: ##-##).\n    # + offCyclePayRunXRefCode - The off cycle pay run reference code.\n    # + importIdentifiers - The comma separated list of import identifiers.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Time data import jobs history. \n    resource isolated function get [string clientNamespace]/V1/Payroll/PayrollPayEntryImportHistory/[string payGroupXRefCode](string? \u0027source \u003d (), string? importsFromDate \u003d (), string? importsToDate \u003d (), boolean? problemsOnly \u003d (), string? periodStartDate \u003d (), string? periodEndDate \u003d (), string? payDate \u003d (), string? ppn \u003d (), string? offCyclePayRunXRefCode \u003d (), string? importIdentifiers \u003d ()) returns Payload_PayrollPayEntryImportHistory|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/PayrollPayEntryImportHistory/${getEncodedUri(payGroupXRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"source\": \u0027source, \"importsFromDate\": importsFromDate, \"importsToDate\": importsToDate, \"problemsOnly\": problemsOnly, \"periodStartDate\": periodStartDate, \"periodEndDate\": periodEndDate, \"payDate\": payDate, \"ppn\": ppn, \"offCyclePayRunXRefCode\": offCyclePayRunXRefCode, \"importIdentifiers\": importIdentifiers};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_PayrollPayEntryImportHistory response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST Quick Entry Items\n    #\n    # + isValidateOnly - If TRUE, POST operations validate the request without queue the import. The default value is FALSE. Note, POST operation will only validate data structure.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation. For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - Quick Entry Import was created successfully, no response body. \n    resource isolated function post [string clientNamespace]/V1/Payroll/Import/QuickEntry(true isValidateOnly, record{} payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/Import/QuickEntry`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH Quick Entry Items\n    #\n    # + isValidateOnly - If TRUE, PATCH operations validate the request without updating the item. The default value is FALSE. Note, PATCH operation will only validate data structure.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Quick Entry Import was updated successfully, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Payroll/QuickEntry(true isValidateOnly, DataEntry[] payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Payroll/QuickEntry`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET List of IPS Tax Authority Instance Details.\n    #\n    # + countryCodes - List of three letter country codes with comma separator to filter the result.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The IPS Tax Authority Instance Details. \n    resource isolated function get [string clientNamespace]/V1/TaxAuthorityInstanceDetails(string? countryCodes \u003d ()) returns Payload_IEnumerable_TaxAuthorityInstanceDetails|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/TaxAuthorityInstanceDetails`;\n        map\u003canydata\u003e queryParam \u003d {\"countryCodes\": countryCodes};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_TaxAuthorityInstanceDetails response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Pay Run Status.\n    #\n    # + payGroupXRefCode - The pay group\u0027s reference code.\n    # + payDate - The pay run\u0027s pay date (format: yyyy-mm-dd).\n    # + periodStartDate - The pay run\u0027s period start date (format: yyyy-mm-dd).\n    # + periodEndDate - The pay run\u0027s period end date (format: yyyy-mm-dd).\n    # + ppn - The PayPeriodNumber(format: ##-##).\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The pay run status. \n    resource isolated function get [string clientNamespace]/V1/PayRunStatus/[string payGroupXRefCode](string? payDate \u003d (), string? periodStartDate \u003d (), string? periodEndDate \u003d (), string? ppn \u003d ()) returns Payload_PayRunStatus|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PayRunStatus/${getEncodedUri(payGroupXRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"payDate\": payDate, \"periodStartDate\": periodStartDate, \"periodEndDate\": periodEndDate, \"ppn\": ppn};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_PayRunStatus response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET a List of PayTypes\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of PayType XRefCodes. \n    resource isolated function get [string clientNamespace]/V1/PayTypes() returns Payload_IEnumerable_PayType|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PayTypes`;\n        Payload_IEnumerable_PayType response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET a PayType with the requested XRefCode.\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The PayType with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/PayTypes/[string xrefCode]() returns Payload_PayType|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PayTypes/${getEncodedUri(xrefCode)}`;\n        Payload_PayType response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET PersonAddress Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The PersonAddress with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Addresses(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_PersonAddress|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Addresses`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_PersonAddress response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a PersonAddress\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A PersonAddress is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/Addresses(true isValidateOnly, PersonAddress payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Addresses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a PersonAddress\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The PersonAddress is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/Addresses(true isValidateOnly, PersonAddress payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Addresses`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET PersonContact Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The PersonContact with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/Contacts(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_PersonContact|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Contacts`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_PersonContact response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a PersonContact\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A PersonContact is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/Contacts(true isValidateOnly, PersonContact payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Contacts`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a PersonContact\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The PersonContact is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/Contacts(true isValidateOnly, PersonContact payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/Contacts`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get Plan Targets matching search criteria\n    #\n    # + planTargetXRefCode - filter by Plan Target Ref Code (optional)\n    # + orgUnitXRefCode - filter by Org Unit Ref Code\n    # + kpiXRefCode - filter by KPI Ref Code (optional)\n    # + zoneXRefCode - filter by Zone Ref Code (optional)\n    # + axisXRefCode - filter by Axis Ref Code (optional)\n    # + isActive - filter only active Plan Targets\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Plan Target details which matches the supplied parameters (or all if none supplied) \n    resource isolated function get [string clientNamespace]/V1/PlanTargets(string? planTargetXRefCode \u003d (), string? orgUnitXRefCode \u003d (), string? kpiXRefCode \u003d (), string? zoneXRefCode \u003d (), string? axisXRefCode \u003d (), boolean? isActive \u003d ()) returns Payload_IEnumerable_PlanTarget|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PlanTargets`;\n        map\u003canydata\u003e queryParam \u003d {\"planTargetXRefCode\": planTargetXRefCode, \"orgUnitXRefCode\": orgUnitXRefCode, \"kpiXRefCode\": kpiXRefCode, \"zoneXRefCode\": zoneXRefCode, \"axisXRefCode\": axisXRefCode, \"isActive\": isActive};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_PlanTarget response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - If isValidateOnly was passed in as true, this shows that the validation passed. \n    resource isolated function post [string clientNamespace]/V1/PlanTargets(true isValidateOnly, PlanTarget payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PlanTargets`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Deletes a plan target matching the supplied XRefCode\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - All matching plan targets were deleted \n    resource isolated function delete [string clientNamespace]/V1/PlanTargets(string planTargetXRefCode) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PlanTargets`;\n        map\u003canydata\u003e queryParam \u003d {\"planTargetXRefCode\": planTargetXRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        json response \u003d check self.clientEp-\u003edelete(resourcePath);\n        return response;\n    }\n    # Amend a Plan Method Target record, plus any child table\r\n    #     entries.\n    #\n    # + isValidateOnly - When a TRUE value is used in \n    # this parameter the PATCH operation validates the\n    # request without applying the updates to the database.\n    # The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The details of the \n    # + return - If isValidateOnly was passed in as true, this shows that the validation passed. \n    resource isolated function patch [string clientNamespace]/V1/PlanTargets(string planTargetXRefCode, true isValidateOnly, PlanTarget payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/PlanTargets`;\n        map\u003canydata\u003e queryParam \u003d {\"planTargetXRefCode\": planTargetXRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get a list of Positions\n    #\n    # + contextDate - The Context Date value is an “as-of” date used to determine which Position data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2019-01-01T12:34:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of Position XRefCodes meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/Positions(string? contextDate \u003d ()) returns Payload_IEnumerable_Position|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Positions`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_Position response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Add) a Position\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST (position add) and PATCH (position update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A Position is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Positions(true isValidateOnly, Position payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Positions`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Get Position details\n    #\n    # + xrefCode - The unique identifier (external reference code) of the Position. The value provided must be the exact match for a Position; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which Position data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2019-01-01T12:34:56\n    # + expand - This parameter accepts a comma-separated list of top-level entities that contain the data elements needed for downstream processing.  When this parameter is not used, only data elements from the position master record will be included.  For more information, please refer to the Introduction to Dayforce Web Services document.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Position with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Positions/[string xrefCode](string? contextDate \u003d (), string? expand \u003d ()) returns Payload_Position|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Positions/${getEncodedUri(xrefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"expand\": expand};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_Position response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # PATCH (Update) a Position\n    #\n    # + xRefCode - The unique identifier (external reference code) of the position. The value provided must be the exact match for a position; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying the updates to the database.  The default value is FALSE if parameter is not specified.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST (position add) and PATCH (position update) operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - A Position is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Positions/[string xRefCode](true isValidateOnly, Position payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Positions/${getEncodedUri(xRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET GLSplit Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The GLSplit with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/GLSplits(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_PRGLSplitSet|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/GLSplits`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_PRGLSplitSet response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get a list of client projects meeting the search criteria\n    #\n    # + shortName - Project Name\n    # + longName - Project Description\n    # + pageSize - The number of records returned per page in the paginated response\n    # + projectClientXRefCode - This field identifies a unique Project Client\n    # + projectTypeXRefCode - This field identifies a unique Project Type\n    # + projectPhaseXRefCode - This field identifies a unique Project Phase\n    # + productGroupXRefCode - This field identifies a unique Product Group\n    # + productModuleXRefCode - This field identifies a unique Product Module\n    # + creationOrgUnitXRefCode - Use to search for projects based on Organizational units\u0027 xrefcode\n    # + lastModifedStartDate - The Start date used when searching for projects with updates in a specified timeframe\n    # + lastModifedEndDate - The End date used when searching for projects with updates in a specified timeframe\n    # + filterStartDateFrom - Use to search for projects with Start date values greater than or equal to the specified value\n    # + filterStartDateTo - Use to search for projects with Start date values less than or equal to the specified value\n    # + filterDueDateFrom - Use to search for projects with Due Date  values greater than or equal to the specified value\n    # + filterDueDateTo - Use to search for projects with Due Date  values less than or equal to the specified value\n    # + filterCompletedDateFrom - Use to search for projects with Completed Date values greater than or equal to the specified value\n    # + filterCompletedDateTo - Use to search for Projects with Completed Date values less than or equal to the specified value\n    # + certifiedPayrollProjectNumber - Use to search for projects with certifiedPayrollProjectNumber\n    # + parentProjectXRefCode - Use to search for projects with immediate Parent Project\n    # + isDeleted - This filters the projects based on those are deleted or not\n    # + clockTransferCode - Use to search for Projects with Clock Code\n    # + filterProjectPriorityFrom - Use to search for projects with Project Priority value greater than or equal to the specified value. When a value is provided for this parameter filterProjectPriorityTo value must also be provided.\n    # + filterProjectPriorityTo - Use to search for Projects  with Project Priority values less than or equal to the specified value. When a value is provided for this parameter filterProjectPriorityFrom value must also be provided.\n    # + filterBudgetHoursFrom - Use to search for projects with Budget Hours value greater than or equal to the specified value. When a value is provided for this parameter filterBudgetHoursTo value must also be provided.\n    # + filterBudgetHoursTo - Use to search for Projects  with Budget Hours values less than or equal to the specified value. When a value is provided for this parameter filterBudgetHoursFrom value must also be provided.\n    # + filterBudgetAmountFrom - Use to search for projects with Budget Amount value greater than or equal to the specified value. When a value is provided for this parameter filterBudgetAmountTo value must also be provided.\n    # + filterBudgetAmountTo - Use to search for Projects  with Budget Amount values less than or equal to the specified value. When a value is provided for this parameter filterBudgetAmountFrom value must also be provided.\n    # + filterPctCompleteFrom - Use to search for projects with Percent Complete value greater than or equal to the specified value. When a value is provided for this parameter filterPctCompleteTo value must also be provided.\n    # + filterPctCompleteTo - Use to search for Projects  with Percent Complete values less than or equal to the specified value. When a value is provided for this parameter filterPctCompleteFrom value must also be provided.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of client project data meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/Projects(string? shortName \u003d (), string? longName \u003d (), int:Signed32? pageSize \u003d (), string? projectClientXRefCode \u003d (), string? projectTypeXRefCode \u003d (), string? projectPhaseXRefCode \u003d (), string? productGroupXRefCode \u003d (), string? productModuleXRefCode \u003d (), string? creationOrgUnitXRefCode \u003d (), string? lastModifedStartDate \u003d (), string? lastModifedEndDate \u003d (), string? filterStartDateFrom \u003d (), string? filterStartDateTo \u003d (), string? filterDueDateFrom \u003d (), string? filterDueDateTo \u003d (), string? filterCompletedDateFrom \u003d (), string? filterCompletedDateTo \u003d (), int:Signed32? certifiedPayrollProjectNumber \u003d (), string? parentProjectXRefCode \u003d (), boolean? isDeleted \u003d (), string? ledgerCode \u003d (), string? clockTransferCode \u003d (), string? accountNum \u003d (), boolean? iFRSClassification \u003d (), int:Signed32? filterProjectPriorityFrom \u003d (), int:Signed32? filterProjectPriorityTo \u003d (), decimal? filterBudgetHoursFrom \u003d (), decimal? filterBudgetHoursTo \u003d (), decimal? filterBudgetAmountFrom \u003d (), decimal? filterBudgetAmountTo \u003d (), decimal? filterPctCompleteFrom \u003d (), decimal? filterPctCompleteTo \u003d ()) returns PaginatedPayload_IEnumerable_BaseProject|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Projects`;\n        map\u003canydata\u003e queryParam \u003d {\"shortName\": shortName, \"longName\": longName, \"pageSize\": pageSize, \"projectClientXRefCode\": projectClientXRefCode, \"projectTypeXRefCode\": projectTypeXRefCode, \"projectPhaseXRefCode\": projectPhaseXRefCode, \"productGroupXRefCode\": productGroupXRefCode, \"productModuleXRefCode\": productModuleXRefCode, \"creationOrgUnitXRefCode\": creationOrgUnitXRefCode, \"lastModifedStartDate\": lastModifedStartDate, \"lastModifedEndDate\": lastModifedEndDate, \"filterStartDateFrom\": filterStartDateFrom, \"filterStartDateTo\": filterStartDateTo, \"filterDueDateFrom\": filterDueDateFrom, \"filterDueDateTo\": filterDueDateTo, \"filterCompletedDateFrom\": filterCompletedDateFrom, \"filterCompletedDateTo\": filterCompletedDateTo, \"certifiedPayrollProjectNumber\": certifiedPayrollProjectNumber, \"parentProjectXRefCode\": parentProjectXRefCode, \"isDeleted\": isDeleted, \"ledgerCode\": ledgerCode, \"clockTransferCode\": clockTransferCode, \"accountNum\": accountNum, \"iFRSClassification\": iFRSClassification, \"filterProjectPriorityFrom\": filterProjectPriorityFrom, \"filterProjectPriorityTo\": filterProjectPriorityTo, \"filterBudgetHoursFrom\": filterBudgetHoursFrom, \"filterBudgetHoursTo\": filterBudgetHoursTo, \"filterBudgetAmountFrom\": filterBudgetAmountFrom, \"filterBudgetAmountTo\": filterBudgetAmountTo, \"filterPctCompleteFrom\": filterPctCompleteFrom, \"filterPctCompleteTo\": filterPctCompleteTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_BaseProject response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Insert) new Projects data into Dayforce\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - New Projects data is inserted into Dayforce \n    resource isolated function post [string clientNamespace]/V1/Projects(true isValidateOnly, ProjectForSubmit payload) returns ProjectsPostResponse|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Projects`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        ProjectsPostResponse response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Patch (Update) a project\n    #\n    # + projectXRefCode - Project XRefCode\n    # + isValidateOnly - When a TRUE value is used in this parameter, PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in PATCH operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - Project data is updated \n    resource isolated function patch [string clientNamespace]/V1/Projects(string projectXRefCode, true isValidateOnly, ProjectForSubmit payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Projects`;\n        map\u003canydata\u003e queryParam \u003d {\"projectXRefCode\": projectXRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get project details\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Project details which matches with the XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Projects/[string xRefCode]() returns Payload_Projects|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Projects/${getEncodedUri(xRefCode)}`;\n        Payload_Projects response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET a List of Report Metadata\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Metadata for all Reports \n    resource isolated function get [string clientNamespace]/V1/ReportMetadata() returns Payload_IEnumerable_ReportMetadata|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ReportMetadata`;\n        Payload_IEnumerable_ReportMetadata response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Report Metadata for the given XRefCode\n    #\n    # + xRefCode - The unique identifier (external reference code) of the report to be retrieved.  The value provided must be the exact match for an report; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The Metadata for the Report matching the requested XRefCode \n    resource isolated function get [string clientNamespace]/V1/ReportMetadata/[string xRefCode]() returns Payload_IEnumerable_ReportMetadata|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/ReportMetadata/${getEncodedUri(xRefCode)}`;\n        Payload_IEnumerable_ReportMetadata response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # GET Report\n    #\n    # + xRefCode - The unique identifier (external reference code) of the report to be retrieved.  The value provided must be the exact match for an report; otherwise, a bad request (400) error will be returned.\n    # + pageSize - The number of records returned per page in the paginated response\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + reportParameters - A list of key value pairs for those reports which take as input user supplied parameter values.\n    # + return - report that match the given request \n    resource isolated function get [string clientNamespace]/V1/Reports/[string xRefCode](int:Signed32? pageSize \u003d (), record {}? reportParameters \u003d ()) returns PaginatedPayload_Report|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Reports/${getEncodedUri(xRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize, \"reportParameters\": reportParameters};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_Report response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Get List of Unfilled Shift Bids for Employee\n    #\n    # + orgUnitXRefCode - The unique identifier (external reference code) of the organization to be retrieved. The value provided must be the exact match for an organization\n    # + employeeXRefCode - The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + scheduleStartDate - Date to represent the start of the schedule period for which Shift Bids should be retrieved\n    # + scheduleEndDate - Date to represent the end of the schedule period for which Shift Bids should be retrieved\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A Collection of Open Shift Bids. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string employeeXRefCode]/UnfilledShiftBids(string orgUnitXRefCode, string scheduleStartDate, string scheduleEndDate) returns Payload_IEnumerable_EmployeeSchedule|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(employeeXRefCode)}/UnfilledShiftBids`;\n        map\u003canydata\u003e queryParam \u003d {\"OrgUnitXRefCode\": orgUnitXRefCode, \"ScheduleStartDate\": scheduleStartDate, \"ScheduleEndDate\": scheduleEndDate};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeSchedule response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Create) Employee Shift Bids. Employee Request or Revoke Shift Bid Request.\n    #\n    # + orgUnitXRefCode - The unique identifier (external reference code) of the organization to be retrieved. The value provided must be the exact match for an organization\n    # + employeeXRefCode - The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validates the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Specifies an employee bid request/revocation was successful. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string employeeXRefCode]/UnfilledShiftBids(string orgUnitXRefCode, true isValidateOnly, EmployeeShiftBidDTO payload) returns Payload_IEnumerable_ProcessResult|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(employeeXRefCode)}/UnfilledShiftBids`;\n        map\u003canydata\u003e queryParam \u003d {\"OrgUnitXRefCode\": orgUnitXRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_ProcessResult response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # Get List of Shift Bids\n    #\n    # + orgUnitXRefCode - The unique identifier (external reference code) of the organization to be retrieved. The value provided must be the exact match for an organization\n    # + scheduleStartDate - Date to represent the start of the schedule period for which Shift Bids should be retrieved\n    # + scheduleEndDate - Date to represent the end of the schedule period for which Shift Bids should be retrieved\n    # + activeBids - Specifies whether to return bids with or without active employee bid requests. When no value is supplied, all shift bids will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A Collection of Shift Bids \n    resource isolated function get [string clientNamespace]/V1/Organization/[string orgUnitXRefCode]/UnfilledShiftBids(string scheduleStartDate, string scheduleEndDate, boolean? activeBids \u003d ()) returns Payload_IEnumerable_ManagerShiftBid|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Organization/${getEncodedUri(orgUnitXRefCode)}/UnfilledShiftBids`;\n        map\u003canydata\u003e queryParam \u003d {\"ScheduleStartDate\": scheduleStartDate, \"ScheduleEndDate\": scheduleEndDate, \"ActiveBids\": activeBids};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_ManagerShiftBid response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # Manager assignment of shift to an employee who has bid for a specific group schedule.\r\n    # Notifies awarded bidder.\r\n    # Notifies rejected bidder.\n    #\n    # + orgUnitXRefCode - The unique identifier (external reference code) of the organization to be retrieved. The value provided must be the exact match for an organization\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - Assigns shift bid to bidding employee \n    resource isolated function post [string clientNamespace]/V1/Organization/[string orgUnitXRefCode]/UnfilledShiftBid(true isValidateOnly, ManagerAssignShiftBidDTO[] payload, 0|1|2|3|4? violationLevel \u003d ()) returns Payload_IEnumerable_EmployeeSchedule|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Organization/${getEncodedUri(orgUnitXRefCode)}/UnfilledShiftBid`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly, \"violationLevel\": violationLevel};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_EmployeeSchedule response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET the list of all skills\n    #\n    # + pageSize - The page size for the pagination (Default is 1000)\n    # + xRefCode - The xrefcode filter for the skill\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of skills \n    resource isolated function get [string clientNamespace]/V1/Skills(int:Signed32? pageSize \u003d (), string? xRefCode \u003d ()) returns PaginatedPayload_IEnumerable_Skill|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Skills`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize, \"xRefCode\": xRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_Skill response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST one skill\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The skill payload used for skill creation\n    # + return - The skill created \n    resource isolated function post [string clientNamespace]/V1/Skills(true isValidateOnly, Skill payload) returns Payload_IEnumerable_Skill|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Skills`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_Skill response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH one skill\n    #\n    # + xRefCode - The xRefCode of the skill to be updated\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The skill payload used for skill modification\n    # + return - The skill updated \n    resource isolated function patch [string clientNamespace]/V1/Skills(string xRefCode, true isValidateOnly, Skill payload) returns Payload_IEnumerable_Skill|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Skills`;\n        map\u003canydata\u003e queryParam \u003d {\"xRefCode\": xRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_Skill response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET List of Employee Time Away From Work\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee to be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + filterTAFWStartDate - Inclusive period start date to determine which employee time away from work data to retrieve. Format: YYYY-MM-DD\n    # + filterTAFWEndDate - Inclusive period end date to determine which employee time away from work data to retrieve. Format: YYYY-MM-DD\n    # + status - A case-sensitive field containing status for time away from work values. Examples: [APPROVED,PENDING,CANCELED,DENIED,CANCELPENDING]\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of employee time away from work meeting the search criteria. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/TimeAwayFromWork(string filterTAFWStartDate, string filterTAFWEndDate, string status) returns Payload_IEnumerable_EmployeeTimeAwayFromWork|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/TimeAwayFromWork`;\n        map\u003canydata\u003e queryParam \u003d {\"filterTAFWStartDate\": filterTAFWStartDate, \"filterTAFWEndDate\": filterTAFWEndDate, \"status\": status};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeTimeAwayFromWork response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST (Create) Employee Time Away From Work\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee Time Away From Work is created. \n    resource isolated function post [string clientNamespace]/V1/TimeOff(true isValidateOnly, EmployeeTimeAwayFromWorkForSubmit payload) returns Payload_EmployeeTimeAwayFromWorkForSubmit|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/TimeOff`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_EmployeeTimeAwayFromWorkForSubmit response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH (Update) Employee Time Away From Work\n    #\n    # + xRefCode - The unique identifier (external reference code) of the time away from work to be retrieved. The value provided must be the exact match for a time away from work; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST operation.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An Employee Time Away From Work is updated. \n    resource isolated function patch [string clientNamespace]/V1/TimeOff/[string xRefCode](true isValidateOnly, EmployeeTimeAwayFromWorkForSubmit payload) returns Payload_IEnumerable_EmployeeTimeAwayFromWorkForSubmit|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/TimeOff/${getEncodedUri(xRefCode)}`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        Payload_IEnumerable_EmployeeTimeAwayFromWorkForSubmit response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # Get a list of or one Training Program detail\n    #\n    # + pageSize - The page size for the pagination (Default is 1000)\n    # + xRefCode - The xrefcode filter for the Training Program\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - A collection of Training Program \n    resource isolated function get [string clientNamespace]/V1/TrainingPrograms(int:Signed32? pageSize \u003d (), string? xRefCode \u003d ()) returns PaginatedPayload_IEnumerable_TrainingProgram|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/TrainingPrograms`;\n        map\u003canydata\u003e queryParam \u003d {\"pageSize\": pageSize, \"xRefCode\": xRefCode};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        PaginatedPayload_IEnumerable_TrainingProgram response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST one training program\n    #\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST operation validate the request without applying the changes to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The training program payload that will be used for training program creation\n    # + return - A training program is created, no response body \n    resource isolated function post [string clientNamespace]/V1/TrainingPrograms(true isValidateOnly, TrainingProgram payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/TrainingPrograms`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH one training program\n    #\n    # + xRefCode - The course xRefCode to be updated\n    # + isValidateOnly - When a TRUE value is used in this parameter, PATCH operation validate the request without applying the changes to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The training program payload that will be used for training program creation\n    # + return - A training program is updated, no response body \n    resource isolated function patch [string clientNamespace]/V1/TrainingPrograms(string xRefCode, true isValidateOnly, TrainingProgram payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/TrainingPrograms`;\n        map\u003canydata\u003e queryParam \u003d {\"xRefCode\": xRefCode, \"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    #\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - OK \n    resource isolated function post [string clientNamespace]/V1/TransmissionService() returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/TransmissionService`;\n        http:Request request \u003d new;\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # GET UserPayAdjCodeGroup Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The UserPayAdjCodeGroup with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/UserPayAdjustCodeGroups() returns Payload_IEnumerable_UserPayAdjustCodeGroup|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UserPayAdjustCodeGroups`;\n        Payload_IEnumerable_UserPayAdjustCodeGroup response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a UserPayAdjCodeGroup\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The UserPayAdjCodeGroup is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/UserPayAdjustCodeGroups(true isValidateOnly, UserPayAdjustCodeGroup payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UserPayAdjustCodeGroups`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a UserPayAdjCodeGroup\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The UserPayAdjCodeGroup is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/UserPayAdjustCodeGroups(true isValidateOnly, UserPayAdjustCodeGroup payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/UserPayAdjustCodeGroups`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n    # GET EmployeeWorkContract Details\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee whose data will be retrieved.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + contextDate - The Context Date value is an “as-of” date used to determine which employee data to search when records have specific start and end dates.  The service defaults to the current datetime if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeFrom - The Context Date Range From value is the start of the range of dates used to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + contextDateRangeTo - The Context Date Range To value is the end of the range of dates to determine which employee data to search when records have specific start and end dates.  The service defaults to null if the requester does not specify a value.  Example: 2017-01-01T13:24:56\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + return - The EmployeeWorkContract with the requested XRefCode. \n    resource isolated function get [string clientNamespace]/V1/Employees/[string xRefCode]/WorkContracts(string? contextDate \u003d (), string? contextDateRangeFrom \u003d (), string? contextDateRangeTo \u003d ()) returns Payload_IEnumerable_EmployeeWorkContract|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/WorkContracts`;\n        map\u003canydata\u003e queryParam \u003d {\"contextDate\": contextDate, \"contextDateRangeFrom\": contextDateRangeFrom, \"contextDateRangeTo\": contextDateRangeTo};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        Payload_IEnumerable_EmployeeWorkContract response \u003d check self.clientEp-\u003eget(resourcePath);\n        return response;\n    }\n    # POST a EmployeeWorkContract\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - An EmployeeWorkContract is created, no response body. \n    resource isolated function post [string clientNamespace]/V1/Employees/[string xRefCode]/WorkContracts(true isValidateOnly, EmployeeWorkContract payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/WorkContracts`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epost(resourcePath, request);\n        return response;\n    }\n    # PATCH a EmployeeWorkContract\n    #\n    # + xRefCode - The unique identifier (external reference code) of the employee for whom the subordinate data will be updated.  The value provided must be the exact match for an employee; otherwise, a bad request (400) error will be returned.\n    # + isValidateOnly - When a TRUE value is used in this parameter, POST and PATCH operations validate the request without applying updates to the database.\n    # + clientNamespace - Uniquely identifies the client\u0027s Dayforce instance. Is needed to login.\n    # + payload - The JSON-formatted content containing the data entities and elements to be processed in POST and PATCH operations.  For more information and examples, please refer to the Dayforce Web Services RESTful Developer\u0027s Guide.\n    # + return - The EmployeeWorkContract is updated, no response body. \n    resource isolated function patch [string clientNamespace]/V1/Employees/[string xRefCode]/WorkContracts(true isValidateOnly, EmployeeWorkContract payload) returns json|error {\n        string resourcePath \u003d string `/${getEncodedUri(clientNamespace)}/V1/Employees/${getEncodedUri(xRefCode)}/WorkContracts`;\n        map\u003canydata\u003e queryParam \u003d {\"isValidateOnly\": isValidateOnly};\n        resourcePath \u003d resourcePath + check getPathForQueryParam(queryParam);\n        http:Request request \u003d new;\n        json jsonBody \u003d payload.toJson();\n        request.setPayload(jsonBody, \"application/json\");\n        json response \u003d check self.clientEp-\u003epatch(resourcePath, request);\n        return response;\n    }\n}\n"},{"name":"utils.bal","coveredLines":[11,13,18,159,160,161,165,172,173,174,175,176,177,178,179,197,199,200,201],"missedLines":[0,31,32,33,34,35,36,37,38,39,40,41,42,43,45,47,48,49,57,58,59,60,61,62,63,64,65,66,68,70,72,73,74,75,76,77,78,80,82,84,85,94,95,96,97,98,99,100,101,103,104,105,106,108,109,110,111,113,114,115,118,119,122,124,125,134,135,136,137,138,139,140,143,144,146,147,150,151,152,163,181,182,183,184,185,186,187,188,190,193,195],"coveragePercentage":17.27,"sourceCode":"// AUTO-GENERATED FILE. DO NOT MODIFY.\n// This file is auto-generated by the Ballerina OpenAPI tool.\n\nimport ballerina/url;\n\ntype SimpleBasicType string|boolean|int|float|decimal;\n\n# Represents encoding mechanism details.\ntype Encoding record {\n    # Defines how multiple values are delimited\n    string style \u003d FORM;\n    # Specifies whether arrays and objects should generate as separate fields\n    boolean explode \u003d true;\n    # Specifies the custom content type\n    string contentType?;\n    # Specifies the custom headers\n    map\u003cany\u003e headers?;\n};\n\nenum EncodingStyle {\n    DEEPOBJECT, FORM, SPACEDELIMITED, PIPEDELIMITED\n}\n\nfinal Encoding \u0026 readonly defaultEncoding \u003d {};\n\n# Serialize the record according to the deepObject style.\n#\n# + parent - Parent record name\n# + anyRecord - Record to be serialized\n# + return - Serialized record as a string\nisolated function getDeepObjectStyleRequest(string parent, record {} anyRecord) returns string {\n    string[] recordArray \u003d [];\n    foreach [string, anydata] [key, value] in anyRecord.entries() {\n        if value is SimpleBasicType {\n            recordArray.push(parent + \"[\" + key + \"]\" + \"\u003d\" + getEncodedUri(value.toString()));\n        } else if value is SimpleBasicType[] {\n            recordArray.push(getSerializedArray(parent + \"[\" + key + \"]\" + \"[]\", value, DEEPOBJECT, true));\n        } else if value is record {} {\n            string nextParent \u003d parent + \"[\" + key + \"]\";\n            recordArray.push(getDeepObjectStyleRequest(nextParent, value));\n        } else if value is record {}[] {\n            string nextParent \u003d parent + \"[\" + key + \"]\";\n            recordArray.push(getSerializedRecordArray(nextParent, value, DEEPOBJECT));\n        }\n        recordArray.push(\"\u0026\");\n    }\n    _ \u003d recordArray.pop();\n    return string:\u0027join(\"\", ...recordArray);\n}\n\n# Serialize the record according to the form style.\n#\n# + parent - Parent record name\n# + anyRecord - Record to be serialized\n# + explode - Specifies whether arrays and objects should generate separate parameters\n# + return - Serialized record as a string\nisolated function getFormStyleRequest(string parent, record {} anyRecord, boolean explode \u003d true) returns string {\n    string[] recordArray \u003d [];\n    if explode {\n        foreach [string, anydata] [key, value] in anyRecord.entries() {\n            if (value is SimpleBasicType) {\n                recordArray.push(key, \"\u003d\", getEncodedUri(value.toString()));\n            } else if (value is SimpleBasicType[]) {\n                recordArray.push(getSerializedArray(key, value, explode \u003d explode));\n            } else if (value is record {}) {\n                recordArray.push(getFormStyleRequest(parent, value, explode));\n            }\n            recordArray.push(\"\u0026\");\n        }\n        _ \u003d recordArray.pop();\n    } else {\n        foreach [string, anydata] [key, value] in anyRecord.entries() {\n            if (value is SimpleBasicType) {\n                recordArray.push(key, \",\", getEncodedUri(value.toString()));\n            } else if (value is SimpleBasicType[]) {\n                recordArray.push(getSerializedArray(key, value, explode \u003d false));\n            } else if (value is record {}) {\n                recordArray.push(getFormStyleRequest(parent, value, explode));\n            }\n            recordArray.push(\",\");\n        }\n        _ \u003d recordArray.pop();\n    }\n    return string:\u0027join(\"\", ...recordArray);\n}\n\n# Serialize arrays.\n#\n# + arrayName - Name of the field with arrays\n# + anyArray - Array to be serialized\n# + style - Defines how multiple values are delimited\n# + explode - Specifies whether arrays and objects should generate separate parameters\n# + return - Serialized array as a string\nisolated function getSerializedArray(string arrayName, anydata[] anyArray, string style \u003d \"form\", boolean explode \u003d true) returns string {\n    string key \u003d arrayName;\n    string[] arrayValues \u003d [];\n    if (anyArray.length() \u003e 0) {\n        if (style \u003d\u003d FORM \u0026\u0026 !explode) {\n            arrayValues.push(key, \"\u003d\");\n            foreach anydata i in anyArray {\n                arrayValues.push(getEncodedUri(i.toString()), \",\");\n            }\n        } else if (style \u003d\u003d SPACEDELIMITED \u0026\u0026 !explode) {\n            arrayValues.push(key, \"\u003d\");\n            foreach anydata i in anyArray {\n                arrayValues.push(getEncodedUri(i.toString()), \"%20\");\n            }\n        } else if (style \u003d\u003d PIPEDELIMITED \u0026\u0026 !explode) {\n            arrayValues.push(key, \"\u003d\");\n            foreach anydata i in anyArray {\n                arrayValues.push(getEncodedUri(i.toString()), \"|\");\n            }\n        } else if (style \u003d\u003d DEEPOBJECT) {\n            foreach anydata i in anyArray {\n                arrayValues.push(key, \"[]\", \"\u003d\", getEncodedUri(i.toString()), \"\u0026\");\n            }\n        } else {\n            foreach anydata i in anyArray {\n                arrayValues.push(key, \"\u003d\", getEncodedUri(i.toString()), \"\u0026\");\n            }\n        }\n        _ \u003d arrayValues.pop();\n    }\n    return string:\u0027join(\"\", ...arrayValues);\n}\n\n# Serialize the array of records according to the form style.\n#\n# + parent - Parent record name\n# + value - Array of records to be serialized\n# + style - Defines how multiple values are delimited\n# + explode - Specifies whether arrays and objects should generate separate parameters\n# + return - Serialized record as a string\nisolated function getSerializedRecordArray(string parent, record {}[] value, string style \u003d FORM, boolean explode \u003d true) returns string {\n    string[] serializedArray \u003d [];\n    if style \u003d\u003d DEEPOBJECT {\n        int arayIndex \u003d 0;\n        foreach var recordItem in value {\n            serializedArray.push(getDeepObjectStyleRequest(parent + \"[\" + arayIndex.toString() + \"]\", recordItem), \"\u0026\");\n            arayIndex \u003d arayIndex + 1;\n        }\n    } else {\n        if (!explode) {\n            serializedArray.push(parent, \"\u003d\");\n        }\n        foreach var recordItem in value {\n            serializedArray.push(getFormStyleRequest(parent, recordItem, explode), \",\");\n        }\n    }\n    _ \u003d serializedArray.pop();\n    return string:\u0027join(\"\", ...serializedArray);\n}\n\n# Get Encoded URI for a given value.\n#\n# + value - Value to be encoded\n# + return - Encoded string\nisolated function getEncodedUri(anydata value) returns string {\n    string|error encoded \u003d url:encode(value.toString(), \"UTF8\");\n    if (encoded is string) {\n        return encoded;\n    } else {\n        return value.toString();\n    }\n}\n\n# Generate query path with query parameter.\n#\n# + queryParam - Query parameter map\n# + encodingMap - Details on serialization mechanism\n# + return - Returns generated Path or error at failure of client initialization\nisolated function getPathForQueryParam(map\u003canydata\u003e queryParam, map\u003cEncoding\u003e encodingMap \u003d {}) returns string|error {\n    string[] param \u003d [];\n    if (queryParam.length() \u003e 0) {\n        param.push(\"?\");\n        foreach var [key, value] in queryParam.entries() {\n            if value is () {\n                _ \u003d queryParam.remove(key);\n                continue;\n            }\n            Encoding encodingData \u003d encodingMap.hasKey(key) ? encodingMap.get(key) : defaultEncoding;\n            if (value is SimpleBasicType) {\n                param.push(key, \"\u003d\", getEncodedUri(value.toString()));\n            } else if (value is SimpleBasicType[]) {\n                param.push(getSerializedArray(key, value, encodingData.style, encodingData.explode));\n            } else if (value is record {}) {\n                if (encodingData.style \u003d\u003d DEEPOBJECT) {\n                    param.push(getDeepObjectStyleRequest(key, value));\n                } else {\n                    param.push(getFormStyleRequest(key, value, encodingData.explode));\n                }\n            } else {\n                param.push(key, \"\u003d\", value.toString());\n            }\n            param.push(\"\u0026\");\n        }\n        _ \u003d param.pop();\n    }\n    string restOfPath \u003d string:\u0027join(\"\", ...param);\n    return restOfPath;\n}\n"}]}]}